;; Object scripts/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "scripts/"
  :tables
  (list
    (semanticdb-table "tre-continent"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
Reads json in the phylogenetic-tree-v1 format produced by newick2json,
updates it with continent for each leaf node using acmacs API, dumps
resulting json.
\"\"\"" code nil nil [1492 1655])
            ("sys" include nil nil [1657 1667])
            ("if" code nil nil [1668 1746])
            ("lzma" include nil nil [1746 1825])
            ("datetime" include nil nil [1746 1825])
            ("logging" include nil nil [1746 1825])
            ("pprint" include nil nil [1746 1825])
            ("traceback" include nil nil [1746 1825])
            ("json" include nil nil [1746 1825])
            ("urllib.request" include nil nil [1746 1825])
            ("re" include nil nil [1746 1825])
            ("os" include nil nil [1746 1825])
            ("main" function (:arguments 
              ( ("options" variable nil (reparse-symbol function_parameters) [1910 1917])
                ("source_file" variable nil (reparse-symbol function_parameters) [1919 1930])
                ("result_file" variable nil (reparse-symbol function_parameters) [1932 1943]))              ) nil [1901 3096])
            ("collect_names" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [3189 3193]))              ) nil [3171 3343])
            ("add_continents" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [3437 3441])
                ("mapping" variable nil (reparse-symbol function_parameters) [3443 3450])
                ("decoded_names" variable nil (reparse-symbol function_parameters) [3452 3465]))              ) nil [3418 3791])
            ("CommandError" type
               (:documentation "Raised by api._execute if command resposne contains error and raise_error flag is set."
                :superclasses ("Exception")
                :type "class")
                nil [3866 3995])
            ("API" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [4151 4179]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4099 4103])
                            ("url_prefix" variable nil (reparse-symbol function_parameters) [4105 4115]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4086 4180])
                    ("execute" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4197 4201])
                            ("command" variable nil (reparse-symbol function_parameters) [4203 4210]))                          )
                        (reparse-symbol indented_block_body) [4185 4483])
                    ("_execute_http" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4506 4510])
                            ("command" variable nil (reparse-symbol function_parameters) [4512 4519]))                          )
                        (reparse-symbol indented_block_body) [4488 5060]))                  
                :type "class")
                nil [4070 5060])
            ("sReDecodeName" variable nil nil [5135 5170])
            ("decode_name" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [5188 5192]))              ) nil [5172 5234])
            ("load_tree" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [5323 5331]))              ) nil [5309 5781])
            ("save_tree" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [5870 5878])
                ("data" variable nil (reparse-symbol function_parameters) [5880 5884]))              ) nil [5856 6328])
            ("backup_file" function
               (:documentation "Backup the file, if it exists. Backups versioning is supported."
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [6419 6427])
                    ("backup_dir" variable nil (reparse-symbol function_parameters) [6429 6439]))                  )
                nil [6403 7109])
            ("json_dumps" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [7199 7203])
                ("indent" variable nil (reparse-symbol function_parameters) [7205 7211])
                ("indent_increment" variable nil (reparse-symbol function_parameters) [7215 7231]))              ) nil [7184 8533])
            ("report_unknown" function (:arguments 
              ( ("mapping" variable nil (reparse-symbol function_parameters) [8627 8634]))              ) nil [8608 8866])
            ("exit" code nil nil [9967 9982]))          
      :file "tre-continent"
      :pointmax 10149
      :fsize 10148
      :lastmodtime '(22259 42216 0 0)
      :unmatched-syntax '((INDENT_BLOCK 9885 . 9967) (COLON 9883 . 9884) (TRY 8941 . 8944) (AS 9877 . 9879) (NAME 8307 . 8312) (IF 8319 . 8321) (ELSE 8337 . 8341) (NAME 7951 . 7956) (IF 7963 . 7965) (ELSE 7981 . 7985) (INDENT_BLOCK 6999 . 7109) (NEWLINE 6998 . 6999) (COLON 6997 . 6998) (TRY 6920 . 6923) (AS 6991 . 6993) (INDENT_BLOCK 2976 . 3075) (NEWLINE 2975 . 2976) (COLON 2974 . 2975) (TRY 1968 . 1971) (AS 2968 . 2970)))
    (semanticdb-table "tre-seqdb"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
Reads json in the phylogenetic-tree-v1 format produced by newick2json,
reads seqdb (\"sequence-database-v2\"),
updates tree with clade and amino-acid information for each leaf node.
\"\"\"" code nil nil [1471 1658])
            ("lzma" include nil nil [1660 1722])
            ("pprint" include nil nil [1660 1722])
            ("collections" include nil nil [1660 1722])
            ("traceback" include nil nil [1660 1722])
            ("json" include nil nil [1660 1722])
            ("re" include nil nil [1660 1722])
            ("os" include nil nil [1660 1722])
            ("sys" include nil nil [1660 1722])
            ("pathlib" include nil nil [1723 1747])
            ("if" code nil nil [1748 1826])
            ("logging" include nil nil [1826 1840])
            ("main" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [1970 1974]))              ) nil [1961 2806])
            ("add_dates_clades" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [2902 2906])
                ("seqdb" variable nil (reparse-symbol function_parameters) [2908 2913])
                ("add_dates" variable nil (reparse-symbol function_parameters) [2915 2924])
                ("add_clades" variable nil (reparse-symbol function_parameters) [2926 2936]))              ) nil [2881 4419])
            ("add_amino_acid_at" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [4516 4520])
                ("seqdb" variable nil (reparse-symbol function_parameters) [4522 4527])
                ("poss" variable nil (reparse-symbol function_parameters) [4529 4533])
                ("ignore_X" variable nil (reparse-symbol function_parameters) [4535 4543]))              ) nil [4494 6423])
            ("add_branch_annotations" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [6525 6529]))              ) nil [6498 12561])
            ("update_branch_annotation_settings" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [12674 12678]))              ) nil [12636 13230])
            ("add_branch_ids" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [14090 14094]))              ) nil [14071 14735])
            ("remove_aa_at" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [14827 14831]))              ) nil [14810 15051])
            ("load_tree" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [15140 15148]))              ) nil [15126 15598])
            ("json_dumps" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [15688 15692])
                ("indent" variable nil (reparse-symbol function_parameters) [15694 15700])
                ("indent_increment" variable nil (reparse-symbol function_parameters) [15704 15720]))              ) nil [15673 17022])
            ("save_tree" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [17111 17119])
                ("data" variable nil (reparse-symbol function_parameters) [17121 17125]))              ) nil [17097 17569])
            ("backup_file" function
               (:documentation "Backup the file, if it exists. Backups versioning is supported."
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [17660 17668])
                    ("backup_dir" variable nil (reparse-symbol function_parameters) [17670 17680]))                  )
                nil [17644 18350])
            ("Seq" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [18484 18508])
                            ("self" variable nil (reparse-symbol indented_block_body) [18517 18531]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18454 18458])
                            ("db_entry" variable nil (reparse-symbol function_parameters) [18460 18468])
                            ("seq" variable nil (reparse-symbol function_parameters) [18470 18473]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [18441 18532])
                    ("date" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18546 18550]))                          )
                        (reparse-symbol indented_block_body) [18537 18615])
                    ("clades" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18631 18635]))                          )
                        (reparse-symbol indented_block_body) [18620 18671])
                    ("aa" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18683 18687]))                          )
                        (reparse-symbol indented_block_body) [18676 18723])
                    ("shift" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18738 18742]))                          )
                        (reparse-symbol indented_block_body) [18728 18778]))                  
                :type "class")
                nil [18425 18778])
            ("SeqDb" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("data" variable nil (reparse-symbol indented_block_body) [19375 19464])
                            ("if" code nil (reparse-symbol indented_block_body) [19473 19624])
                            ("self" variable nil (reparse-symbol indented_block_body) [19632 19656])
                            ("self" code nil (reparse-symbol indented_block_body) [19665 19682]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19350 19354])
                            ("filename" variable nil (reparse-symbol function_parameters) [19356 19364]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [19337 19683])
                    ("make_index" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19703 19707]))                          )
                        (reparse-symbol indented_block_body) [19688 20184])
                    ("find_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20203 20207])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [20209 20217]))                          
                        :documentation "Returns Seq instance.")
                        (reparse-symbol indented_block_body) [20189 20390])
                    ("_find_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20410 20414])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [20416 20424]))                          )
                        (reparse-symbol indented_block_body) [20395 21539])
                    ("sReNameParts" variable nil (reparse-symbol indented_block_body) [21760 21902])
                    ("split_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21923 21927])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [21929 21937]))                          )
                        (reparse-symbol indented_block_body) [21908 22232]))                  
                :type "class")
                nil [19319 22232])
            ("exit" code nil nil [24069 24084]))          
      :file "tre-seqdb"
      :pointmax 24251
      :fsize 24250
      :lastmodtime '(22259 41139 0 0)
      :unmatched-syntax '((INDENT_BLOCK 23987 . 24069) (COLON 23985 . 23986) (TRY 22308 . 22311) (AS 23979 . 23981) (INDENT_BLOCK 18240 . 18350) (NEWLINE 18239 . 18240) (COLON 18238 . 18239) (TRY 18161 . 18164) (AS 18232 . 18234) (NAME 16796 . 16801) (IF 16808 . 16810) (ELSE 16826 . 16830) (NAME 16440 . 16445) (IF 16452 . 16454) (ELSE 16470 . 16474) (NAME 14534 . 14542) (IF 14557 . 14559) (ELSE 14587 . 14591) (INDENT_BLOCK 2686 . 2785) (NEWLINE 2685 . 2686) (COLON 2684 . 2685) (TRY 1999 . 2002) (AS 2678 . 2680))))
  :file "!Users!eu!GH!tre2pdf!scripts!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
