;; Object sip/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "sip/"
  :tables
  (list
    (semanticdb-table "graphic.sip"
      :major-mode 'c++-mode
      :tags 
        '( ("AxisStyle" type
               (:superclasses 
                  ( ("Style" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [193 200]))                  
                :type "class")
                nil [120 850])
            ("GraphicStyle" type
               (:superclasses 
                  ( ("Style" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1002 1009]))                  
                :type "class")
                nil [926 1281])
            ("BarStyle" type
               (:superclasses 
                  ( ("FilledShapeStyle" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1440 1447]))                  
                :type "class")
                nil [1357 1626])
            ("ScatterPointStyle" type
               (:superclasses 
                  ( ("UserPointStyle" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1792 1799]))                  
                :type "class")
                nil [1702 2055])
            ("LegendLine" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [2197 2204]))                  
                :type "class")
                nil [2131 2369])
            ("Legend" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [2507 2514])
                    ("add" function
                       (:prototype-flag t
                        :arguments 
                          ( ("aLegendLine" variable
                               (:reference 1
                                :constant-flag t
                                :type ("LegendLine" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2528 2558]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2519 2559]))                  
                :type "class")
                nil [2445 2562]))          
      :file "graphic.sip"
      :pointmax 7940
      :fsize 7939
      :lastmodtime '(22086 5788 0 0)
      :unmatched-syntax '((punctuation 7739 . 7740) (semantic-list 6936 . 7739) (punctuation 6934 . 6935) (symbol 6920 . 6934) (punctuation 6919 . 6920) (symbol 6892 . 6918) (CLASS 6886 . 6891) (punctuation 6792 . 6793) (semantic-list 6029 . 6792) (punctuation 6027 . 6028) (symbol 6013 . 6027) (punctuation 6012 . 6013) (symbol 6004 . 6011) (punctuation 6002 . 6003) (symbol 5994 . 6001) (CLASS 5988 . 5993) (punctuation 5892 . 5893) (semantic-list 5506 . 5892) (punctuation 5504 . 5505) (symbol 5490 . 5504) (punctuation 5489 . 5490) (symbol 5479 . 5488) (punctuation 5477 . 5478) (symbol 5457 . 5476) (CLASS 5451 . 5456) (punctuation 5355 . 5356) (semantic-list 4675 . 5355) (punctuation 4673 . 4674) (symbol 4659 . 4673) (punctuation 4658 . 4659) (symbol 4650 . 4657) (punctuation 4648 . 4649) (symbol 4638 . 4647) (CLASS 4632 . 4637) (punctuation 4538 . 4539) (semantic-list 2692 . 4538) (punctuation 2690 . 2691) (symbol 2676 . 2690) (punctuation 2675 . 2676) (symbol 2655 . 2674) (punctuation 2653 . 2654) (symbol 2645 . 2652) (CLASS 2639 . 2644) (symbol 2499 . 2502) (punctuation 2498 . 2499) (spp-include "graphic.hh" 2476 . 2497) (symbol 2461 . 2475) (punctuation 2460 . 2461) (punctuation 2365 . 2366) (punctuation 2364 . 2365) (string 2359 . 2364) (punctuation 2358 . 2359) (symbol 2347 . 2358) (punctuation 2346 . 2347) (semantic-list 2219 . 2345) (symbol 2209 . 2219) (symbol 2189 . 2192) (punctuation 2188 . 2189) (spp-include "graphic.hh" 2166 . 2187) (symbol 2151 . 2165) (punctuation 2150 . 2151) (punctuation 2051 . 2052) (punctuation 2050 . 2051) (symbol 2038 . 2050) (punctuation 2037 . 2038) (CONST 2031 . 2036) (semantic-list 2028 . 2030) (symbol 2023 . 2028) (punctuation 2021 . 2022) (symbol 2004 . 2021) (punctuation 1998 . 1999) (punctuation 1997 . 1998) (string 1992 . 1997) (punctuation 1991 . 1992) (symbol 1980 . 1991) (punctuation 1979 . 1980) (semantic-list 1821 . 1978) (symbol 1804 . 1821) (punctuation 1965 . 1966) (punctuation 1964 . 1965) (punctuation 1849 . 1850) (punctuation 1848 . 1849) (symbol 1784 . 1787) (punctuation 1783 . 1784) (spp-include "graphic.hh" 1761 . 1782) (symbol 1746 . 1760) (punctuation 1745 . 1746) (punctuation 1622 . 1623) (punctuation 1621 . 1622) (symbol 1609 . 1621) (punctuation 1608 . 1609) (CONST 1602 . 1607) (semantic-list 1599 . 1601) (symbol 1594 . 1599) (punctuation 1592 . 1593) (symbol 1584 . 1592) (punctuation 1578 . 1579) (punctuation 1577 . 1578) (string 1572 . 1577) (punctuation 1571 . 1572) (symbol 1560 . 1571) (punctuation 1559 . 1560) (semantic-list 1460 . 1558) (symbol 1452 . 1460) (symbol 1432 . 1435) (punctuation 1431 . 1432) (spp-include "graphic.hh" 1409 . 1430) (symbol 1394 . 1408) (punctuation 1393 . 1394) (punctuation 1277 . 1278) (punctuation 1276 . 1277) (symbol 1264 . 1276) (punctuation 1263 . 1264) (CONST 1257 . 1262) (semantic-list 1254 . 1256) (symbol 1249 . 1254) (punctuation 1247 . 1248) (symbol 1235 . 1247) (punctuation 1229 . 1230) (punctuation 1228 . 1229) (string 1223 . 1228) (punctuation 1222 . 1223) (symbol 1211 . 1222) (punctuation 1210 . 1211) (semantic-list 1026 . 1209) (symbol 1014 . 1026) (symbol 994 . 997) (punctuation 993 . 994) (spp-include "graphic.hh" 971 . 992) (symbol 956 . 970) (punctuation 955 . 956) (punctuation 846 . 847) (punctuation 845 . 846) (symbol 833 . 845) (punctuation 832 . 833) (CONST 826 . 831) (semantic-list 823 . 825) (symbol 818 . 823) (punctuation 816 . 817) (symbol 807 . 816) (punctuation 801 . 802) (punctuation 800 . 801) (string 795 . 800) (punctuation 794 . 795) (symbol 783 . 794) (punctuation 782 . 783) (semantic-list 214 . 781) (symbol 205 . 214) (symbol 185 . 188) (punctuation 184 . 185) (spp-include "graphic.hh" 162 . 183) (symbol 147 . 161) (punctuation 146 . 147)))
    (semanticdb-table "draw.sip"
      :major-mode 'c++-mode
      :tags 
        '( ("Color" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [179 186])
                    ("Color" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("aColor" variable (:type ("acmacs::IntegerType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [197 224]))                          
                        :type ("Color" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [191 225])
                    ("sipCppPtr" variable
                       (:pointer 1
                        :default-value "NULL"
                        :type "int")
                        (reparse-symbol classsubparts) [867 885])
                    ("__str__" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [910 938])
                    ("o" variable
                       (:default-value "sipCpp->json_serializable()"
                        :type ("ReferencePyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [959 1009])
                    ("sipRes" variable
                       (:default-value "new std::string(pyObjectRepr(o))"
                        :type "int")
                        (reparse-symbol classsubparts) [1018 1060])
                    ("__repr__" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1071 1100])
                    ("o" variable
                       (:default-value "sipCpp->json_serializable()"
                        :type ("ReferencePyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1121 1171])
                    ("sipRes" variable
                       (:default-value "new std::string(pyObjectRepr(o))"
                        :type "int")
                        (reparse-symbol classsubparts) [1180 1222])
                    ("__int__" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [1233 1253])
                    ("__lt__" function
                       (:prototype-flag t
                        :arguments 
                          ( ("other" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Color" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1323 1342]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1312 1349])
                    ("PyLong_FromLong" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type "unsigned int") (reparse-symbol arg-sub-list) [1511 1528]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [1495 1530])
                    ("MethodCode" function (:type "int") (reparse-symbol classsubparts) [1597 1705])
                    ("MethodCode" function (:type "int") (reparse-symbol classsubparts) [1768 1862]))                  
                :type "class")
                nil [120 1871])
            ("GridStyle" type
               (:superclasses 
                  ( ("Style" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [2950 2957])
                    ("version" variable
                       (:pointer 1
                        :default-value "PyDict_GetItemString(a0, \"version\")"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3235 3291])
                    ("sipRes" variable
                       (:default-value "new GridStyle()"
                        :type "int")
                        (reparse-symbol classsubparts) [3300 3325])
                    ("fromDict" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3351 3354])
                            ("" variable (:type ("version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3355 3364])
                            ("" variable (:type ("PyLong_AsLong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3365 3387]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [3342 3393]))                  
                :type "class")
                nil [2879 3402])
            ("TextStyle" type
               (:superclasses 
                  ( ("Style" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [3549 3556])
                    ("FontSlant" type
                       (:members 
                          ( ("SLANT_NORMAL" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3578 3591])
                            ("SLANT_ITALIC" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3592 3605])
                            ("SLANT_OBLIQUE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3606 3620])
                            ("DEFAULT_SLANT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3621 3636]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [3561 3637])
                    ("FontWeight" type
                       (:members 
                          ( ("WEIGHT_NORMAL" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3660 3674])
                            ("WEIGHT_BOLD" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3675 3687])
                            ("DEFAULT_WEIGHT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [3688 3704]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [3642 3705])
                    ("+=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("aUpdate" variable
                               (:reference 1
                                :constant-flag t
                                :type ("TextStyle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [4056 4081]))                          
                        :type ("TextStyle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4032 4082])
                    ("size" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4133 4164])
                    ("rotation" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4169 4204])
                    ("color" function
                       (:prototype-flag t
                        :type ("Color" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4209 4229])
                    ("slant" function
                       (:prototype-flag t
                        :type ("FontSlant" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4234 4258])
                    ("weight" function
                       (:prototype-flag t
                        :type ("FontWeight" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4263 4289])
                    ("interval" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4294 4329])
                    ("version" variable
                       (:pointer 1
                        :default-value "PyDict_GetItemString(a0, \"version\")"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [4440 4496])
                    ("sipRes" variable
                       (:default-value "new TextStyle()"
                        :type "int")
                        (reparse-symbol classsubparts) [4505 4530])
                    ("fromDict" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4556 4559])
                            ("" variable (:type ("version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4560 4569])
                            ("" variable (:type ("PyLong_AsLong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4570 4592]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [4547 4598]))                  
                :type "class")
                nil [3478 4607])
            ("FilledShapeStyle" type
               (:superclasses 
                  ( ("Style" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [4882 4889])
                    ("PointColor" type
                       (:members 
                          ( ("TRANSPARENT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [4912 4925]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [4894 4926])
                    ("valid" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [5145 5164])
                    ("+=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("aUpdate" variable
                               (:reference 1
                                :constant-flag t
                                :type ("FilledShapeStyle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [5200 5232]))                          
                        :type ("FilledShapeStyle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5169 5233])
                    ("outlineColor" function
                       (:prototype-flag t
                        :type ("Color" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5291 5318])
                    ("outlineWidth" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5323 5362])
                    ("fillColor" function
                       (:prototype-flag t
                        :type ("Color" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5367 5391])
                    ("version" variable
                       (:pointer 1
                        :default-value "PyDict_GetItemString(a0, \"version\")"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [5509 5565])
                    ("sipRes" variable
                       (:default-value "new FilledShapeStyle()"
                        :type "int")
                        (reparse-symbol classsubparts) [5574 5606])
                    ("fromDict" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5632 5635])
                            ("" variable (:type ("version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5636 5645])
                            ("" variable (:type ("PyLong_AsLong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5646 5668]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [5623 5674]))                  
                :type "class")
                nil [4804 5683])
            ("UserPointStyle" type
               (:superclasses 
                  ( ("FilledShapeStyle" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [5846 5853])
                    ("Shape" type
                       (:members 
                          ( ("SHAPE_BOX" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [5871 5881])
                            ("SHAPE_CIRCLE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [5882 5895])
                            ("SHAPE_TRIANGLE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [5896 5911])
                            ("SHAPE_DOWN_TRIANGLE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [5912 5932])
                            ("DEFAULT_SHAPE" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [5933 5948]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [5858 5949])
                    ("valid" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [6193 6212])
                    ("+=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("aUpdate" variable
                               (:reference 1
                                :constant-flag t
                                :type ("UserPointStyle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [6246 6276]))                          
                        :type ("UserPointStyle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6217 6277])
                    ("version" variable
                       (:pointer 1
                        :default-value "PyDict_GetItemString(a0, \"version\")"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [6443 6499])
                    ("sipRes" variable
                       (:default-value "new UserPointStyle()"
                        :type "int")
                        (reparse-symbol classsubparts) [6508 6538])
                    ("fromDict" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6564 6567])
                            ("" variable (:type ("version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6568 6577])
                            ("" variable (:type ("PyLong_AsLong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6578 6600]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [6555 6606]))                  
                :type "class")
                nil [5759 6615])
            ("PointStyle" type
               (:superclasses 
                  ( ("UserPointStyle" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [6772 6779])
                    ("ShowLabel" type
                       (:members 
                          ( ("LABEL_HIDDEN" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [6801 6814])
                            ("LABEL_SHOWN" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [6815 6827])
                            ("DEFAULT_SHOW_LABEL" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [6828 6848]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [6784 6849])
                    ("valid" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [7465 7484])
                    ("+=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("aUpdate" variable
                               (:reference 1
                                :constant-flag t
                                :type ("PointStyle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [7514 7540]))                          
                        :type ("PointStyle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7489 7541])
                    ("size" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7593 7624])
                    ("aspect" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7629 7662])
                    ("rotation" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7667 7702])
                    ("showLabel" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [7707 7730])
                    ("labelStyle" function
                       (:prototype-flag t
                        :constant-flag t
                        :type ("TextStyle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7735 7771])
                    ("labelPositionX" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7776 7817])
                    ("labelPositionY" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7822 7863])
                    ("version" variable
                       (:pointer 1
                        :default-value "PyDict_GetItemString(a0, \"version\")"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [7975 8031])
                    ("sipRes" variable
                       (:default-value "new PointStyle()"
                        :type "int")
                        (reparse-symbol classsubparts) [8040 8066])
                    ("fromDict" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8092 8095])
                            ("" variable (:type ("version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8096 8105])
                            ("" variable (:type ("PyLong_AsLong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8106 8128]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [8083 8134])
                    ("version" variable
                       (:pointer 1
                        :default-value "PyDict_GetItemString(a0, \"version\")"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8242 8298])
                    ("sipRes" variable
                       (:default-value "new PointStyle()"
                        :type "int")
                        (reparse-symbol classsubparts) [8307 8333])
                    ("fromDict" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8359 8362])
                            ("" variable (:type ("version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8363 8372])
                            ("" variable (:type ("PyLong_AsLong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8373 8395]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [8350 8401]))                  
                :type "class")
                nil [6691 8410])
            ("LineStyle" type
               (:superclasses 
                  ( ("Style" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [8557 8564])
                    ("DASH_STYLE" type
                       (:members 
                          ( ("NODASH" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [8586 8593])
                            ("DASH1" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [8594 8600])
                            ("DASH2" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [8601 8607])
                            ("DASHDEFAULT" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [8608 8620]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [8569 8621])
                    ("+=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("aUpdate" variable
                               (:reference 1
                                :constant-flag t
                                :type ("LineStyle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [8861 8886]))                          
                        :type ("LineStyle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [8837 8887])
                    ("version" variable
                       (:pointer 1
                        :default-value "PyDict_GetItemString(a0, \"version\")"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9043 9099])
                    ("sipRes" variable
                       (:default-value "new LineStyle()"
                        :type "int")
                        (reparse-symbol classsubparts) [9108 9133])
                    ("fromDict" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9159 9162])
                            ("" variable (:type ("version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9163 9172])
                            ("" variable (:type ("PyLong_AsLong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9173 9195]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [9150 9201]))                  
                :type "class")
                nil [8486 9210])
            ("ArrowStyle" type
               (:superclasses 
                  ( ("LineStyle" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [9483 9490])
                    ("+=" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("aUpdate" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ArrowStyle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [9808 9834]))                          
                        :type ("ArrowStyle" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9783 9835])
                    ("version" variable
                       (:pointer 1
                        :default-value "PyDict_GetItemString(a0, \"version\")"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [9993 10049])
                    ("sipRes" variable
                       (:default-value "new ArrowStyle()"
                        :type "int")
                        (reparse-symbol classsubparts) [10058 10084])
                    ("fromDict" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10110 10113])
                            ("" variable (:type ("version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10114 10123])
                            ("" variable (:type ("PyLong_AsLong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10124 10146]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [10101 10152]))                  
                :type "class")
                nil [9407 10161])
            ("TitleStyle" type
               (:superclasses 
                  ( ("Style" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [10433 10440])
                    ("version" variable
                       (:pointer 1
                        :default-value "PyDict_GetItemString(a0, \"version\")"
                        :type ("PyObject" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [10847 10903])
                    ("sipRes" variable
                       (:default-value "new TitleStyle()"
                        :type "int")
                        (reparse-symbol classsubparts) [10912 10938])
                    ("fromDict" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10964 10967])
                            ("" variable (:type ("version" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10968 10977])
                            ("" variable (:type ("PyLong_AsLong" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10978 11000]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [10955 11006]))                  
                :type "class")
                nil [10361 11015])
            ("DictIntStyle" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [11184 11191])
                    ("insert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("aIndex" variable (:type ("acmacs::IntegerType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11208 11235])
                            ("aStyle" variable
                               (:pointer 1
                                :type ("Style" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11236 11251])
                            ("" variable (:type ("Transfer" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11251 11260]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [11196 11262])
                    ("insert" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("std::make_pair" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11298 11320]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [11291 11322]))                  
                :type "class")
                nil [11091 13060])
            ("BoundingBox" type
               (:superclasses 
                  ( ("Vector" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [13213 13220])
                    ("BoundingBox" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("BoundingBox" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13225 13239])
                    ("sipCpp" variable
                       (:default-value "new BoundingBox()"
                        :type ("MethodCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13431 13477])
                    ("fromList" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("sipCpp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13496 13503])
                            ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13504 13507]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [13486 13508])
                    ("top" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13519 13549])
                    ("bottom" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13554 13587])
                    ("left" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13592 13623])
                    ("right" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13628 13660])
                    ("top" function
                       (:prototype-flag t
                        :arguments 
                          ( ("aTop" variable (:type ("acmacs::FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13675 13698]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [13666 13699])
                    ("bottom" function
                       (:prototype-flag t
                        :arguments 
                          ( ("aBottom" variable (:type ("acmacs::FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13716 13742]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [13704 13743])
                    ("left" function
                       (:prototype-flag t
                        :arguments 
                          ( ("aLeft" variable (:type ("acmacs::FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13758 13782]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [13748 13783])
                    ("right" function
                       (:prototype-flag t
                        :arguments 
                          ( ("aRight" variable (:type ("acmacs::FloatType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13799 13824]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [13788 13825])
                    ("centerX" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13831 13865])
                    ("centerY" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13870 13904])
                    ("width" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13910 13942])
                    ("height" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13947 13980])
                    ("aspectRatio" function
                       (:prototype-flag t
                        :type ("acmacs::FloatType" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [13985 14023]))                  
                :type "class")
                nil [13136 14026])
            ("Viewport" type
               (:superclasses 
                  ( ("BoundingBox" type
                       (:protection "unspecified"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [14181 14188])
                    ("Viewport" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("Viewport" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [14193 14204])
                    ("Viewport" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("aSource" variable
                               (:reference 1
                                :constant-flag t
                                :type ("Viewport" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14218 14242]))                          
                        :type ("Viewport" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [14209 14243])
                    ("sipCpp" variable
                       (:default-value "new Viewport()"
                        :type ("MethodCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [14513 14556])
                    ("fromList" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("sipCpp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14575 14582])
                            ("" variable (:type ("a0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14583 14586]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [14565 14587])
                    ("__str__" function
                       (:prototype-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [14937 14965])
                    ("s" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [14986 14998])
                    ("origin" function
                       (:prototype-flag t
                        :constructor-flag t
                        :arguments 
                          ( ("" variable (:type ("sipCpp" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15036 15043])
                            ("" variable (:type ("origin" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15044 15052]))                          
                        :type ("std::auto_ptr" type
                             (:template-specifier 
                                ( ("Vector" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol classsubparts) [15007 15076])
                    ("sprintf" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("s" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15526 15528]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [15518 15604])
                    ("sipRes" variable
                       (:default-value "new std::string(s)"
                        :type "int")
                        (reparse-symbol classsubparts) [15613 15641]))                  
                :type "class")
                nil [14102 15650]))          
      :file "draw.sip"
      :pointmax 20325
      :fsize 20324
      :lastmodtime '(22284 62800 0 0)
      :unmatched-syntax '((punctuation 20160 . 20161) (semantic-list 19248 . 20160) (punctuation 19246 . 19247) (symbol 19232 . 19246) (punctuation 19231 . 19232) (symbol 19211 . 19230) (punctuation 19209 . 19210) (symbol 19196 . 19208) (CLASS 19190 . 19195) (punctuation 19113 . 19114) (semantic-list 16968 . 19113) (punctuation 16966 . 16967) (symbol 16952 . 16966) (punctuation 16951 . 16952) (symbol 16931 . 16950) (CLASS 16925 . 16930) (symbol 15643 . 15646) (punctuation 15642 . 15643) (semantic-list 15599 . 15602) (semantic-list 15592 . 15599) (semantic-list 15587 . 15590) (semantic-list 15580 . 15587) (semantic-list 15575 . 15578) (semantic-list 15566 . 15575) (semantic-list 15561 . 15564) (semantic-list 15552 . 15561) (string 15529 . 15550) (ELSE 15501 . 15505) (semantic-list 15231 . 15492) (semantic-list 15204 . 15230) (IF 15201 . 15203) (semantic-list 15050 . 15052) (punctuation 15043 . 15044) (punctuation 15042 . 15043) (symbol 14967 . 14977) (punctuation 14966 . 14967) (punctuation 14851 . 14852) (punctuation 14850 . 14851) (string 14845 . 14850) (punctuation 14844 . 14845) (symbol 14833 . 14844) (punctuation 14832 . 14833) (semantic-list 14802 . 14831) (symbol 14796 . 14802) (VOID 14791 . 14795) (punctuation 14785 . 14786) (punctuation 14784 . 14785) (symbol 14772 . 14784) (punctuation 14771 . 14772) (CONST 14765 . 14770) (semantic-list 14762 . 14764) (symbol 14758 . 14762) (punctuation 14756 . 14757) (symbol 14750 . 14756) (punctuation 14744 . 14745) (punctuation 14743 . 14744) (symbol 14731 . 14743) (punctuation 14730 . 14731) (CONST 14724 . 14729) (semantic-list 14721 . 14723) (symbol 14715 . 14721) (punctuation 14713 . 14714) (symbol 14707 . 14713) (punctuation 14701 . 14702) (punctuation 14700 . 14701) (string 14695 . 14700) (punctuation 14694 . 14695) (symbol 14683 . 14694) (punctuation 14682 . 14683) (semantic-list 14656 . 14681) (symbol 14646 . 14656) (VOID 14641 . 14645) (punctuation 14635 . 14636) (punctuation 14634 . 14635) (symbol 14622 . 14634) (punctuation 14621 . 14622) (CONST 14615 . 14620) (semantic-list 14612 . 14614) (symbol 14606 . 14612) (punctuation 14604 . 14605) (symbol 14598 . 14604) (symbol 14589 . 14592) (punctuation 14588 . 14589) (punctuation 14574 . 14575) (punctuation 14512 . 14513) (punctuation 14510 . 14511) (punctuation 14509 . 14510) (string 14504 . 14509) (punctuation 14503 . 14504) (symbol 14492 . 14503) (punctuation 14491 . 14492) (semantic-list 14473 . 14490) (symbol 14465 . 14473) (punctuation 14458 . 14459) (punctuation 14457 . 14458) (string 14452 . 14457) (punctuation 14451 . 14452) (symbol 14440 . 14451) (punctuation 14439 . 14440) (semantic-list 14388 . 14438) (symbol 14380 . 14388) (punctuation 14374 . 14375) (punctuation 14373 . 14374) (string 14368 . 14373) (punctuation 14367 . 14368) (symbol 14356 . 14367) (punctuation 14355 . 14356) (semantic-list 14256 . 14354) (symbol 14248 . 14256) (symbol 14173 . 14176) (punctuation 14172 . 14173) (spp-include "viewport.hh" 14149 . 14171) (symbol 14134 . 14148) (punctuation 14133 . 14134) (symbol 13510 . 13513) (punctuation 13509 . 13510) (punctuation 13495 . 13496) (punctuation 13430 . 13431) (punctuation 13428 . 13429) (punctuation 13427 . 13428) (string 13422 . 13427) (punctuation 13421 . 13422) (symbol 13410 . 13421) (punctuation 13409 . 13410) (semantic-list 13391 . 13408) (symbol 13380 . 13391) (punctuation 13373 . 13374) (punctuation 13372 . 13373) (string 13367 . 13372) (punctuation 13366 . 13367) (symbol 13355 . 13366) (punctuation 13354 . 13355) (semantic-list 13255 . 13353) (symbol 13244 . 13255) (symbol 13205 . 13208) (punctuation 13204 . 13205) (spp-include "viewport.hh" 13181 . 13203) (symbol 13166 . 13180) (punctuation 13165 . 13166) (symbol 11324 . 11327) (punctuation 11323 . 11324) (semantic-list 11312 . 11320) (punctuation 11290 . 11291) (punctuation 11289 . 11290) (symbol 11283 . 11289) (symbol 11264 . 11274) (punctuation 11263 . 11264) (punctuation 11259 . 11260) (punctuation 11250 . 11251) (symbol 11175 . 11178) (punctuation 11174 . 11175) (spp-include "draw.hh" 11155 . 11173) (symbol 11140 . 11154) (punctuation 11139 . 11140) (symbol 11008 . 11011) (punctuation 11007 . 11008) (number 11003 . 11004) (punctuation 11001 . 11002) (semantic-list 10991 . 11000) (punctuation 10976 . 10977) (punctuation 10954 . 10955) (punctuation 10953 . 10954) (symbol 10947 . 10953) (symbol 10828 . 10838) (punctuation 10827 . 10828) (punctuation 10825 . 10826) (punctuation 10824 . 10825) (symbol 10812 . 10824) (punctuation 10811 . 10812) (string 10806 . 10811) (punctuation 10805 . 10806) (symbol 10794 . 10805) (punctuation 10793 . 10794) (semantic-list 10775 . 10792) (symbol 10760 . 10775) (punctuation 10758 . 10759) (symbol 10748 . 10758) (STATIC 10741 . 10747) (punctuation 10734 . 10735) (punctuation 10733 . 10734) (symbol 10721 . 10733) (punctuation 10720 . 10721) (CONST 10714 . 10719) (semantic-list 10711 . 10713) (symbol 10706 . 10711) (punctuation 10704 . 10705) (symbol 10694 . 10704) (punctuation 10688 . 10689) (punctuation 10687 . 10688) (string 10682 . 10687) (punctuation 10681 . 10682) (symbol 10670 . 10681) (punctuation 10669 . 10670) (semantic-list 10455 . 10668) (symbol 10445 . 10455) (punctuation 10515 . 10516) (punctuation 10514 . 10515) (symbol 10425 . 10428) (punctuation 10424 . 10425) (spp-include "style.hh" 10404 . 10423) (symbol 10389 . 10403) (punctuation 10388 . 10389) (symbol 10154 . 10157) (punctuation 10153 . 10154) (number 10149 . 10150) (punctuation 10147 . 10148) (semantic-list 10137 . 10146) (punctuation 10122 . 10123) (punctuation 10100 . 10101) (punctuation 10099 . 10100) (symbol 10093 . 10099) (symbol 9974 . 9984) (punctuation 9973 . 9974) (punctuation 9971 . 9972) (punctuation 9970 . 9971) (symbol 9958 . 9970) (punctuation 9957 . 9958) (string 9952 . 9957) (punctuation 9951 . 9952) (symbol 9940 . 9951) (punctuation 9939 . 9940) (semantic-list 9921 . 9938) (symbol 9906 . 9921) (punctuation 9904 . 9905) (symbol 9894 . 9904) (STATIC 9887 . 9893) (punctuation 9880 . 9881) (punctuation 9879 . 9880) (symbol 9867 . 9879) (punctuation 9866 . 9867) (CONST 9860 . 9865) (semantic-list 9857 . 9859) (symbol 9852 . 9857) (punctuation 9850 . 9851) (symbol 9840 . 9850) (punctuation 9777 . 9778) (punctuation 9776 . 9777) (string 9771 . 9776) (punctuation 9770 . 9771) (symbol 9759 . 9770) (punctuation 9758 . 9759) (semantic-list 9505 . 9757) (symbol 9495 . 9505) (punctuation 9742 . 9743) (punctuation 9741 . 9742) (punctuation 9688 . 9689) (punctuation 9687 . 9688) (punctuation 9635 . 9636) (punctuation 9634 . 9635) (punctuation 9572 . 9573) (punctuation 9571 . 9572) (punctuation 9537 . 9538) (punctuation 9536 . 9537) (symbol 9475 . 9478) (punctuation 9474 . 9475) (spp-include "style.hh" 9454 . 9473) (symbol 9439 . 9453) (punctuation 9438 . 9439) (symbol 9203 . 9206) (punctuation 9202 . 9203) (number 9198 . 9199) (punctuation 9196 . 9197) (semantic-list 9186 . 9195) (punctuation 9171 . 9172) (punctuation 9149 . 9150) (punctuation 9148 . 9149) (symbol 9142 . 9148) (symbol 9024 . 9034) (punctuation 9023 . 9024) (punctuation 9021 . 9022) (punctuation 9020 . 9021) (symbol 9008 . 9020) (punctuation 9007 . 9008) (string 9002 . 9007) (punctuation 9001 . 9002) (symbol 8990 . 9001) (punctuation 8989 . 8990) (semantic-list 8971 . 8988) (symbol 8956 . 8971) (punctuation 8954 . 8955) (symbol 8945 . 8954) (STATIC 8938 . 8944) (punctuation 8931 . 8932) (punctuation 8930 . 8931) (symbol 8918 . 8930) (punctuation 8917 . 8918) (CONST 8911 . 8916) (semantic-list 8908 . 8910) (symbol 8903 . 8908) (punctuation 8901 . 8902) (symbol 8892 . 8901) (punctuation 8831 . 8832) (punctuation 8830 . 8831) (string 8825 . 8830) (punctuation 8824 . 8825) (symbol 8813 . 8824) (punctuation 8812 . 8813) (semantic-list 8635 . 8811) (symbol 8626 . 8635) (punctuation 8765 . 8766) (punctuation 8764 . 8765) (punctuation 8702 . 8703) (punctuation 8701 . 8702) (punctuation 8667 . 8668) (punctuation 8666 . 8667) (symbol 8549 . 8552) (punctuation 8548 . 8549) (spp-include "style.hh" 8528 . 8547) (symbol 8513 . 8527) (punctuation 8512 . 8513) (symbol 8403 . 8406) (punctuation 8402 . 8403) (number 8398 . 8399) (punctuation 8396 . 8397) (semantic-list 8386 . 8395) (punctuation 8371 . 8372) (punctuation 8349 . 8350) (punctuation 8348 . 8349) (symbol 8342 . 8348) (symbol 8223 . 8233) (punctuation 8222 . 8223) (punctuation 8220 . 8221) (punctuation 8219 . 8220) (symbol 8207 . 8219) (punctuation 8206 . 8207) (string 8201 . 8206) (punctuation 8200 . 8201) (symbol 8189 . 8200) (punctuation 8188 . 8189) (semantic-list 8170 . 8187) (symbol 8164 . 8170) (punctuation 8162 . 8163) (symbol 8152 . 8162) (STATIC 8145 . 8151) (symbol 8136 . 8139) (punctuation 8135 . 8136) (number 8131 . 8132) (punctuation 8129 . 8130) (semantic-list 8119 . 8128) (punctuation 8104 . 8105) (punctuation 8082 . 8083) (punctuation 8081 . 8082) (symbol 8075 . 8081) (symbol 7956 . 7966) (punctuation 7955 . 7956) (punctuation 7953 . 7954) (punctuation 7952 . 7953) (symbol 7940 . 7952) (punctuation 7939 . 7940) (string 7934 . 7939) (punctuation 7933 . 7934) (symbol 7922 . 7933) (punctuation 7921 . 7922) (semantic-list 7903 . 7920) (symbol 7888 . 7903) (punctuation 7886 . 7887) (symbol 7876 . 7886) (STATIC 7869 . 7875) (punctuation 7586 . 7587) (punctuation 7585 . 7586) (symbol 7573 . 7585) (punctuation 7572 . 7573) (CONST 7566 . 7571) (semantic-list 7563 . 7565) (symbol 7558 . 7563) (punctuation 7556 . 7557) (symbol 7546 . 7556) (punctuation 7459 . 7460) (punctuation 7458 . 7459) (string 7453 . 7458) (punctuation 7452 . 7453) (symbol 7441 . 7452) (punctuation 7440 . 7441) (semantic-list 6864 . 7439) (symbol 6854 . 6864) (punctuation 7424 . 7425) (punctuation 7423 . 7424) (punctuation 7357 . 7358) (punctuation 7356 . 7357) (punctuation 7299 . 7300) (punctuation 7298 . 7299) (punctuation 7158 . 7159) (punctuation 7157 . 7158) (punctuation 7118 . 7119) (punctuation 7117 . 7118) (punctuation 7063 . 7064) (punctuation 7062 . 7063) (punctuation 7020 . 7021) (punctuation 7019 . 7020) (punctuation 6970 . 6971) (punctuation 6969 . 6970) (punctuation 6922 . 6923) (punctuation 6921 . 6922) (symbol 6764 . 6767) (punctuation 6763 . 6764) (spp-include "style.hh" 6743 . 6762) (symbol 6728 . 6742) (punctuation 6727 . 6728) (symbol 6608 . 6611) (punctuation 6607 . 6608) (number 6603 . 6604) (punctuation 6601 . 6602) (semantic-list 6591 . 6600) (punctuation 6576 . 6577) (punctuation 6554 . 6555) (punctuation 6553 . 6554) (symbol 6547 . 6553) (symbol 6424 . 6434) (punctuation 6423 . 6424) (punctuation 6421 . 6422) (punctuation 6420 . 6421) (symbol 6408 . 6420) (punctuation 6407 . 6408) (string 6402 . 6407) (punctuation 6401 . 6402) (symbol 6390 . 6401) (punctuation 6389 . 6390) (semantic-list 6371 . 6388) (symbol 6356 . 6371) (punctuation 6354 . 6355) (symbol 6340 . 6354) (STATIC 6333 . 6339) (punctuation 6326 . 6327) (punctuation 6325 . 6326) (symbol 6313 . 6325) (punctuation 6312 . 6313) (CONST 6306 . 6311) (semantic-list 6303 . 6305) (symbol 6298 . 6303) (punctuation 6296 . 6297) (symbol 6282 . 6296) (punctuation 6187 . 6188) (punctuation 6186 . 6187) (string 6181 . 6186) (punctuation 6180 . 6181) (symbol 6169 . 6180) (punctuation 6168 . 6169) (semantic-list 5968 . 6167) (symbol 5954 . 5968) (punctuation 6152 . 6153) (punctuation 6151 . 6152) (punctuation 6118 . 6119) (punctuation 6117 . 6118) (punctuation 6078 . 6079) (punctuation 6077 . 6078) (punctuation 6023 . 6024) (punctuation 6022 . 6023) (symbol 5838 . 5841) (punctuation 5837 . 5838) (spp-include "style.hh" 5817 . 5836) (symbol 5802 . 5816) (punctuation 5801 . 5802) (symbol 5676 . 5679) (punctuation 5675 . 5676) (number 5671 . 5672) (punctuation 5669 . 5670) (semantic-list 5659 . 5668) (punctuation 5644 . 5645) (punctuation 5622 . 5623) (punctuation 5621 . 5622) (symbol 5615 . 5621) (symbol 5490 . 5500) (punctuation 5489 . 5490) (punctuation 5487 . 5488) (punctuation 5486 . 5487) (symbol 5474 . 5486) (punctuation 5473 . 5474) (string 5468 . 5473) (punctuation 5467 . 5468) (symbol 5456 . 5467) (punctuation 5455 . 5456) (semantic-list 5437 . 5454) (symbol 5422 . 5437) (punctuation 5420 . 5421) (symbol 5404 . 5420) (STATIC 5397 . 5403) (punctuation 5284 . 5285) (punctuation 5283 . 5284) (symbol 5271 . 5283) (punctuation 5270 . 5271) (CONST 5264 . 5269) (semantic-list 5261 . 5263) (symbol 5256 . 5261) (punctuation 5254 . 5255) (symbol 5238 . 5254) (punctuation 5139 . 5140) (punctuation 5138 . 5139) (string 5133 . 5138) (punctuation 5132 . 5133) (symbol 5121 . 5132) (punctuation 5120 . 5121) (semantic-list 4947 . 5119) (symbol 4931 . 4947) (punctuation 5104 . 5105) (punctuation 5103 . 5104) (punctuation 5070 . 5071) (punctuation 5069 . 5070) (punctuation 5030 . 5031) (punctuation 5029 . 5030) (punctuation 4975 . 4976) (punctuation 4974 . 4975) (symbol 4874 . 4877) (punctuation 4873 . 4874) (spp-include "style.hh" 4853 . 4872) (symbol 4838 . 4852) (punctuation 4837 . 4838) (symbol 4600 . 4603) (punctuation 4599 . 4600) (number 4595 . 4596) (punctuation 4593 . 4594) (semantic-list 4583 . 4592) (punctuation 4568 . 4569) (punctuation 4546 . 4547) (punctuation 4545 . 4546) (symbol 4539 . 4545) (symbol 4421 . 4431) (punctuation 4420 . 4421) (punctuation 4418 . 4419) (punctuation 4417 . 4418) (symbol 4405 . 4417) (punctuation 4404 . 4405) (string 4399 . 4404) (punctuation 4398 . 4399) (symbol 4387 . 4398) (punctuation 4386 . 4387) (semantic-list 4368 . 4385) (symbol 4353 . 4368) (punctuation 4351 . 4352) (symbol 4342 . 4351) (STATIC 4335 . 4341) (punctuation 4126 . 4127) (punctuation 4125 . 4126) (symbol 4113 . 4125) (punctuation 4112 . 4113) (CONST 4106 . 4111) (semantic-list 4103 . 4105) (symbol 4098 . 4103) (punctuation 4096 . 4097) (symbol 4087 . 4096) (punctuation 4026 . 4027) (punctuation 4025 . 4026) (string 4020 . 4025) (punctuation 4019 . 4020) (symbol 4008 . 4019) (punctuation 4007 . 4008) (semantic-list 3719 . 4006) (symbol 3710 . 3719) (punctuation 3991 . 3992) (punctuation 3990 . 3991) (punctuation 3941 . 3942) (punctuation 3940 . 3941) (punctuation 3891 . 3892) (punctuation 3890 . 3891) (punctuation 3856 . 3857) (punctuation 3855 . 3856) (symbol 3541 . 3544) (punctuation 3540 . 3541) (spp-include "style.hh" 3520 . 3539) (symbol 3505 . 3519) (punctuation 3504 . 3505) (symbol 3395 . 3398) (punctuation 3394 . 3395) (number 3390 . 3391) (punctuation 3388 . 3389) (semantic-list 3378 . 3387) (punctuation 3363 . 3364) (punctuation 3341 . 3342) (punctuation 3340 . 3341) (symbol 3334 . 3340) (symbol 3216 . 3226) (punctuation 3215 . 3216) (punctuation 3213 . 3214) (punctuation 3212 . 3213) (symbol 3200 . 3212) (punctuation 3199 . 3200) (string 3194 . 3199) (punctuation 3193 . 3194) (symbol 3182 . 3193) (punctuation 3181 . 3182) (semantic-list 3163 . 3180) (symbol 3148 . 3163) (punctuation 3146 . 3147) (symbol 3137 . 3146) (STATIC 3130 . 3136) (punctuation 3123 . 3124) (punctuation 3122 . 3123) (symbol 3110 . 3122) (punctuation 3109 . 3110) (CONST 3103 . 3108) (semantic-list 3100 . 3102) (symbol 3095 . 3100) (punctuation 3093 . 3094) (symbol 3084 . 3093) (punctuation 3078 . 3079) (punctuation 3077 . 3078) (string 3072 . 3077) (punctuation 3071 . 3072) (symbol 3060 . 3071) (punctuation 3059 . 3060) (semantic-list 2971 . 3058) (symbol 2962 . 2971) (punctuation 3043 . 3044) (punctuation 3042 . 3043) (punctuation 3008 . 3009) (punctuation 3007 . 3008) (symbol 2942 . 2945) (punctuation 2941 . 2942) (spp-include "style.hh" 2921 . 2940) (symbol 2906 . 2920) (punctuation 2905 . 2906) (punctuation 2802 . 2803) (semantic-list 1985 . 2802) (punctuation 1983 . 1984) (symbol 1975 . 1983) (punctuation 1974 . 1975) (symbol 1968 . 1973) (CLASS 1962 . 1967) (symbol 1864 . 1867) (punctuation 1863 . 1864) (symbol 1847 . 1862) (punctuation 1767 . 1768) (punctuation 1765 . 1766) (punctuation 1764 . 1765) (symbol 1752 . 1764) (punctuation 1751 . 1752) (semantic-list 1736 . 1750) (symbol 1730 . 1736) (punctuation 1728 . 1729) (symbol 1723 . 1728) (STATIC 1716 . 1722) (symbol 1707 . 1710) (punctuation 1706 . 1707) (symbol 1690 . 1705) (punctuation 1596 . 1597) (punctuation 1594 . 1595) (punctuation 1593 . 1594) (symbol 1581 . 1593) (punctuation 1580 . 1581) (CONST 1574 . 1579) (semantic-list 1571 . 1573) (symbol 1554 . 1571) (symbol 1541 . 1553) (symbol 1532 . 1535) (punctuation 1531 . 1532) (semantic-list 1519 . 1528) (RETURN 1488 . 1494) (symbol 1469 . 1479) (punctuation 1468 . 1469) (punctuation 1466 . 1467) (punctuation 1465 . 1466) (symbol 1453 . 1465) (punctuation 1452 . 1453) (CONST 1446 . 1451) (semantic-list 1443 . 1445) (symbol 1430 . 1443) (punctuation 1428 . 1429) (VOID 1424 . 1428) (symbol 1415 . 1418) (punctuation 1414 . 1415) (punctuation 1412 . 1413) (semantic-list 1407 . 1412) (UNSIGNED 1399 . 1407) (punctuation 1397 . 1398) (semantic-list 1387 . 1396) (UNSIGNED 1379 . 1387) (punctuation 1377 . 1378) (symbol 1370 . 1376) (symbol 1351 . 1361) (punctuation 1350 . 1351) (symbol 1303 . 1306) (punctuation 1302 . 1303) (punctuation 1300 . 1301) (semantic-list 1291 . 1300) (UNSIGNED 1283 . 1291) (punctuation 1281 . 1282) (symbol 1274 . 1280) (symbol 1255 . 1265) (punctuation 1254 . 1255) (symbol 1224 . 1227) (punctuation 1223 . 1224) (symbol 1102 . 1112) (punctuation 1101 . 1102) (symbol 1062 . 1065) (punctuation 1061 . 1062) (symbol 940 . 950) (punctuation 939 . 940) (symbol 901 . 904) (punctuation 900 . 901) (punctuation 898 . 899) (number 897 . 898) (RETURN 890 . 896) (semantic-list 733 . 862) (semantic-list 683 . 732) (IF 680 . 682) (semantic-list 596 . 675) (semantic-list 574 . 595) (IF 571 . 573) (semantic-list 514 . 566) (semantic-list 495 . 513) (IF 492 . 494) (semantic-list 323 . 487) (semantic-list 304 . 322) (IF 301 . 303) (symbol 228 . 245) (punctuation 227 . 228) (symbol 171 . 174) (punctuation 170 . 171) (spp-include "color.hh" 150 . 169) (symbol 135 . 149) (punctuation 134 . 135))))
  :file "!Users!eu!ac!acmacs!backend!sip!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
