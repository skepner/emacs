;; Object whoccseq/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "whoccseq/"
  :tables
  (list
    (semanticdb-table "fasta.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
Functions for reading and generating fasta files.
\"\"\"" code nil nil [40 97])
            ("collections" include nil nil [99 125])
            ("re" include nil nil [99 125])
            ("os" include nil nil [99 125])
            ("logging" include nil nil [126 140])
            ("open_file" include nil nil [193 209])
            ("FastaReaderError" type
               (:superclasses ("Exception")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [325 329]))                  
                :type "class")
                nil [285 330])
            ("read_from_file" function
               (:documentation "Yields tuple (name, sequence) for each entry in the file"
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [424 432]))                  )
                nil [405 587])
            ("read_from_string" function
               (:documentation "Yields tuple (name, sequence) for each entry in the string"
                :arguments 
                  ( ("source" variable nil (reparse-symbol function_parameters) [683 689])
                    ("filename" variable nil (reparse-symbol function_parameters) [691 699]))                  )
                nil [662 1524])
            ("sReSequence" variable nil nil [1599 1647])
            ("_check_sequence" function (:arguments 
              ( ("sequence" variable nil (reparse-symbol function_parameters) [1669 1677])
                ("name" variable nil (reparse-symbol function_parameters) [1679 1683])
                ("filename" variable nil (reparse-symbol function_parameters) [1685 1693])
                ("line_no" variable nil (reparse-symbol function_parameters) [1695 1702]))              ) nil [1649 2074])
            ("read_fasta_with_name_parsing" function
               (:documentation "Returns list of dict {\"name\":, \"sequence\":, \"date\":, \"lab\":}"
                :arguments 
                  ( ("fasta_file" variable nil (reparse-symbol function_parameters) [2182 2192])
                    ("lab" variable nil (reparse-symbol function_parameters) [2194 2197])
                    ("virus_type" variable nil (reparse-symbol function_parameters) [2199 2209])
                    ("_" variable nil (reparse-symbol function_parameters) [2211 2214]))                  )
                nil [2149 2871])
            ("sNameParser" variable nil nil [2946 2964])
            ("name_parser" function nil nil [2966 3090])
            ("NameParser" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [3142 5838]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3127 3131]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3114 5839])
                    ("parse" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5854 5858])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [5860 5868])
                            ("lab" variable nil (reparse-symbol function_parameters) [5870 5873]))                          )
                        (reparse-symbol indented_block_body) [5844 6159])
                    ("simple" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6175 6179])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [6181 6189])
                            ("m" variable nil (reparse-symbol function_parameters) [6191 6192])
                            ("_" variable nil (reparse-symbol function_parameters) [6194 6197]))                          )
                        (reparse-symbol indented_block_body) [6164 6234])
                    ("nimr_20090914" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6563 6567])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [6569 6577])
                            ("m" variable nil (reparse-symbol function_parameters) [6579 6580])
                            ("_" variable nil (reparse-symbol function_parameters) [6582 6585]))                          )
                        (reparse-symbol indented_block_body) [6545 6637])
                    ("mReCdcId" variable nil (reparse-symbol indented_block_body) [6642 6725])
                    ("gisaid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6742 6746])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [6748 6756])
                            ("m" variable nil (reparse-symbol function_parameters) [6758 6759])
                            ("with_date" variable nil (reparse-symbol function_parameters) [6761 6770])
                            ("lab" variable nil (reparse-symbol function_parameters) [6777 6780])
                            ("_" variable nil (reparse-symbol function_parameters) [6787 6790]))                          )
                        (reparse-symbol indented_block_body) [6731 7991])
                    ("_fix_gisaid_lab" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8016 8020])
                            ("lab" variable nil (reparse-symbol function_parameters) [8022 8025]))                          )
                        (reparse-symbol indented_block_body) [7996 8390])
                    ("gisaid_without_date" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8419 8423])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [8425 8433])
                            ("m" variable nil (reparse-symbol function_parameters) [8435 8436])
                            ("kw" variable nil (reparse-symbol function_parameters) [8438 8442]))                          )
                        (reparse-symbol indented_block_body) [8395 8519])
                    ("gisaid_melb" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8540 8544])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [8546 8554])
                            ("m" variable nil (reparse-symbol function_parameters) [8556 8557])
                            ("_" variable nil (reparse-symbol function_parameters) [8559 8562]))                          )
                        (reparse-symbol indented_block_body) [8524 8631])
                    ("melb_20100823" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8654 8658])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [8660 8668])
                            ("m" variable nil (reparse-symbol function_parameters) [8670 8671])
                            ("_" variable nil (reparse-symbol function_parameters) [8673 8676]))                          )
                        (reparse-symbol indented_block_body) [8636 8784])
                    ("melb_20110921" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8807 8811])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [8813 8821])
                            ("m" variable nil (reparse-symbol function_parameters) [8823 8824])
                            ("_" variable nil (reparse-symbol function_parameters) [8826 8829]))                          )
                        (reparse-symbol indented_block_body) [8789 8881])
                    ("name_only" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8900 8904])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [8906 8914])
                            ("m" variable nil (reparse-symbol function_parameters) [8916 8917])
                            ("_" variable nil (reparse-symbol function_parameters) [8919 8922]))                          )
                        (reparse-symbol indented_block_body) [8886 8974])
                    ("cdc_20100913" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8996 9000])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [9002 9010])
                            ("m" variable nil (reparse-symbol function_parameters) [9012 9013])
                            ("_" variable nil (reparse-symbol function_parameters) [9015 9018]))                          )
                        (reparse-symbol indented_block_body) [8979 9101])
                    ("name_passage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9123 9127])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [9129 9137])
                            ("m" variable nil (reparse-symbol function_parameters) [9139 9140])
                            ("_" variable nil (reparse-symbol function_parameters) [9142 9145]))                          )
                        (reparse-symbol indented_block_body) [9106 9228]))                  
                :type "class")
                nil [3091 9228])
            ("generate_one" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [9320 9324])
                ("sequence" variable nil (reparse-symbol function_parameters) [9326 9334])
                ("encode" variable nil (reparse-symbol function_parameters) [9336 9342])
                ("split" variable nil (reparse-symbol function_parameters) [9344 9349]))              ) nil [9303 9495])
            ("encode_name" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [9586 9590]))              ) nil [9570 9711])
            ("sequence_split" function (:arguments 
              ( ("sequence" variable nil (reparse-symbol function_parameters) [9805 9813])
                ("chunk_len" variable nil (reparse-symbol function_parameters) [9815 9824])
                ("separator" variable nil (reparse-symbol function_parameters) [9829 9838]))              ) nil [9786 10022])
            ("export" function
               (:documentation "
    output: filename or \"-\"
    output_format: \"fasta\", \"phylip\"
    truncate_to_most_common: bool - make all sequence of the same length, use the most common length among all data
    name_format: \"{name} {date} {lab_id} {passage} {lab} {gene} {seq_id}\"
    amino_acids: bool
    aligned: bool
    encode_name: bool
    wrap: bool - wrap lines with sequence
    "
                :arguments 
                  ( ("data" variable nil (reparse-symbol function_parameters) [10108 10112])
                    ("output" variable nil (reparse-symbol function_parameters) [10114 10120])
                    ("str" variable nil (reparse-symbol function_parameters) [10137 10140])
                    ("bool" variable nil (reparse-symbol function_parameters) [10167 10171])
                    ("name_format" variable nil (reparse-symbol function_parameters) [10173 10184])
                    ("bool" variable nil (reparse-symbol function_parameters) [10199 10203])
                    ("bool" variable nil (reparse-symbol function_parameters) [10214 10218])
                    ("bool" variable nil (reparse-symbol function_parameters) [10233 10237])
                    ("bool" variable nil (reparse-symbol function_parameters) [10245 10249]))                  )
                nil [10097 13717]))          
      :file "fasta.py"
      :pointmax 28623
      :fsize 28622
      :lastmodtime '(22275 22252 0 0)
      :unmatched-syntax '((NAME 10239 . 10243) (COLON 10244 . 10245) (NAME 10220 . 10231) (COLON 10232 . 10233) (NAME 10205 . 10212) (COLON 10213 . 10214) (NAME 10186 . 10197) (COLON 10198 . 10199) (NAME 10142 . 10165) (COLON 10166 . 10167) (NAME 10122 . 10135) (COLON 10136 . 10137) (FROM 186 . 190) (PERIOD 191 . 192)))
    (semanticdb-table "clades.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
Detects clade by aa sequence.
\"\"\"" code nil nil [40 77])
            ("json" include nil nil [79 99])
            ("sys" include nil nil [79 99])
            ("os" include nil nil [79 99])
            ("logging" include nil nil [100 114])
            ("clades_of" function (:arguments 
              ( ("virus_type" variable nil (reparse-symbol function_parameters) [249 259])
                ("lineage" variable nil (reparse-symbol function_parameters) [261 268])
                ("sequence" variable nil (reparse-symbol function_parameters) [270 278])
                ("shift" variable nil (reparse-symbol function_parameters) [280 285]))              ) nil [235 695])
            ("clades_B" function (:arguments 
              ( ("lineage" variable nil (reparse-symbol function_parameters) [783 790])
                ("sequence" variable nil (reparse-symbol function_parameters) [792 800])
                ("shift" variable nil (reparse-symbol function_parameters) [802 807]))              ) nil [770 1114])
            ("clades_B_yamagata" function (:arguments 
              ( ("sequence" variable nil (reparse-symbol function_parameters) [1211 1219])
                ("shift" variable nil (reparse-symbol function_parameters) [1221 1226]))              ) nil [1189 1460])
            ("clades_B_victoria" function (:arguments 
              ( ("sequence" variable nil (reparse-symbol function_parameters) [1557 1565])
                ("shift" variable nil (reparse-symbol function_parameters) [1567 1572]))              ) nil [1535 1601])
            ("clades_H1" function (:arguments 
              ( ("lineage" variable nil (reparse-symbol function_parameters) [1690 1697])
                ("sequence" variable nil (reparse-symbol function_parameters) [1699 1707])
                ("shift" variable nil (reparse-symbol function_parameters) [1709 1714]))              ) nil [1676 2342])
            ("clades_H3" function (:arguments 
              ( ("lineage" variable nil (reparse-symbol function_parameters) [2431 2438])
                ("sequence" variable nil (reparse-symbol function_parameters) [2440 2448])
                ("shift" variable nil (reparse-symbol function_parameters) [2450 2455]))              ) nil [2417 3472]))          
      :file "clades.py"
      :pointmax 3712
      :fsize 3711
      :lastmodtime '(22232 10903 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "open_file.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
Files opening and reading/writing functions.
\"\"\"" code nil nil [39 91])
            ("json" include nil nil [93 124])
            ("lzma" include nil nil [93 124])
            ("bz2" include nil nil [93 124])
            ("os" include nil nil [93 124])
            ("sys" include nil nil [93 124])
            ("logging" include nil nil [125 139])
            ("open_for_reading_binary" function
               (:documentation "Opens binary file for reading. Handles compressed files transparently."
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [288 296]))                  )
                nil [260 418])
            ("open_for_reading_text" function
               (:documentation "Opens text file for reading. Handles compressed files transparently."
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [519 527]))                  )
                nil [493 645])
            ("read_binary" function
               (:documentation "Reads and returns entire binary file content as bytes. Handles
    compressed files transparently."
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [736 744]))                  )
                nil [720 922])
            ("read_or_get_binary" function
               (:documentation "If data is a filename, reads it. Uncompresses data, if necessary."
                :arguments 
                  ( ("data" variable nil (reparse-symbol function_parameters) [1020 1024])
                    ("try_reading_from_file" variable nil (reparse-symbol function_parameters) [1026 1047]))                  )
                nil [997 1612])
            ("write_json" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [1702 1710])
                ("data" variable nil (reparse-symbol function_parameters) [1712 1716])
                ("indent" variable nil (reparse-symbol function_parameters) [1718 1724])
                ("sort_keys" variable nil (reparse-symbol function_parameters) [1731 1740])
                ("backup" variable nil (reparse-symbol function_parameters) [1748 1754]))              ) nil [1687 2053])
            ("read_json" function (:arguments 
              ( ("filename" variable nil (reparse-symbol function_parameters) [2142 2150]))              ) nil [2128 2215])
            ("json_dumps" function
               (:documentation "More compact dumper with wide lines."
                :arguments 
                  ( ("data" variable nil (reparse-symbol function_parameters) [2305 2309])
                    ("indent" variable nil (reparse-symbol function_parameters) [2311 2317])
                    ("indent_increment" variable nil (reparse-symbol function_parameters) [2321 2337]))                  )
                nil [2290 3811])
            ("open_for_writing_binary" function
               (:documentation "Opens binary file for writing. If compressed is None, autodetects if data should be compressed by filename suffix."
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [3914 3922])
                    ("compressed" variable nil (reparse-symbol function_parameters) [3924 3934])
                    ("backup" variable nil (reparse-symbol function_parameters) [3941 3947])
                    ("makedirs" variable nil (reparse-symbol function_parameters) [3954 3962]))                  )
                nil [3886 4899])
            ("write_binary" function
               (:documentation "Writes data (bytes) into a binary file. If compressed is None,
    autodetects if data should be compressed by filename suffix."
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [4991 4999])
                    ("data" variable nil (reparse-symbol function_parameters) [5001 5005])
                    ("compressed" variable nil (reparse-symbol function_parameters) [5007 5017])
                    ("backup" variable nil (reparse-symbol function_parameters) [5024 5030])
                    ("makedirs" variable nil (reparse-symbol function_parameters) [5037 5045]))                  )
                nil [4974 5319])
            ("backup_file" function
               (:documentation "Backup the file, if it exists. Backups versioning is supported."
                :arguments 
                  ( ("filename" variable nil (reparse-symbol function_parameters) [5410 5418])
                    ("backup_dir" variable nil (reparse-symbol function_parameters) [5420 5430]))                  )
                nil [5394 6100])
            ("FileBinaryReader" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [6242 6266])
                            ("self" variable nil (reparse-symbol indented_block_body) [6275 6295])
                            ("self" code nil (reparse-symbol indented_block_body) [6304 6318]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6217 6221])
                            ("filename" variable nil (reparse-symbol function_parameters) [6223 6231]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6204 6319])
                    ("read" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6333 6337])
                            ("size" variable nil (reparse-symbol function_parameters) [6339 6343]))                          )
                        (reparse-symbol indented_block_body) [6324 6510])
                    ("readline" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6528 6532]))                          )
                        (reparse-symbol indented_block_body) [6515 6696])
                    ("open_plain" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6716 6720]))                          )
                        (reparse-symbol indented_block_body) [6701 6806])
                    ("open_bz2" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6824 6828]))                          )
                        (reparse-symbol indented_block_body) [6811 6911])
                    ("open_xz" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6928 6932]))                          )
                        (reparse-symbol indented_block_body) [6916 7015])
                    ("open_fail" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7034 7038]))                          )
                        (reparse-symbol indented_block_body) [7020 7109])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7128 7132]))                          )
                        (reparse-symbol indented_block_body) [7114 7155])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7173 7177])
                            ("exc_type" variable nil (reparse-symbol function_parameters) [7179 7187])
                            ("exc_value" variable nil (reparse-symbol function_parameters) [7189 7198])
                            ("traceback" variable nil (reparse-symbol function_parameters) [7200 7209]))                          )
                        (reparse-symbol indented_block_body) [7160 7285])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7303 7307]))                          )
                        (reparse-symbol indented_block_body) [7290 7330])
                    ("__next__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7348 7352]))                          )
                        (reparse-symbol indented_block_body) [7335 7457]))                  
                :type "class")
                nil [6175 7457])
            ("FileTextReader" type
               (:superclasses ("FileBinaryReader")
                :members 
                  ( ("read" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7587 7591])
                            ("size" variable nil (reparse-symbol function_parameters) [7593 7597]))                          )
                        (reparse-symbol indented_block_body) [7578 7723])
                    ("readline" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7741 7745]))                          )
                        (reparse-symbol indented_block_body) [7728 7863]))                  
                :type "class")
                nil [7532 7863]))          
      :file "open_file.py"
      :pointmax 8029
      :fsize 8028
      :lastmodtime '(22230 55924 0 0)
      :unmatched-syntax '((INDENT_BLOCK 5990 . 6100) (NEWLINE 5989 . 5990) (COLON 5988 . 5989) (TRY 5911 . 5914) (AS 5982 . 5984) (NAME 3585 . 3590) (IF 3597 . 3599) (ELSE 3615 . 3619) (NAME 3219 . 3224) (IF 3231 . 3233) (ELSE 3249 . 3253) (INDENT_BLOCK 1464 . 1567) (NEWLINE 1463 . 1464) (COLON 1462 . 1463) (AS 1456 . 1458) (INDENT_BLOCK 1287 . 1355) (NEWLINE 1286 . 1287) (COLON 1285 . 1286) (TRY 1135 . 1138) (AS 1279 . 1281)))
    (semanticdb-table "garli.py"
      :major-mode 'python-mode
      :tags 
        '( ("operator" include nil nil [40 68])
            ("re" include nil nil [40 68])
            ("os" include nil nil [40 68])
            ("sys" include nil nil [40 68])
            ("pathlib" include nil nil [69 93])
            ("logging" include nil nil [94 108])
            ("htcondor" include nil nil [161 176])
            ("submit_to_htcondor" function (:arguments 
              ( ("int" variable nil (reparse-symbol function_parameters) [297 300])
                ("str" variable nil (reparse-symbol function_parameters) [310 313])
                ("str" variable nil (reparse-symbol function_parameters) [327 330])
                ("garli" variable nil (reparse-symbol function_parameters) [332 337])
                ("attachmentspertaxon" variable nil (reparse-symbol function_parameters) [356 375])
                ("randseed" variable nil (reparse-symbol function_parameters) [385 393])
                ("genthreshfortopoterm" variable nil (reparse-symbol function_parameters) [398 418])
                ("searchreps" variable nil (reparse-symbol function_parameters) [426 436])
                ("strip_comments" variable nil (reparse-symbol function_parameters) [440 454])
                ("email" variable nil (reparse-symbol function_parameters) [461 466])
                ("notification" variable nil (reparse-symbol function_parameters) [488 500])
                ("list" variable nil (reparse-symbol function_parameters) [520 524]))              ) nil [252 1218])
            ("sReGarliScore" variable nil nil [1293 1353])
            ("find_best_tree" function
               (:documentation "Gets the best tree among results genereted (eventually) by submit_to_htcondor"
                :arguments 
                  ( ("str" variable nil (reparse-symbol function_parameters) [1386 1389]))                  )
                nil [1355 1767])
            ("make_conf" function
               (:documentation "Returns filename of the written conf file"
                :arguments 
                  ( ("job_no" variable nil (reparse-symbol function_parameters) [1856 1862])
                    ("str" variable nil (reparse-symbol function_parameters) [1872 1875])
                    ("str" variable nil (reparse-symbol function_parameters) [1889 1892])
                    ("attachmentspertaxon" variable nil (reparse-symbol function_parameters) [1894 1913])
                    ("randseed" variable nil (reparse-symbol function_parameters) [1923 1931])
                    ("genthreshfortopoterm" variable nil (reparse-symbol function_parameters) [1936 1956])
                    ("searchreps" variable nil (reparse-symbol function_parameters) [1964 1974])
                    ("strip_comments" variable nil (reparse-symbol function_parameters) [1978 1992]))                  )
                nil [1842 2862])
            ("GARLI_CONF" variable nil nil [2937 14220]))          
      :file "garli.py"
      :pointmax 14387
      :fsize 14428
      :lastmodtime '(22258 52269 0 0)
      :unmatched-syntax '((NAME 1877 . 1887) (COLON 1888 . 1889) (NAME 1864 . 1870) (COLON 1871 . 1872) (NAME 1374 . 1384) (COLON 1385 . 1386) (NAME 510 . 518) (COLON 519 . 520) (NAME 315 . 325) (COLON 326 . 327) (NAME 302 . 308) (COLON 309 . 310) (NAME 275 . 295) (COLON 296 . 297) (FROM 154 . 158) (PERIOD 159 . 160)))
    (semanticdb-table "seqdb.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
Class to access sequence database
\"\"\"" code nil nil [40 81])
            ("operator" include nil nil [83 138])
            ("collections" include nil nil [83 138])
            ("bisect" include nil nil [83 138])
            ("re" include nil nil [83 138])
            ("json" include nil nil [83 138])
            ("sys" include nil nil [83 138])
            ("os" include nil nil [83 138])
            ("logging" include nil nil [139 153])
            ("utility" include nil nil [206 252])
            ("amino_acids" include nil nil [206 252])
            ("acmacs" include nil nil [206 252])
            ("open_file" include nil nil [206 252])
            ("timeit" include nil nil [267 280])
            ("Exclude" type
               (:superclasses ("Exception")
                :members 
                  ( ("pass" code nil nil nil))                  
                :type "class")
                nil [591 623])
            ("Seq" type
               (:members 
                  ( ("sReTrailingXs" variable nil (reparse-symbol indented_block_body) [714 748])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [797 821])
                            ("self" variable nil (reparse-symbol indented_block_body) [830 844]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [767 771])
                            ("db_entry" variable nil (reparse-symbol function_parameters) [773 781])
                            ("seq" variable nil (reparse-symbol function_parameters) [783 786]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [754 845])
                    ("name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [859 863]))                          )
                        (reparse-symbol indented_block_body) [850 900])
                    ("hi_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [917 921]))                          )
                        (reparse-symbol indented_block_body) [905 957])
                    ("name_hi" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [974 978]))                          )
                        (reparse-symbol indented_block_body) [962 1051])
                    ("seq_id" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1067 1071]))                          )
                        (reparse-symbol indented_block_body) [1056 1125])
                    ("virus_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1145 1149]))                          )
                        (reparse-symbol indented_block_body) [1130 1186])
                    ("lineage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1203 1207]))                          )
                        (reparse-symbol indented_block_body) [1191 1248])
                    ("passage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1265 1269]))                          )
                        (reparse-symbol indented_block_body) [1253 1387])
                    ("shift" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1402 1406]))                          )
                        (reparse-symbol indented_block_body) [1392 1442])
                    ("nuc_shift" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1461 1465]))                          )
                        (reparse-symbol indented_block_body) [1447 1501])
                    ("aa" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1513 1517]))                          )
                        (reparse-symbol indented_block_body) [1506 1553])
                    ("nuc" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1566 1570]))                          )
                        (reparse-symbol indented_block_body) [1558 1602])
                    ("date" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1616 1620]))                          )
                        (reparse-symbol indented_block_body) [1607 1719])
                    ("aligned" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1736 1740])
                            ("bool" variable nil (reparse-symbol function_parameters) [1754 1758])
                            ("int" variable nil (reparse-symbol function_parameters) [1770 1773]))                          )
                        (reparse-symbol indented_block_body) [1724 1929])
                    ("nuc_aligned" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1950 1954])
                            ("truncate" variable nil (reparse-symbol function_parameters) [1956 1964]))                          )
                        (reparse-symbol indented_block_body) [1934 2173])
                    ("aa_aligned" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2193 2197])
                            ("truncate" variable nil (reparse-symbol function_parameters) [2199 2207]))                          )
                        (reparse-symbol indented_block_body) [2178 2951])
                    ("_shift" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2984 2987])
                            ("seq" variable nil (reparse-symbol function_parameters) [2989 2992])
                            ("shift" variable nil (reparse-symbol function_parameters) [2994 2999])
                            ("fill" variable nil (reparse-symbol function_parameters) [3001 3005]))                          )
                        (reparse-symbol indented_block_body) [2956 3143])
                    ("_truncate" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3179 3182])
                            ("seq" variable nil (reparse-symbol function_parameters) [3184 3187])
                            ("truncate" variable nil (reparse-symbol function_parameters) [3189 3197]))                          )
                        (reparse-symbol indented_block_body) [3148 3419])
                    ("hamming_distance" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3445 3449])
                            ("bool" variable nil (reparse-symbol function_parameters) [3477 3481])
                            ("int" variable nil (reparse-symbol function_parameters) [3493 3496]))                          )
                        (reparse-symbol indented_block_body) [3424 3741])
                    ("hamming_distance_many" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3772 3776])
                            ("list" variable nil (reparse-symbol function_parameters) [3785 3789])
                            ("bool" variable nil (reparse-symbol function_parameters) [3803 3807]))                          
                        :documentation "Returns list of distances (int), order is the same as other")
                        (reparse-symbol indented_block_body) [3746 4071])
                    ("gene" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4085 4089]))                          )
                        (reparse-symbol indented_block_body) [4076 4131])
                    ("lab_matches" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4152 4156])
                            ("lab" variable nil (reparse-symbol function_parameters) [4158 4161]))                          )
                        (reparse-symbol indented_block_body) [4136 4222])
                    ("labs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4236 4240]))                          )
                        (reparse-symbol indented_block_body) [4227 4278])
                    ("lab_ids" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4295 4299])
                            ("lab" variable nil (reparse-symbol function_parameters) [4301 4304]))                          )
                        (reparse-symbol indented_block_body) [4283 4341])
                    ("aa_len" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4357 4361]))                          )
                        (reparse-symbol indented_block_body) [4346 4419])
                    ("aa_at_pos0" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4439 4443])
                            ("pos" variable nil (reparse-symbol function_parameters) [4445 4448]))                          
                        :documentation "Returns aa at pos, pos is counted starting with 0")
                        (reparse-symbol indented_block_body) [4424 4648])
                    ("aa_at_pos" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4667 4671])
                            ("pos" variable nil (reparse-symbol function_parameters) [4673 4676]))                          
                        :documentation "Returns aa at pos, pos is counted starting with 1")
                        (reparse-symbol indented_block_body) [4653 4783])
                    ("align" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4798 4802]))                          )
                        (reparse-symbol indented_block_body) [4788 4918])
                    ("clades" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4934 4938]))                          )
                        (reparse-symbol indented_block_body) [4923 4974])
                    ("set_clades" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4994 4998])
                            ("clades" variable nil (reparse-symbol function_parameters) [5000 5006]))                          )
                        (reparse-symbol indented_block_body) [4979 5040]))                  
                :type "class")
                nil [698 5040])
            ("most_common_length" function
               (:documentation "Returns most common length for the passed list of Seq"
                :arguments 
                  ( ("sequences" variable nil (reparse-symbol function_parameters) [5138 5147])
                    ("amino_acid" variable nil (reparse-symbol function_parameters) [5149 5159]))                  )
                nil [5115 5365])
            ("SeqDB" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [6125 6153])
                            ("if" code nil (reparse-symbol indented_block_body) [6162 6243]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6080 6084])
                            ("path_to_db" variable nil (reparse-symbol function_parameters) [6086 6096])
                            ("try_to_load" variable nil (reparse-symbol function_parameters) [6098 6109]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6067 6243])
                    ("add_sequences" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6328 6332])
                            ("data" variable nil (reparse-symbol function_parameters) [6334 6338]))                          
                        :documentation "Adds sequences to the database, data is a list of dict {\"sequence\":, \"name\":, \"date\":, \"passage\":, \"lab\":, \"virus_type\":, \"gene\":, \"lab_id\":}
        name, passage, date will be normalized before adding.
        ")
                        (reparse-symbol indented_block_body) [6310 6790])
                    ("load" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6866 6870]))                          )
                        (reparse-symbol indented_block_body) [6857 7318])
                    ("save" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7332 7336]))                          )
                        (reparse-symbol indented_block_body) [7323 7532])
                    ("iterate_sequences" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7621 7625]))                          
                        :documentation "Yields Seq")
                        (reparse-symbol indented_block_body) [7599 7767])
                    ("iterate_sequences_with" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7799 7803])
                            ("list" variable nil (reparse-symbol function_parameters) [7811 7815])
                            ("list" variable nil (reparse-symbol function_parameters) [7837 7841])
                            ("str" variable nil (reparse-symbol function_parameters) [7859 7862])
                            ("str" variable nil (reparse-symbol function_parameters) [7877 7880])
                            ("aligned" variable nil (reparse-symbol function_parameters) [7889 7896])
                            ("str" variable nil (reparse-symbol function_parameters) [7916 7919])
                            ("str" variable nil (reparse-symbol function_parameters) [7938 7941])
                            ("with_hi_name" variable nil (reparse-symbol function_parameters) [7950 7962])
                            ("str" variable nil (reparse-symbol function_parameters) [7984 7987]))                          
                        :documentation "Yields Seq")
                        (reparse-symbol indented_block_body) [7772 10196])
                    ("iterate_sequences_aligned_with_virus_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10247 10251])
                            ("virus_type" variable nil (reparse-symbol function_parameters) [10253 10263]))                          
                        :documentation "Yields Seq")
                        (reparse-symbol indented_block_body) [10201 10577])
                    ("iterate_sequences_with_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10614 10618])
                            ("names" variable nil (reparse-symbol function_parameters) [10620 10625]))                          
                        :documentation "Yields Seq")
                        (reparse-symbol indented_block_body) [10582 11111])
                    ("iterate_sequences_not_aligned" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11150 11154]))                          
                        :documentation "Yields Seq")
                        (reparse-symbol indented_block_body) [11116 11335])
                    ("report" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11413 11417]))                          )
                        (reparse-symbol indented_block_body) [11402 14113])
                    ("reset_hi_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14198 14202]))                          )
                        (reparse-symbol indented_block_body) [14180 14313])
                    ("reset_clade_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14339 14343]))                          )
                        (reparse-symbol indented_block_body) [14318 14452])
                    ("_iterate_sequences" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14542 14546]))                          )
                        (reparse-symbol indented_block_body) [14519 14634])
                    ("_add_sequence" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14719 14723])
                            ("data" variable nil (reparse-symbol function_parameters) [14725 14729]))                          )
                        (reparse-symbol indented_block_body) [14701 15934])
                    ("_update_db_entry" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15960 15964])
                            ("entry" variable nil (reparse-symbol function_parameters) [15966 15971])
                            ("data" variable nil (reparse-symbol function_parameters) [15973 15977]))                          )
                        (reparse-symbol indented_block_body) [15939 17178])
                    ("_look_for_the_same_sequence" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17215 17219])
                            ("entry" variable nil (reparse-symbol function_parameters) [17221 17226])
                            ("data" variable nil (reparse-symbol function_parameters) [17228 17232]))                          
                        :documentation "If no matching sequence found returns None. Else updates
        passage entry, if passage is the same. Returns string describing
        match type.
        ")
                        (reparse-symbol indented_block_body) [17183 18354])
                    ("_sequences_match" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18380 18384])
                            ("master" variable nil (reparse-symbol function_parameters) [18386 18392])
                            ("s" variable nil (reparse-symbol function_parameters) [18394 18395]))                          )
                        (reparse-symbol indented_block_body) [18359 18596])
                    ("_update_entry_passage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18627 18631])
                            ("entry_passage" variable nil (reparse-symbol function_parameters) [18633 18646])
                            ("data" variable nil (reparse-symbol function_parameters) [18648 18652])
                            ("sequence_match" variable nil (reparse-symbol function_parameters) [18654 18668])
                            ("db_entry" variable nil (reparse-symbol function_parameters) [18670 18678]))                          )
                        (reparse-symbol indented_block_body) [18601 19957])
                    ("sReH1AlignCheck1" variable nil (reparse-symbol indented_block_body) [19962 20016])
                    ("sReH1AlignCheck2" variable nil (reparse-symbol indented_block_body) [20021 20063])
                    ("sReH3AlignCheck1" variable nil (reparse-symbol indented_block_body) [20068 20135])
                    ("sReBAlignCheck1" variable nil (reparse-symbol indented_block_body) [20140 20227])
                    ("_check_aligned" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20252 20256])
                            ("entry_passage" variable nil (reparse-symbol function_parameters) [20258 20271])
                            ("db_entry" variable nil (reparse-symbol function_parameters) [20273 20281]))                          )
                        (reparse-symbol indented_block_body) [20233 21344])
                    ("_multiple_sequences_per_passage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24281 24285])
                            ("entry" variable nil (reparse-symbol function_parameters) [24287 24292]))                          )
                        (reparse-symbol indented_block_body) [24245 24524])
                    ("normalize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24605 24609])
                            ("data" variable nil (reparse-symbol function_parameters) [24611 24615]))                          )
                        (reparse-symbol indented_block_body) [24591 25513])
                    ("_normalize_x" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25535 25539])
                            ("key" variable nil (reparse-symbol function_parameters) [25541 25544])
                            ("data" variable nil (reparse-symbol function_parameters) [25546 25550]))                          )
                        (reparse-symbol indented_block_body) [25518 25753])
                    ("sReNamePrefix" variable nil (reparse-symbol indented_block_body) [25836 25903])
                    ("sReYear" variable nil (reparse-symbol indented_block_body) [25908 25963])
                    ("_split_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25985 25989])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [25991 25999]))                          )
                        (reparse-symbol indented_block_body) [25969 26424])
                    ("normalize_virus_type" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [26549 26552])
                            ("vt" variable nil (reparse-symbol function_parameters) [26554 26556]))                          )
                        (reparse-symbol indented_block_body) [26507 26967])
                    ("sLabs" variable nil (reparse-symbol indented_block_body) [26972 27091])
                    ("normalize_lab" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [27132 27135])
                            ("lab" variable nil (reparse-symbol function_parameters) [27137 27140]))                          )
                        (reparse-symbol indented_block_body) [27097 27289])
                    ("sLineages" variable nil (reparse-symbol indented_block_body) [27294 27392])
                    ("normalize_lineage" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [27437 27440])
                            ("lineage" variable nil (reparse-symbol function_parameters) [27442 27449]))                          )
                        (reparse-symbol indented_block_body) [27398 27614])
                    ("sReDate" variable nil (reparse-symbol indented_block_body) [27697 27788])
                    ("_fix_date" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [27825 27828])
                            ("date" variable nil (reparse-symbol function_parameters) [27830 27834]))                          )
                        (reparse-symbol indented_block_body) [27794 28090])
                    ("find_by_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28243 28247])
                            ("name" variable nil (reparse-symbol function_parameters) [28249 28253])
                            ("return_index" variable nil (reparse-symbol function_parameters) [28255 28267]))                          )
                        (reparse-symbol indented_block_body) [28226 28638])
                    ("_insert_by_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28663 28667])
                            ("entry" variable nil (reparse-symbol function_parameters) [28669 28674]))                          )
                        (reparse-symbol indented_block_body) [28643 28933]))                  
                :type "class")
                nil [6049 28933]))          
      :file "seqdb.py"
      :pointmax 29099
      :fsize 29098
      :lastmodtime '(22275 30123 0 0)
      :unmatched-syntax '((RETURN 28467 . 28473) (IF 28478 . 28480) (ELSE 28494 . 28498) (INDENT_BLOCK 19917 . 19957) (NEWLINE 19916 . 19917) (COLON 19915 . 19916) (TRY 19260 . 19263) (AS 19909 . 19911) (INDENT_BLOCK 15427 . 15794) (NEWLINE 15426 . 15427) (COLON 15425 . 15426) (TRY 15330 . 15333) (AS 15419 . 15421) (NAME 7970 . 7982) (COLON 7983 . 7984) (NAME 7928 . 7936) (COLON 7937 . 7938) (NAME 7904 . 7914) (COLON 7915 . 7916) (NAME 7871 . 7875) (COLON 7876 . 7877) (NAME 7850 . 7857) (COLON 7858 . 7859) (NAME 7824 . 7835) (COLON 7836 . 7837) (NAME 7805 . 7809) (COLON 7810 . 7811) (NAME 3791 . 3801) (COLON 3802 . 3803) (NAME 3778 . 3783) (COLON 3784 . 3785) (NAME 3483 . 3491) (COLON 3492 . 3493) (COLON 3476 . 3477) (COMMA 3463 . 3464) (STRING_LITERAL 3458 . 3463) (NAME 3451 . 3456) (COLON 3457 . 3458) (NAME 1760 . 1768) (COLON 1769 . 1770) (NAME 1742 . 1752) (COLON 1753 . 1754) (FROM 253 . 257) (PERIOD 258 . 259) (FROM 199 . 203) (PERIOD 204 . 205) (FROM 253 . 257) (PERIOD 258 . 259) (FROM 199 . 203) (PERIOD 204 . 205)))
    (semanticdb-table "htcondor.py"
      :file "htcondor.py"
      :fsize 5560
      :lastmodtime '(22262 11242 0 0))
    (semanticdb-table "utility.py"
      :file "utility.py"
      :fsize 1622
      :lastmodtime '(22219 6681 0 0))
    (semanticdb-table "amino_acids.py"
      :file "amino_acids.py"
      :fsize 34968
      :lastmodtime '(22249 15684 0 0))
    (semanticdb-table "acmacs.py"
      :file "acmacs.py"
      :fsize 2928
      :lastmodtime '(22195 6304 0 0)))
  :file "!Users!eu!GH!whocc-sequences!whoccseq!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
