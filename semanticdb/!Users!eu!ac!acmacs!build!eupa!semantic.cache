;; Object eupa/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "eupa/"
  :tables
  (list
    (semanticdb-table "Makefile.eupa"
      :major-mode 'makefile-mode
      :tags 
        '( ("MAKEFLAGS" variable (:default-value ("-w")) nil [43 58])
            ("EUPA_DIST" function (:arguments ("=" "$(abspath $(EUPA_DIST))")) nil [422 468])
            ("override" function (:arguments ("=" "$(abspath $(EUPA_DIST))")) nil [422 468])
            ("EUPA_BUILD" function (:arguments ("=" "$(abspath $(EUPA_BUILD))")) nil [468 516])
            ("override" function (:arguments ("=" "$(abspath $(EUPA_BUILD))")) nil [468 516])
            ("EUPA_MAKEFILE" variable (:default-value ("$(abspath $(lastword $(MAKEFILE_LIST)))")) nil [517 574])
            ("SUBMAKE" variable (:default-value ("$(MAKE)" "EUPA_DIST=$(EUPA_DIST)" "EUPA_BUILD=$(EUPA_BUILD)" "EUPA_MAKEFILE=$(EUPA_MAKEFILE)")) nil [575 672])
            ("CURL" variable (:default-value ("curl" "-sL")) nil [747 763])
            ("AWK" variable (:default-value ("awk")) nil [763 773])
            ("GIT" variable (:default-value ("git")) nil [773 783])
            ("UNAME_S" variable (:default-value ("$(shell uname -s)")) nil [784 813])
            ("EUPA_BIN" variable (:default-value ("$(EUPA_BUILD)/bin")) nil [888 917])
            ("EUPA_LIB" variable (:default-value ("$(EUPA_BUILD)/lib")) nil [917 946])
            ("EUPA_INCLUDE" variable (:default-value ("$(EUPA_BUILD)/include")) nil [946 983])
            ("COFFEE" variable (:default-value ("$(EUPA_BIN)/coffee")) nil [984 1012])
            ("COFFEE_RUN" variable (:default-value ("$(COFFEE)")) nil [1012 1035])
            ("COFFEELINT" variable (:default-value ("$(EUPA_BIN)/coffeelint")) nil [1035 1071])
            ("LESSC" variable (:default-value ("$(EUPA_BIN)/lessc")) nil [1071 1097])
            ("LESSC_RUN" variable (:default-value ("$(LESSC)" "--plugin=less-plugin-clean-css=\"advanced\"")) nil [1097 1160])
            ("TSC" variable (:default-value ("$(EUPA_BIN)/tsc")) nil [1160 1182])
            ("TSC_RUN" variable (:default-value ("$(TSC)" "-m" "amd" "--removeComments" "-t" "ES5" "--noEmitOnError" "--noImplicitAny")) nil [1182 1262])
            ("NPM" variable (:default-value ("$(EUPA_BIN)/npm")) nil [1262 1284])
            ("UGLIFYCSS" variable (:default-value ("$(EUPA_BIN)/uglifycss")) nil [1284 1318])
            ("UGLIFYJS" variable (:default-value ("$(EUPA_BIN)/uglifyjs")) nil [1318 1350])
            ("RUN_NPM" variable (:default-value ("/usr/bin/env" "PREFIX=" "$(NPM)")) nil [1461 1499])
            ("eupa_all" function nil nil [1574 1603])
            ("eupa_clean" function nil nil [1604 1651])
            ("axe" function (:arguments ("$(EUPA_INCLUDE)/axe/axe.h")) nil [1738 1769])
            ("command-line-arguments" function (:arguments ("$(EUPA_INCLUDE)/command-line-arguments.hh")) nil [1769 1835])
            ("cairo" function (:arguments ("cairo-pkg")) nil [1835 1852])
            ("jsonhpp" function (:arguments ("$(EUPA_INCLUDE)/json.hpp")) nil [1852 1886])
            ("antigenic-map-viewer" function (:arguments ("$(EUPA_BUILD)/antigenic-map-viewer/amv-level2.js")) nil [1898 1969])
            ("coffeelint" function (:arguments ("$(COFFEELINT)")) nil [1969 1995])
            ("coffee-script" function (:arguments ("$(COFFEE)")) nil [1995 2033])
            ("coffeescript" function (:arguments ("$(COFFEE)")) nil [1995 2033])
            ("jquery.js" function (:arguments ("$(EUPA_DIST)/jquery.js" "$(EUPA_BUILD)/jquery.d.ts" "$(EUPA_DIST)/jquery.mousewheel.js")) nil [2033 2134])
            ("jquery" function (:arguments ("$(EUPA_DIST)/jquery.js" "$(EUPA_BUILD)/jquery.d.ts" "$(EUPA_DIST)/jquery.mousewheel.js")) nil [2033 2134])
            ("jquery-ui.js" function (:arguments ("$(EUPA_DIST)/jquery-ui.js" "$(EUPA_BUILD)/jqueryui.d.ts")) nil [2134 2212])
            ("jquery-ui" function (:arguments ("$(EUPA_DIST)/jquery-ui.js" "$(EUPA_BUILD)/jqueryui.d.ts")) nil [2134 2212])
            ("less" function (:arguments ("$(LESSC)" "$(EUPA_LIB)/node_modules/less-plugin-clean-css")) nil [2212 2280])
            ("lessc" function (:arguments ("$(LESSC)" "$(EUPA_LIB)/node_modules/less-plugin-clean-css")) nil [2212 2280])
            ("md5.js" function (:arguments ("$(EUPA_DIST)/md5.js")) nil [2280 2308])
            ("require.js" function (:arguments ("$(EUPA_DIST)/require.js" "$(EUPA_BUILD)/require.d.ts" "$(EUPA_DIST)/css.js" "$(EUPA_DIST)/json.js" "$(EUPA_DIST)/text.js")) nil [2308 2433])
            ("three.js" function (:arguments ("$(EUPA_DIST)/three.js" "$(EUPA_BUILD)/three.d.ts")) nil [2502 2559])
            ("typescript" function (:arguments ("$(TSC)")) nil [2559 2582])
            ("tsc" function (:arguments ("$(TSC)")) nil [2559 2582])
            ("uglifycss" function (:arguments ("$(UGLIFYCSS)")) nil [2582 2606])
            ("uglifyjs" function (:arguments ("$(UGLIFYJS)")) nil [2606 2628])
            ("GIT_CLONE_PREFIX" variable (:default-value ("$(GIT)" "clone" "$(GIT_URL_PREFIX)")) nil [2829 2879])
            ("$(EUPA_DIST)" function (:arguments ("|" "$(EUPA_DIST)")) nil [3240 3406])
            ("$(EUPA_DIST)" function (:arguments ("|" "$(EUPA_DIST)" "$(EUPA_BUILD)")) nil [3407 4364])
            ("$(EUPA_DIST)" function (:arguments ("|" "$(EUPA_DIST)")) nil [4365 4536])
            ("$(EUPA_DIST)" function (:arguments ("|" "$(EUPA_DIST)")) nil [4537 4649])
            ("$(EUPA_DIST)" function (:arguments ("|" "$(EUPA_DIST)" "$(UGLIFYJS)")) nil [4650 4793])
            ("$(EUPA_DIST)" function (:arguments ("|" "$(EUPA_DIST)" "$(UGLIFYJS)")) nil [4794 4937])
            ("$(EUPA_DIST)" function (:arguments ("|" "$(EUPA_DIST)")) nil [4938 5224])
            ("$(EUPA_DIST)" function (:arguments ("|" "$(EUPA_DIST)" "$(UGLIFYJS)")) nil [5517 5639])
            ("$(EUPA_BUILD)" function (:arguments ("|" "$(EUPA_BUILD)")) nil [5714 6017])
            ("$(EUPA_INCLUDE)" function (:arguments ("|" "$(EUPA_BUILD)" "$(EUPA_INCLUDE)")) nil [6358 6584])
            ("$(EUPA_INCLUDE)" function (:arguments ("|" "$(EUPA_BUILD)" "$(EUPA_INCLUDE)")) nil [6585 6936])
            ("cairo-pkg" function nil nil [6937 7268])
            ("$(EUPA_INCLUDE)" function (:arguments ("|" "$(EUPA_BUILD)" "$(EUPA_INCLUDE)")) nil [8485 8626])
            ("$(EUPA_BUILD)" function (:arguments ("|" "$(EUPA_BUILD)")) nil [8701 8831])
            ("$(EUPA_BUILD)" function (:arguments ("|" "$(EUPA_BUILD)")) nil [8832 9096])
            ("$(EUPA_BUILD)" function (:arguments ("|" "$(EUPA_BUILD)")) nil [9097 9241])
            ("$(EUPA_BUILD)" function (:arguments ("|" "$(EUPA_BUILD)")) nil [9242 9571])
            ("NPM_FIX_OUTPUT" variable (:default-value ("grep" "-vE" "'[└├│\\[]'")) nil [9646 9682])
            ("$(COFFEE)" function (:arguments ("|" "$(NPM)")) nil [9683 9765])
            ("$(COFFEELINT)" function (:arguments ("|" "$(NPM)")) nil [9766 9849])
            ("$(LESSC)" function (:arguments ("|" "$(NPM)")) nil [9850 9922])
            ("$(TSC)" function (:arguments ("|" "$(NPM)")) nil [9923 9999])
            ("$(EUPA_LIB)" function (:arguments ("|" "$(NPM)")) nil [10000 10127])
            ("$(UGLIFYCSS)" function (:arguments ("|" "$(NPM)")) nil [10128 10209])
            ("$(UGLIFYJS)" function (:arguments ("|" "$(NPM)")) nil [10210 10289])
            ("NODE_URL" variable (:default-value ("https://nodejs.org/dist/latest-v4.x/")) nil [10553 10601])
            ("NODE_EXTRACT_DIR" variable (:default-value ("$(EUPA_BUILD)/node")) nil [10601 10639])
            ("$(NPM)" function (:arguments ("|" "$(EUPA_BUILD)" "$(EUPA_BIN)" "$(EUPA_LIB)")) nil [10640 11105])
            ("$(EUPA_BIN)" function (:arguments ("|" "$(EUPA_BUILD)" "$(EUPA_BIN)" "$(EUPA_LIB)")) nil [10640 11105])
            ("$(EUPA_BUILD)" function nil nil [11180 11245])
            ("$(EUPA_BIN)" function (:arguments ("$(EUPA_BUILD)")) nil [11246 11319])
            ("$(EUPA_LIB)" function (:arguments ("$(EUPA_BUILD)")) nil [11320 11393])
            ("$(EUPA_INCLUDE)" function (:arguments ("$(EUPA_BUILD)")) nil [11394 11479])
            ("$(EUPA_DIST)" function nil nil [11480 11542])
            ("Usage" function (:arguments ("make" "[variable-assignments]" "target")) nil [12165 12207])
            ("Variables" function nil nil [12207 12218])
            ("ERROR" function (:arguments ("Either" "EUPA_DIST" "or" "EUPA_BUILD" "not" "set:")) nil [12422 12469]))          
      :file "Makefile.eupa"
      :pointmax 12606
      :fsize 12611
      :lastmodtime '(22334 53294 0 0)
      :unmatched-syntax '((semantic-list 12582 . 12599) (punctuation 12581 . 12582) (bol 12579 . 12579) (symbol 12530 . 12535) (bol 12530 . 12530) (semantic-list 12522 . 12529) (punctuation 12521 . 12522) (bol 12521 . 12521) (semantic-list 12508 . 12520) (punctuation 12507 . 12508) (punctuation 12506 . 12507) (symbol 12496 . 12506) (bol 12494 . 12494) (semantic-list 12482 . 12493) (punctuation 12481 . 12482) (punctuation 12480 . 12481) (symbol 12471 . 12480) (bol 12469 . 12469) (symbol 12414 . 12420) (symbol 12407 . 12413) (bol 12407 . 12407) (symbol 12400 . 12405) (bol 12400 . 12400) (symbol 12389 . 12399) (punctuation 12387 . 12388) (symbol 12380 . 12387) (symbol 12378 . 12379) (symbol 12362 . 12377) (bol 12360 . 12360) (symbol 12354 . 12359) (symbol 12349 . 12353) (punctuation 12347 . 12348) (symbol 12343 . 12347) (symbol 12338 . 12342) (punctuation 12336 . 12337) (symbol 12332 . 12336) (symbol 12325 . 12331) (symbol 12320 . 12324) (punctuation 12318 . 12319) (symbol 12310 . 12318) (symbol 12306 . 12309) (symbol 12296 . 12305) (symbol 12283 . 12295) (symbol 12281 . 12282) (symbol 12270 . 12280) (bol 12268 . 12268) (symbol 12262 . 12267) (symbol 12258 . 12261) (symbol 12254 . 12257) (symbol 12245 . 12253) (symbol 12232 . 12244) (symbol 12230 . 12231) (symbol 12220 . 12229) (bol 12218 . 12218) (symbol 12158 . 12163) (symbol 12151 . 12157) (bol 12151 . 12151) (symbol 12070 . 12075) (bol 12070 . 12070) (symbol 12067 . 12069) (punctuation 12065 . 12066) (semantic-list 12062 . 12065) (punctuation 12061 . 12062) (symbol 12058 . 12060) (symbol 12052 . 12057) (symbol 12047 . 12051) (punctuation 12045 . 12046) (semantic-list 12032 . 12045) (IF 12029 . 12031) (punctuation 12028 . 12029) (bol 12026 . 12026) (symbol 12023 . 12025) (punctuation 12021 . 12022) (symbol 12020 . 12021) (symbol 12015 . 12019) (punctuation 12013 . 12014) (symbol 12010 . 12013) (symbol 12006 . 12009) (symbol 12002 . 12005) (symbol 11999 . 12001) (semantic-list 11995 . 11998) (punctuation 11994 . 11995) (symbol 11989 . 11993) (symbol 11984 . 11988) (punctuation 11982 . 11983) (semantic-list 11969 . 11982) (IF 11966 . 11968) (punctuation 11965 . 11966) (bol 11963 . 11963) (symbol 11947 . 11962) (symbol 11940 . 11946) (bol 11940 . 11940) (symbol 11933 . 11938) (bol 11933 . 11933) (punctuation 11931 . 11932) (punctuation 11930 . 11931) (symbol 11927 . 11929) (symbol 11924 . 11926) (symbol 11912 . 11923) (semantic-list 11901 . 11911) (punctuation 11900 . 11901) (symbol 11898 . 11899) (semantic-list 11894 . 11897) (punctuation 11893 . 11894) (semantic-list 11886 . 11892) (punctuation 11885 . 11886) (bol 11883 . 11883) (symbol 11873 . 11882) (symbol 11866 . 11872) (bol 11866 . 11866) (symbol 11859 . 11864) (bol 11859 . 11859) (symbol 11854 . 11858) (punctuation 11853 . 11854) (punctuation 11852 . 11853) (symbol 11849 . 11851) (bol 11847 . 11847) (punctuation 11845 . 11846) (punctuation 11844 . 11845) (symbol 11843 . 11844) (symbol 11838 . 11842) (punctuation 11837 . 11838) (punctuation 11836 . 11837) (symbol 11820 . 11835) (semantic-list 11808 . 11819) (punctuation 11807 . 11808) (bol 11805 . 11805) (semantic-list 11801 . 11804) (punctuation 11800 . 11801) (symbol 11795 . 11799) (punctuation 11794 . 11795) (punctuation 11793 . 11794) (symbol 11790 . 11792) (semantic-list 11783 . 11789) (punctuation 11782 . 11783) (bol 11780 . 11780) (symbol 11769 . 11779) (symbol 11762 . 11768) (bol 11762 . 11762) (semantic-list 10507 . 10546) (punctuation 10506 . 10507) (bol 10504 . 10504) (symbol 10482 . 10498) (punctuation 10480 . 10481) (symbol 10461 . 10479) (bol 10459 . 10459) (semantic-list 10440 . 10458) (IFEQ 10435 . 10439) (ELSE 10430 . 10434) (bol 10430 . 10430) (symbol 10412 . 10429) (punctuation 10410 . 10411) (symbol 10391 . 10409) (bol 10389 . 10389) (shell-command 3225 . 3238) (bol 3224 . 3224) (shell-command 2995 . 3223) (bol 2994 . 2994) (semantic-list 2982 . 2993) (punctuation 2981 . 2982) (symbol 2979 . 2980) (punctuation 2977 . 2978) (symbol 2967 . 2977) (semantic-list 2956 . 2967) (punctuation 2955 . 2956) (bol 2954 . 2954) (symbol 2809 . 2822) (punctuation 2808 . 2809) (symbol 2803 . 2808) (punctuation 2801 . 2802) (symbol 2786 . 2800) (bol 2784 . 2784) (punctuation 2777 . 2778) (symbol 2767 . 2777) (punctuation 2766 . 2767) (symbol 2763 . 2766) (punctuation 2761 . 2762) (symbol 2746 . 2760) (bol 2744 . 2744) (symbol 334 . 346) (semantic-list 322 . 334) (punctuation 321 . 322) (punctuation 319 . 320) (punctuation 318 . 319) (symbol 289 . 317) (symbol 282 . 288) (bol 282 . 282) (symbol 229 . 239) (punctuation 227 . 228) (punctuation 226 . 227) (symbol 210 . 225) (bol 210 . 210))))
  :file "!Users!eu!ac!acmacs!build!eupa!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
