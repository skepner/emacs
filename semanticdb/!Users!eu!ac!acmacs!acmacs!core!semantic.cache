;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("calendar" include nil nil [113 138])
            ("datetime" include nil nil [113 138])
            ("logging" include nil nil [139 153])
            ("basic_type" include nil nil [216 233])
            ("parsers" include nil nil [241 280])
            ("chart" include nil nil [241 280])
            ("basic" include nil nil [241 280])
            ("Period" type
               (:superclasses ("basic.Base")
                :members 
                  ( ("Entry" type
                       (:members 
                          ( ("__init__" function
                               (:suite 
                                  ( ("self" variable nil (reparse-symbol indented_block_body) [456 488]))                                  
                                :parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [423 427])
                                    ("period_start" variable nil (reparse-symbol function_parameters) [429 441]))                                  
                                :constructor-flag t)
                                (reparse-symbol indented_block_body) [410 489])
                            ("__hash__" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [511 515]))                                  )
                                (reparse-symbol indented_block_body) [498 561])
                            ("__eq__" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [581 585])
                                    ("other" variable nil (reparse-symbol function_parameters) [587 592]))                                  )
                                (reparse-symbol indented_block_body) [570 654])
                            ("__lt__" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [674 678])
                                    ("other" variable nil (reparse-symbol function_parameters) [680 685]))                                  )
                                (reparse-symbol indented_block_body) [663 746])
                            ("numeric_name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [772 776]))                                  )
                                (reparse-symbol indented_block_body) [755 810])
                            ("start" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [829 833]))                                  )
                                (reparse-symbol indented_block_body) [819 873])
                            ("__str__" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [894 898]))                                  )
                                (reparse-symbol indented_block_body) [882 940])
                            ("__repr__" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [962 966]))                                  )
                                (reparse-symbol indented_block_body) [949 1008])
                            ("json_serializable" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [1039 1043]))                                  )
                                (reparse-symbol indented_block_body) [1017 1085]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [388 1085])
                    ("EntryUnknown" type
                       (:superclasses ("Entry")
                        :members 
                          ( ("__init__" function
                               (:suite 
                                  ( ("self" variable nil (reparse-symbol indented_block_body) [1159 1200]))                                  
                                :parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [1140 1144]))                                  
                                :constructor-flag t)
                                (reparse-symbol indented_block_body) [1127 1201])
                            ("name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [1219 1223]))                                  )
                                (reparse-symbol indented_block_body) [1210 1255]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [1090 1255])
                    ("name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1269 1273])
                            ("date" variable nil (reparse-symbol function_parameters) [1275 1279]))                          
                        :documentation "Returns period name for the given date")
                        (reparse-symbol indented_block_body) [1260 1387])
                    ("display_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1409 1413])
                            ("name" variable nil (reparse-symbol function_parameters) [1415 1419]))                          
                        :documentation "Returns text to display (e.g. in time series dialog for given period name.")
                        (reparse-symbol indented_block_body) [1392 1531])
                    ("by_antigen_date_or_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1564 1568])
                            ("date" variable nil (reparse-symbol function_parameters) [1570 1574])
                            ("name" variable nil (reparse-symbol function_parameters) [1576 1580]))                          )
                        (reparse-symbol indented_block_body) [1536 2330])
                    ("elicit_start_end" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2356 2360])
                            ("start" variable nil (reparse-symbol function_parameters) [2362 2367])
                            ("end" variable nil (reparse-symbol function_parameters) [2369 2372]))                          )
                        (reparse-symbol indented_block_body) [2335 2721]))                  
                :type "class")
                nil [356 2721])
            ("Year" type
               (:superclasses ("Period")
                :members 
                  ( ("Entry" type
                       (:superclasses ("Period.Entry")
                        :members 
                          ( ("name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [2868 2872]))                                  )
                                (reparse-symbol indented_block_body) [2859 2927]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [2822 2927])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2945 2949])
                            ("date" variable nil (reparse-symbol function_parameters) [2951 2955]))                          )
                        (reparse-symbol indented_block_body) [2932 3119])
                    ("all" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3132 3136])
                            ("start" variable nil (reparse-symbol function_parameters) [3138 3143])
                            ("end" variable nil (reparse-symbol function_parameters) [3145 3148]))                          )
                        (reparse-symbol indented_block_body) [3124 3330]))                  
                :type "class")
                nil [2796 3330])
            ("Month" type
               (:superclasses ("Period")
                :members 
                  ( ("Entry" type
                       (:superclasses ("Period.Entry")
                        :members 
                          ( ("name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [3478 3482]))                                  )
                                (reparse-symbol indented_block_body) [3469 3540])
                            ("numeric_name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [3566 3570]))                                  )
                                (reparse-symbol indented_block_body) [3549 3628]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [3432 3628])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3646 3650])
                            ("date" variable nil (reparse-symbol function_parameters) [3652 3656]))                          )
                        (reparse-symbol indented_block_body) [3633 3922])
                    ("all" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3935 3939])
                            ("start" variable nil (reparse-symbol function_parameters) [3941 3946])
                            ("end" variable nil (reparse-symbol function_parameters) [3948 3951]))                          )
                        (reparse-symbol indented_block_body) [3927 4387]))                  
                :type "class")
                nil [3405 4387])
            ("MonthNumericName" type
               (:superclasses ("Month")
                :members 
                  ( ("Entry" type
                       (:superclasses ("Month.Entry")
                        :members 
                          ( ("name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [4544 4548]))                                  )
                                (reparse-symbol indented_block_body) [4535 4590]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [4499 4590]))                  
                :type "class")
                nil [4462 4590])
            ("Quarter" type
               (:superclasses ("Period")
                :members 
                  ( ("Entry" type
                       (:superclasses ("Period.Entry")
                        :members 
                          ( ("name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [4740 4744]))                                  )
                                (reparse-symbol indented_block_body) [4731 4904])
                            ("numeric_name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [4930 4934]))                                  )
                                (reparse-symbol indented_block_body) [4913 5035]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [4694 5035])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5053 5057])
                            ("date" variable nil (reparse-symbol function_parameters) [5059 5063]))                          )
                        (reparse-symbol indented_block_body) [5040 5350])
                    ("_quarter_month" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5374 5378])
                            ("month" variable nil (reparse-symbol function_parameters) [5380 5385]))                          )
                        (reparse-symbol indented_block_body) [5355 5476])
                    ("all" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5489 5493])
                            ("start" variable nil (reparse-symbol function_parameters) [5495 5500])
                            ("end" variable nil (reparse-symbol function_parameters) [5502 5505]))                          )
                        (reparse-symbol indented_block_body) [5481 6015])
                    ("months_per_quarter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6043 6047]))                          )
                        (reparse-symbol indented_block_body) [6020 6067]))                  
                :type "class")
                nil [4665 6067])
            ("HalfYear" type
               (:superclasses ("Quarter")
                :members 
                  ( ("months_per_quarter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6196 6200]))                          )
                        (reparse-symbol indented_block_body) [6173 6220]))                  
                :type "class")
                nil [6142 6220])
            ("Week" type
               (:superclasses ("Period")
                :members 
                  ( ("Entry" type
                       (:superclasses ("Period.Entry")
                        :members 
                          ( ("name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [6367 6371]))                                  )
                                (reparse-symbol indented_block_body) [6358 6432]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [6321 6432])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6450 6454])
                            ("date" variable nil (reparse-symbol function_parameters) [6456 6460]))                          )
                        (reparse-symbol indented_block_body) [6437 6674])
                    ("all" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6687 6691])
                            ("start" variable nil (reparse-symbol function_parameters) [6693 6698])
                            ("end" variable nil (reparse-symbol function_parameters) [6700 6703]))                          )
                        (reparse-symbol indented_block_body) [6679 7106]))                  
                :type "class")
                nil [6295 7106])
            ("elicit_period" function (:arguments 
              ( ("period" variable nil (reparse-symbol function_parameters) [7199 7205]))              ) nil [7181 7687])
            ("TimeSeriesBase" type
               (:members 
                  ( ("Entry" type
                       (:superclasses ("basic.Base")
                        :members 
                          ( ("__init__" function
                               (:suite 
                                  ( ("self" variable nil (reparse-symbol indented_block_body) [7874 7894])
                                    ("self" variable nil (reparse-symbol indented_block_body) [7907 7931]))                                  
                                :parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [7837 7841])
                                    ("period" variable nil (reparse-symbol function_parameters) [7843 7849])
                                    ("antigens" variable nil (reparse-symbol function_parameters) [7851 7859]))                                  
                                :constructor-flag t)
                                (reparse-symbol indented_block_body) [7824 7932])
                            ("json_serializable" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [7963 7967]))                                  )
                                (reparse-symbol indented_block_body) [7941 8003]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [7789 8003])
                    ("__init__" function
                       (:suite 
                          ( ("period" variable nil (reparse-symbol indented_block_body) [8107 8137])
                            ("self" code nil (reparse-symbol indented_block_body) [8146 8263])
                            ("self" variable nil (reparse-symbol indented_block_body) [8272 8319])
                            ("if" code nil (reparse-symbol indented_block_body) [8328 8586]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8021 8025])
                            ("period" variable nil (reparse-symbol function_parameters) [8027 8033])
                            ("start" variable nil (reparse-symbol function_parameters) [8035 8040])
                            ("end" variable nil (reparse-symbol function_parameters) [8042 8045])
                            ("include_reference_antigens" variable nil (reparse-symbol function_parameters) [8047 8073])
                            ("include_empty_periods" variable nil (reparse-symbol function_parameters) [8075 8096]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [8008 8586])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8604 8608]))                          )
                        (reparse-symbol indented_block_body) [8591 8728])
                    ("__len__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8745 8749]))                          )
                        (reparse-symbol indented_block_body) [8733 8797])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8818 8822])
                            ("index" variable nil (reparse-symbol function_parameters) [8824 8829]))                          )
                        (reparse-symbol indented_block_body) [8802 8953])
                    ("period" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8969 8973])
                            ("index" variable nil (reparse-symbol function_parameters) [8975 8980]))                          )
                        (reparse-symbol indented_block_body) [8958 9018])
                    ("antigen_within_dates_range" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9054 9058])
                            ("antigen" variable nil (reparse-symbol function_parameters) [9060 9067])
                            ("start" variable nil (reparse-symbol function_parameters) [9069 9074])
                            ("end" variable nil (reparse-symbol function_parameters) [9076 9079]))                          )
                        (reparse-symbol indented_block_body) [9023 9252]))                  
                :type "class")
                nil [7762 9252])
            ("TimeSeries" type
               (:superclasses ("TimeSeriesBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [9494 9512])
                            ("super" code nil (reparse-symbol indented_block_body) [9521 9674]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9380 9384])
                            ("chart" variable nil (reparse-symbol function_parameters) [9386 9391])
                            ("period" variable nil (reparse-symbol function_parameters) [9393 9399])
                            ("start" variable nil (reparse-symbol function_parameters) [9401 9406])
                            ("end" variable nil (reparse-symbol function_parameters) [9413 9416])
                            ("include_reference_antigens" variable nil (reparse-symbol function_parameters) [9423 9449])
                            ("include_empty_periods" variable nil (reparse-symbol function_parameters) [9457 9478]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [9367 9675])
                    ("antigens_for_periods" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9705 9709])
                            ("period" variable nil (reparse-symbol function_parameters) [9711 9717])
                            ("start" variable nil (reparse-symbol function_parameters) [9719 9724])
                            ("end" variable nil (reparse-symbol function_parameters) [9726 9729])
                            ("include_reference_antigens" variable nil (reparse-symbol function_parameters) [9731 9757])
                            ("include_having_no_dates" variable nil (reparse-symbol function_parameters) [9759 9782]))                          )
                        (reparse-symbol indented_block_body) [9680 10248]))                  
                :type "class")
                nil [9327 10248])
            ("TimeSeriesMulti" type
               (:documentation "Combined time series for multi-chart (geographic) time series."
                :superclasses ("TimeSeriesBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [10569 10589])
                            ("super" code nil (reparse-symbol indented_block_body) [10598 10751]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10454 10458])
                            ("charts" variable nil (reparse-symbol function_parameters) [10460 10466])
                            ("period" variable nil (reparse-symbol function_parameters) [10468 10474])
                            ("start" variable nil (reparse-symbol function_parameters) [10476 10481])
                            ("end" variable nil (reparse-symbol function_parameters) [10488 10491])
                            ("include_reference_antigens" variable nil (reparse-symbol function_parameters) [10498 10524])
                            ("include_empty_periods" variable nil (reparse-symbol function_parameters) [10532 10553]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [10441 10752])
                    ("antigens_for_periods" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10782 10786])
                            ("period" variable nil (reparse-symbol function_parameters) [10788 10794])
                            ("start" variable nil (reparse-symbol function_parameters) [10796 10801])
                            ("end" variable nil (reparse-symbol function_parameters) [10803 10806])
                            ("include_reference_antigens" variable nil (reparse-symbol function_parameters) [10808 10834])
                            ("include_having_no_dates" variable nil (reparse-symbol function_parameters) [10836 10859]))                          
                        :documentation "Returns mapping of period names to the set of antigens indices.")
                        (reparse-symbol indented_block_body) [10757 11734]))                  
                :type "class")
                nil [10323 11734]))          
      :file "time_series.py"
      :pointmax 11900
      :fsize 12041
      :lastmodtime '(22694 63977 0 0)
      :unmatched-syntax '((FROM 234 . 238) (PERIOD 239 . 240) (PERIOD 205 . 206) (FROM 199 . 203) (PERIOD 204 . 205)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("traceback" include nil nil [113 207])
            ("pprint" include nil nil [113 207])
            ("subprocess" include nil nil [113 207])
            ("datetime" include nil nil [113 207])
            ("tempfile" include nil nil [113 207])
            ("collections" include nil nil [113 207])
            ("functools" include nil nil [113 207])
            ("math" include nil nil [113 207])
            ("re" include nil nil [113 207])
            ("os" include nil nil [113 207])
            ("logging" include nil nil [208 222])
            ("exceptions" include nil nil [275 308])
            ("basic" include nil nil [275 308])
            ("backend" include nil nil [275 308])
            ("timer" include nil nil [326 338])
            ("ErrorNoCommonAntigensSeraInProcrustes" type
               (:superclasses ("Exception")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [475 479]))                  
                :type "class")
                nil [414 480])
            ("ErrorTooFewConnectedPoints" type
               (:superclasses ("Exception")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [531 535]))                  
                :type "class")
                nil [481 536])
            ("Stress" type
               (:documentation "Stress at some layout. Just float with comparison redefined to
    compare with some tolerance."
                :superclasses ("float")
                :members 
                  ( ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [755 759])
                            ("another" variable nil (reparse-symbol function_parameters) [761 768]))                          )
                        (reparse-symbol indented_block_body) [744 845])
                    ("__ne__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [861 865])
                            ("another" variable nil (reparse-symbol function_parameters) [867 874]))                          )
                        (reparse-symbol indented_block_body) [850 917]))                  
                :type "class")
                nil [611 917])
            ("Projection" type
               (:documentation "Class for table relaxations results (i.e. points layout)."
                :superclasses ("basic.Base")
                :members 
                  ( ("_layout_transformation" variable nil (reparse-symbol indented_block_body) [1141 1194])
                    ("number_of_iterations" variable nil (reparse-symbol indented_block_body) [1327 1353])
                    ("_stress" variable nil (reparse-symbol indented_block_body) [1358 1374])
                    ("comment" variable nil (reparse-symbol indented_block_body) [1379 1392])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1673 1735])
                            ("self" variable nil (reparse-symbol indented_block_body) [1744 1763])
                            ("self" variable nil (reparse-symbol indented_block_body) [1772 1805])
                            ("self" variable nil (reparse-symbol indented_block_body) [1884 1918]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1522 1526])
                            ("stress_evaluator_parameters" variable nil (reparse-symbol function_parameters) [1528 1555]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1509 1987])
                    ("info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2001 2005])
                            ("chart" variable nil (reparse-symbol function_parameters) [2007 2012]))                          
                        :documentation "Returns string with info about projection.")
                        (reparse-symbol indented_block_body) [1992 2138])
                    ("description" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2159 2163])
                            ("chart" variable nil (reparse-symbol function_parameters) [2165 2170])
                            ("check_stress" variable nil (reparse-symbol function_parameters) [2172 2184]))                          
                        :documentation "Returns str with info about projection.")
                        (reparse-symbol indented_block_body) [2143 3239])
                    ("_description_output" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3268 3272])
                            ("chart" variable nil (reparse-symbol function_parameters) [3274 3279])
                            ("stress" variable nil (reparse-symbol function_parameters) [3281 3287])
                            ("calculated_stress" variable nil (reparse-symbol function_parameters) [3289 3306]))                          )
                        (reparse-symbol indented_block_body) [3244 4074])
                    ("set_layout" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4094 4098])
                            ("chart" variable nil (reparse-symbol function_parameters) [4100 4105])
                            ("number_of_dimensions" variable nil (reparse-symbol function_parameters) [4107 4127])
                            ("layout" variable nil (reparse-symbol function_parameters) [4129 4135]))                          
                        :documentation "Sets projection layout from list (e.g. read from acmacs-txt).")
                        (reparse-symbol indented_block_body) [4079 4874])
                    ("layout" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4890 4894])
                            ("apply_transformation" variable nil (reparse-symbol function_parameters) [4896 4916])
                            ("flip_y" variable nil (reparse-symbol function_parameters) [4923 4929])
                            ("exclude_points" variable nil (reparse-symbol function_parameters) [4937 4951]))                          
                        :documentation "Returns layout with applied layout transformation.
        flip_y=True to inverse the second coordinate in 2d layout, needed for layouts imported from acmacs-b3
        exclude_points is a set of point indices to exclude, e.g. set of disconnected points for procrustes
        ")
                        (reparse-symbol indented_block_body) [4879 6314])
                    ("layout_transformation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6345 6349])
                            ("create_if_necessary" variable nil (reparse-symbol function_parameters) [6351 6370]))                          )
                        (reparse-symbol indented_block_body) [6319 6656])
                    ("layout_set_transformation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6691 6695])
                            ("transformation" variable nil (reparse-symbol function_parameters) [6697 6711]))                          )
                        (reparse-symbol indented_block_body) [6661 7232])
                    ("layout_apply_transformation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7269 7273]))                          
                        :documentation "Replaces layout with its transformed variant and removes
        transformation matrix.")
                        (reparse-symbol indented_block_body) [7237 7561])
                    ("rotate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7577 7581])
                            ("degrees" variable nil (reparse-symbol function_parameters) [7583 7590])
                            ("radians" variable nil (reparse-symbol function_parameters) [7597 7604])
                            ("flip" variable nil (reparse-symbol function_parameters) [7610 7614]))                          
                        :documentation "Rotates layout by some angle, positive angle means
        clockwise rotation.")
                        (reparse-symbol indented_block_body) [7566 8132])
                    ("number_of_dimensions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8162 8166]))                          )
                        (reparse-symbol indented_block_body) [8137 8241])
                    ("stress" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8257 8261])
                            ("chart" variable nil (reparse-symbol function_parameters) [8263 8268])
                            ("recalculate" variable nil (reparse-symbol function_parameters) [8275 8286])
                            ("for_sorting" variable nil (reparse-symbol function_parameters) [8294 8305]))                          
                        :documentation "Returns stress for the current layout. Stress is
        recalculated, if necessary.")
                        (reparse-symbol indented_block_body) [8246 8692])
                    ("stress_recalculated" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8721 8725])
                            ("chart" variable nil (reparse-symbol function_parameters) [8727 8732]))                          )
                        (reparse-symbol indented_block_body) [8697 9024])
                    ("stress_recalculated_without_column_bases" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9074 9078])
                            ("chart" variable nil (reparse-symbol function_parameters) [9080 9085]))                          )
                        (reparse-symbol indented_block_body) [9029 9694])
                    ("contribution_to_stress" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9726 9730])
                            ("chart" variable nil (reparse-symbol function_parameters) [9732 9737]))                          
                        :documentation "Returns contribution to stress (as BindingStressArgument)
        and error line (as MatrixFloat) for the current layout.")
                        (reparse-symbol indented_block_body) [9699 10341])
                    ("blobs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10356 10360])
                            ("chart" variable nil (reparse-symbol function_parameters) [10362 10367])
                            ("stress_diff" variable nil (reparse-symbol function_parameters) [10369 10380])
                            ("number_of_directions" variable nil (reparse-symbol function_parameters) [10382 10402]))                          
                        :documentation "Returns blobs data.")
                        (reparse-symbol indented_block_body) [10346 10621])
                    ("minimum_column_basis_txt" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10834 10838])
                            ("chart" variable nil (reparse-symbol function_parameters) [10840 10845]))                          )
                        (reparse-symbol indented_block_body) [10805 11211])
                    ("stored_column_bases" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11240 11244])
                            ("avoid_nan_inf" variable nil (reparse-symbol function_parameters) [11246 11259]))                          )
                        (reparse-symbol indented_block_body) [11216 12015])
                    ("relax" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12030 12034])
                            ("chart" variable nil (reparse-symbol function_parameters) [12036 12041])
                            ("number_of_dimensions" variable nil (reparse-symbol function_parameters) [12043 12063])
                            ("relaxator" variable nil (reparse-symbol function_parameters) [12071 12080])
                            ("rough_optimization" variable nil (reparse-symbol function_parameters) [12089 12107])
                            ("report_intermediate_stresses" variable nil (reparse-symbol function_parameters) [12114 12142])
                            ("disconnect_having_few_titers" variable nil (reparse-symbol function_parameters) [12150 12178])
                            ("disconnect_having_nan" variable nil (reparse-symbol function_parameters) [12185 12206])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [12214 12236])
                            ("randomize_nan" variable nil (reparse-symbol function_parameters) [12243 12256])
                            ("unmovable_points" variable nil (reparse-symbol function_parameters) [12264 12280])
                            ("antigens_in_2d" variable nil (reparse-symbol function_parameters) [12287 12301])
                            ("sera_in_2d" variable nil (reparse-symbol function_parameters) [12308 12318]))                          
                        :documentation "Relaxes the projection from the current layout using
        self.stress_evaluator_parameters. Returns resulting
        stress. See module doc for possible relaxation variants.
        number_of_dimensions is used to generate new layout at random,
        if necessary. If number_of_dimensions is a tuple/list with
        more than one element, dimension annealing is used for
        relaxation.

        rough_optimization: None - use default setting for the
        projection, False - precise optimization, True - rough
        optimization. If not None, default setting is changed.
        ")
                        (reparse-symbol indented_block_body) [12020 14243])
                    ("clone_relax" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14264 14268])
                            ("chart" variable nil (reparse-symbol function_parameters) [14270 14275])
                            ("number_of_optimizations" variable nil (reparse-symbol function_parameters) [14277 14300])
                            ("number_of_dimensions" variable nil (reparse-symbol function_parameters) [14302 14322])
                            ("relaxator" variable nil (reparse-symbol function_parameters) [14330 14339])
                            ("rough_optimization" variable nil (reparse-symbol function_parameters) [14348 14366])
                            ("report_intermediate_stresses" variable nil (reparse-symbol function_parameters) [14373 14401])
                            ("disconnect_having_few_titers" variable nil (reparse-symbol function_parameters) [14409 14437])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [14444 14466])
                            ("randomize_nan" variable nil (reparse-symbol function_parameters) [14473 14486])
                            ("unmovable_points" variable nil (reparse-symbol function_parameters) [14494 14510]))                          
                        :documentation "Clone this projection number_of_optimizations times and relax each resulting projection keeping this projection unchanged")
                        (reparse-symbol indented_block_body) [14248 15307])
                    ("relax_record_intermediate_layouts" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15350 15354])
                            ("chart" variable nil (reparse-symbol function_parameters) [15356 15361])
                            ("number_of_dimensions" variable nil (reparse-symbol function_parameters) [15363 15383])
                            ("rough_optimization" variable nil (reparse-symbol function_parameters) [15387 15405])
                            ("disconnect_having_few_titers" variable nil (reparse-symbol function_parameters) [15412 15440])
                            ("disconnect_having_nan" variable nil (reparse-symbol function_parameters) [15447 15468])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [15476 15498])
                            ("randomize_nan" variable nil (reparse-symbol function_parameters) [15505 15518])
                            ("unmovable_points" variable nil (reparse-symbol function_parameters) [15526 15542]))                          )
                        (reparse-symbol indented_block_body) [15312 16458])
                    ("_get_antigens_sera_attributes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16497 16501])
                            ("chart" variable nil (reparse-symbol function_parameters) [16503 16508]))                          )
                        (reparse-symbol indented_block_body) [16463 16738])
                    ("_set_antigens_sera_attributes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16777 16781])
                            ("antigens_sera_attributes" variable nil (reparse-symbol function_parameters) [16783 16807]))                          )
                        (reparse-symbol indented_block_body) [16743 17190])
                    ("relax_prepare" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17213 17217])
                            ("chart" variable nil (reparse-symbol function_parameters) [17219 17224])
                            ("number_of_dimensions" variable nil (reparse-symbol function_parameters) [17226 17246])
                            ("relaxator" variable nil (reparse-symbol function_parameters) [17254 17263])
                            ("rough_optimization" variable nil (reparse-symbol function_parameters) [17272 17290])
                            ("disconnect_having_few_titers" variable nil (reparse-symbol function_parameters) [17297 17325])
                            ("disconnect_having_nan" variable nil (reparse-symbol function_parameters) [17332 17353])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [17361 17383])
                            ("randomize_nan" variable nil (reparse-symbol function_parameters) [17390 17403])
                            ("unmovable_points" variable nil (reparse-symbol function_parameters) [17411 17427])
                            ("disconnected_points" variable nil (reparse-symbol function_parameters) [17434 17453])
                            ("antigens_in_2d" variable nil (reparse-symbol function_parameters) [17460 17474])
                            ("sera_in_2d" variable nil (reparse-symbol function_parameters) [17481 17491]))                          
                        :documentation "Prepares and returns mds object which could be dumped to a
        file via mds.exportToFile(filename) to run standalone
        relaxator (backend/acmacs-relaxator). Upon running the
        standalone relaxator results could be read in to the
        projection using self.relax_update(). If randomization (full
        or partial) of the starting layout is requested, standalone
        relaxator could be run multiple times with the same dump file,
        it automatically generates points coordinates at random, if
        necessary, then caller needs to create corresponding number of
        projections and call self.relax_update() for each of them.

        rough_optimization: None - use default settings for the
        projection, False - precise optimization, True - rough
        optimization. If not None, default setting is changed.
        ")
                        (reparse-symbol indented_block_body) [17195 18938])
                    ("relax_prepare_make_mds" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18970 18974])
                            ("chart" variable nil (reparse-symbol function_parameters) [18976 18981])
                            ("number_of_dimensions" variable nil (reparse-symbol function_parameters) [18983 19003])
                            ("relaxator" variable nil (reparse-symbol function_parameters) [19011 19020])
                            ("randomize_nan" variable nil (reparse-symbol function_parameters) [19029 19042])
                            ("antigens_in_2d" variable nil (reparse-symbol function_parameters) [19050 19064])
                            ("sera_in_2d" variable nil (reparse-symbol function_parameters) [19071 19081]))                          )
                        (reparse-symbol indented_block_body) [18943 21717])
                    ("relax_prepare_stress_evaluator_parameters" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21768 21772])
                            ("chart" variable nil (reparse-symbol function_parameters) [21774 21779])
                            ("rough_optimization" variable nil (reparse-symbol function_parameters) [21781 21799])
                            ("disconnect_having_few_titers" variable nil (reparse-symbol function_parameters) [21806 21834])
                            ("disconnect_having_nan" variable nil (reparse-symbol function_parameters) [21841 21862])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [21870 21892])
                            ("randomize_nan" variable nil (reparse-symbol function_parameters) [21899 21912])
                            ("unmovable_points" variable nil (reparse-symbol function_parameters) [21920 21936])
                            ("disconnected_points" variable nil (reparse-symbol function_parameters) [21943 21962]))                          )
                        (reparse-symbol indented_block_body) [21722 24749])
                    ("relax_update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24771 24775])
                            ("chart" variable nil (reparse-symbol function_parameters) [24777 24782])
                            ("mds_standalone_results_filename_or_data" variable nil (reparse-symbol function_parameters) [24784 24823])
                            ("remove_results_file" variable nil (reparse-symbol function_parameters) [24825 24844]))                          
                        :documentation "Imports standalone relaxator results from
        mds_standalone_results_filename.")
                        (reparse-symbol indented_block_body) [24754 25406])
                    ("relax_update_from_mds_results" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [25445 25449])
                            ("chart" variable nil (reparse-symbol function_parameters) [25451 25456])
                            ("mds_results" variable nil (reparse-symbol function_parameters) [25458 25469]))                          
                        :documentation "Imports standalone relaxator results from mds_results object.")
                        (reparse-symbol indented_block_body) [25411 26133])
                    ("reorient_to" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26154 26158])
                            ("master_projection" variable nil (reparse-symbol function_parameters) [26160 26177]))                          
                        :documentation "Reorients this projection to the master_projection.")
                        (reparse-symbol indented_block_body) [26138 26823])
                    ("procrustes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26843 26847])
                            ("secondary_projection" variable nil (reparse-symbol function_parameters) [26849 26869]))                          )
                        (reparse-symbol indented_block_body) [26828 28040])
                    ("_disconnected_points_for_internal_procrustes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28094 28098])
                            ("secondary_projection" variable nil (reparse-symbol function_parameters) [28100 28120]))                          )
                        (reparse-symbol indented_block_body) [28045 28560])
                    ("remove_antigens_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28590 28594])
                            ("antigens_indices" variable nil (reparse-symbol function_parameters) [28596 28612])
                            ("sera_indices" variable nil (reparse-symbol function_parameters) [28614 28626]))                          
                        :documentation "Modifies projection according to antigens/sera removal.")
                        (reparse-symbol indented_block_body) [28565 28969])
                    ("fix_number_of_dimensions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29003 29007])
                            ("number_of_dimensions" variable nil (reparse-symbol function_parameters) [29009 29029]))                          )
                        (reparse-symbol indented_block_body) [28974 29658])
                    ("connect_disconnect_antigens_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29700 29704])
                            ("connect" variable nil (reparse-symbol function_parameters) [29706 29713])
                            ("chart" variable nil (reparse-symbol function_parameters) [29715 29720])
                            ("antigens" variable nil (reparse-symbol function_parameters) [29722 29730])
                            ("sera" variable nil (reparse-symbol function_parameters) [29737 29741])
                            ("save_antigens_sera_attributes" variable nil (reparse-symbol function_parameters) [29748 29777]))                          
                        :documentation "Disconnects passed antigens and sera, saves original
        antigens_sera_attributes, if requested. Returns original
        antigens sera attributes or None.")
                        (reparse-symbol indented_block_body) [29663 31603])
                    ("disconnected_points" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31632 31636]))                          
                        :documentation "Returns dict {'antigens': {set of antigen indices}, 'sera': {set of serum indices}}")
                        (reparse-symbol indented_block_body) [31608 32494])
                    ("error_lines" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32515 32519])
                            ("chart" variable nil (reparse-symbol function_parameters) [32521 32526])
                            ("layout" variable nil (reparse-symbol function_parameters) [32528 32534]))                          )
                        (reparse-symbol indented_block_body) [32499 33120])
                    ("dodgy_titer_is_regular" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33152 33156]))                          )
                        (reparse-symbol indented_block_body) [33125 33286])
                    ("str_error_lines" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33311 33315])
                            ("chart" variable nil (reparse-symbol function_parameters) [33317 33322])
                            ("mds_error_lines" variable nil (reparse-symbol function_parameters) [33324 33339]))                          )
                        (reparse-symbol indented_block_body) [33291 34213])
                    ("stress_evaluator_parameters_as_dict" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34258 34262]))                          )
                        (reparse-symbol indented_block_body) [34218 35438])
                    ("stress_evaluator_parameters_from_dict" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35485 35489])
                            ("source" variable nil (reparse-symbol function_parameters) [35491 35497]))                          )
                        (reparse-symbol indented_block_body) [35443 38426])
                    ("set_intermediate_layouts" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38460 38464])
                            ("intermediate_layouts" variable nil (reparse-symbol function_parameters) [38466 38486])
                            ("intermediate_stresses" variable nil (reparse-symbol function_parameters) [38488 38509]))                          )
                        (reparse-symbol indented_block_body) [38431 38800])
                    ("number_of_intermediate_layouts" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38840 38844]))                          )
                        (reparse-symbol indented_block_body) [38805 38894])
                    ("intermediate_layouts_as_list_of_lists" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [38941 38945]))                          )
                        (reparse-symbol indented_block_body) [38899 39111])
                    ("intermediate_stresses" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39142 39146]))                          )
                        (reparse-symbol indented_block_body) [39116 39192])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39233 39237]))                          )
                        (reparse-symbol indented_block_body) [39216 39891])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39932 39936])
                            ("state" variable nil (reparse-symbol function_parameters) [39938 39943]))                          )
                        (reparse-symbol indented_block_body) [39915 40861]))                  
                :type "class")
                nil [992 40861])
            ("Projections" type
               (:documentation "List of projections (results of a table relaxations) for a
    chart."
                :superclasses ("list")
                :members 
                  ( ("sReBest" variable nil (reparse-symbol indented_block_body) [41047 41088])
                    ("sReNumber" variable nil (reparse-symbol indented_block_body) [41093 41130])
                    ("clone" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41146 41150]))                          )
                        (reparse-symbol indented_block_body) [41136 41208])
                    ("sort" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41222 41226])
                            ("chart" variable nil (reparse-symbol function_parameters) [41228 41233]))                          
                        :documentation "Re-sorts projections by stress, with smaller stress first.")
                        (reparse-symbol indented_block_body) [41213 41403])
                    ("best" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41711 41715]))                          
                        :documentation "Returns the best projection.")
                        (reparse-symbol indented_block_body) [41702 41919])
                    ("find" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41933 41937])
                            ("projection" variable nil (reparse-symbol function_parameters) [41939 41949])
                            ("return_index" variable nil (reparse-symbol function_parameters) [41951 41963])
                            ("return_both" variable nil (reparse-symbol function_parameters) [41971 41982]))                          
                        :documentation "Returns projection.
        recognized projection argument values:
        'best', 'best0' - the best projection
        'best1' - the second best projection ('best2' and so on)
        number - projection index
        projection - find this projection in the list, returns its index
        ValueError is raised in case of invalid projection argument passed.")
                        (reparse-symbol indented_block_body) [41924 44075])
                    ("remove" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44091 44095])
                            ("projection" variable nil (reparse-symbol function_parameters) [44097 44107]))                          
                        :documentation "Remove the passed projection ('all', 'best', index, instance of Projection) from the list.")
                        (reparse-symbol indented_block_body) [44080 44349])
                    ("truncate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44367 44371])
                            ("number_of_projections" variable nil (reparse-symbol function_parameters) [44373 44394]))                          
                        :documentation "Remove trailing projections and keep just number_of_projections to make chart smaller.
        Big charts with many projections might exceed 16Mb mongodb document limit.")
                        (reparse-symbol indented_block_body) [44354 44672])
                    ("remove_except" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44695 44699])
                            ("projection" variable nil (reparse-symbol function_parameters) [44701 44711]))                          
                        :documentation "Remove all projections except the passed one ('best', index, instance of Projection) from the list.")
                        (reparse-symbol indented_block_body) [44677 45214])
                    ("duplicate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45233 45237])
                            ("projection" variable nil (reparse-symbol function_parameters) [45239 45249])
                            ("comment" variable nil (reparse-symbol function_parameters) [45251 45258]))                          
                        :documentation "Duplicates the passed projection ('best', index, instance of Projection) and appends it to the list.")
                        (reparse-symbol indented_block_body) [45219 45557])
                    ("remove_antigens_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45587 45591])
                            ("antigens_indices" variable nil (reparse-symbol function_parameters) [45593 45609])
                            ("sera_indices" variable nil (reparse-symbol function_parameters) [45611 45623]))                          
                        :documentation "Modifies projections according to antigens/sera removal.")
                        (reparse-symbol indented_block_body) [45562 45787])
                    ("_key_stress" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [45808 45812])
                            ("projection" variable nil (reparse-symbol function_parameters) [45814 45824])
                            ("chart" variable nil (reparse-symbol function_parameters) [45826 45831]))                          
                        :documentation "Helper function for sorting by stress. no_projection is a
        tuple of projection index and projection itself.")
                        (reparse-symbol indented_block_body) [45792 46014])
                    ("description" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46035 46039])
                            ("chart" variable nil (reparse-symbol function_parameters) [46041 46046])
                            ("check_stresses" variable nil (reparse-symbol function_parameters) [46048 46062]))                          
                        :documentation "Returns str with info about projections.")
                        (reparse-symbol indented_block_body) [46019 46327])
                    ("conformance_level" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46354 46358])
                            ("conformance_data" variable nil (reparse-symbol function_parameters) [46360 46376]))                          )
                        (reparse-symbol indented_block_body) [46332 46461]))                  
                :type "class")
                nil [40936 46461])
            ("Chart" type
               (:documentation "Class for a table, relaxations results (projections)."
                :superclasses ("basic.Base")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [46688 46706])
                            ("self" variable nil (reparse-symbol indented_block_body) [46715 46737])
                            ("if" code nil (reparse-symbol indented_block_body) [46840 47074]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46644 46648])
                            ("chart_info" variable nil (reparse-symbol function_parameters) [46650 46660])
                            ("table" variable nil (reparse-symbol function_parameters) [46667 46672]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [46631 47074])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47091 47095]))                          )
                        (reparse-symbol indented_block_body) [47079 47216])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47235 47239]))                          )
                        (reparse-symbol indented_block_body) [47221 47279])
                    ("make_filename" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47302 47306])
                            ("filename_type" variable nil (reparse-symbol function_parameters) [47308 47321]))                          )
                        (reparse-symbol indented_block_body) [47284 47406])
                    ("new_projection" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47430 47434])
                            ("append" variable nil (reparse-symbol function_parameters) [47436 47442])
                            ("minimum_column_basis" variable nil (reparse-symbol function_parameters) [47449 47469])
                            ("clone" variable nil (reparse-symbol function_parameters) [47476 47481]))                          )
                        (reparse-symbol indented_block_body) [47411 47866])
                    ("new_projections_from_mds_results" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47908 47912])
                            ("mds_standalone_results_filename_or_data" variable nil (reparse-symbol function_parameters) [47914 47953])
                            ("sort" variable nil (reparse-symbol function_parameters) [47955 47959]))                          
                        :documentation "Creates new projections with the mds results imported from
        mds_standalone_results_filename_or_data that is either
        filename or dump data itself.")
                        (reparse-symbol indented_block_body) [47871 48859])
                    ("new_projection_from_mds_result" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48899 48903])
                            ("mds_standalone_result_filename_or_data" variable nil (reparse-symbol function_parameters) [48905 48943]))                          
                        :documentation "Creates new projections with the mds results imported from
        mds_standalone_results_filename_or_data that is either
        filename or dump data itself.")
                        (reparse-symbol indented_block_body) [48864 49521])
                    ("number_of_projections" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49552 49556]))                          )
                        (reparse-symbol indented_block_body) [49526 49596])
                    ("description" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49617 49621])
                            ("check_stresses" variable nil (reparse-symbol function_parameters) [49623 49637])
                            ("brief" variable nil (reparse-symbol function_parameters) [49645 49650]))                          
                        :documentation "Returns str with info about chart.")
                        (reparse-symbol indented_block_body) [49601 50035])
                    ("reorient_to" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [50056 50060])
                            ("master_chart" variable nil (reparse-symbol function_parameters) [50062 50074])
                            ("projection_no" variable nil (reparse-symbol function_parameters) [50076 50089])
                            ("master_projection_no" variable nil (reparse-symbol function_parameters) [50093 50113])
                            ("subset" variable nil (reparse-symbol function_parameters) [50117 50123])
                            ("passage_matching" variable nil (reparse-symbol function_parameters) [50130 50146])
                            ("serum_id_matching" variable nil (reparse-symbol function_parameters) [50157 50174])
                            ("common_antigens" variable nil (reparse-symbol function_parameters) [50185 50200])
                            ("common_sera" variable nil (reparse-symbol function_parameters) [50207 50218]))                          
                        :documentation "Re-orients projection_no of this chart to
        master_projection_no of master_chart. subset is
        ChartExcludeInclude instance for master_chart (not
        computed!).

        Note master_chart is primary and self is secondary!
        ")
                        (reparse-symbol indented_block_body) [50040 51554])
                    ("procrustes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51714 51718])
                            ("secondary_chart" variable nil (reparse-symbol function_parameters) [51720 51735])
                            ("projection_no" variable nil (reparse-symbol function_parameters) [51737 51750])
                            ("secondary_projection_no" variable nil (reparse-symbol function_parameters) [51754 51777])
                            ("subset" variable nil (reparse-symbol function_parameters) [51781 51787])
                            ("scaling" variable nil (reparse-symbol function_parameters) [51794 51801])
                            ("passage_matching" variable nil (reparse-symbol function_parameters) [51809 51825])
                            ("serum_id_matching" variable nil (reparse-symbol function_parameters) [51836 51853])
                            ("distance_summary_only" variable nil (reparse-symbol function_parameters) [51864 51885])
                            ("raise_on_no_common" variable nil (reparse-symbol function_parameters) [51893 51911]))                          
                        :documentation "Returns procrustes data for this chart as primary and provided chart as secondary.")
                        (reparse-symbol indented_block_body) [51699 53226])
                    ("procrustes_histogram" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53256 53260])
                            ("secondary_chart" variable nil (reparse-symbol function_parameters) [53262 53277])
                            ("projection_no" variable nil (reparse-symbol function_parameters) [53279 53292])
                            ("secondary_projection_no" variable nil (reparse-symbol function_parameters) [53296 53319])
                            ("subset" variable nil (reparse-symbol function_parameters) [53323 53329])
                            ("scaling" variable nil (reparse-symbol function_parameters) [53336 53343])
                            ("passage_matching" variable nil (reparse-symbol function_parameters) [53351 53367])
                            ("serum_id_matching" variable nil (reparse-symbol function_parameters) [53378 53395])
                            ("bin_size" variable nil (reparse-symbol function_parameters) [53406 53414])
                            ("last_bin" variable nil (reparse-symbol function_parameters) [53421 53429])
                            ("image_size" variable nil (reparse-symbol function_parameters) [53436 53446])
                            ("aspect_ratio" variable nil (reparse-symbol function_parameters) [53452 53464])
                            ("image_type" variable nil (reparse-symbol function_parameters) [53470 53480])
                            ("graphic_style" variable nil (reparse-symbol function_parameters) [53488 53501])
                            ("bar_style" variable nil (reparse-symbol function_parameters) [53508 53517]))                          
                        :documentation "Returns instance of Graphic with generated procrustes histogram (for png/pdf image_type) or histogram_data (list) for json image type.")
                        (reparse-symbol indented_block_body) [53231 55025])
                    ("remove_antigens_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55055 55059])
                            ("chart_exclude_include" variable nil (reparse-symbol function_parameters) [55061 55082])
                            ("ignore_missing" variable nil (reparse-symbol function_parameters) [55084 55098]))                          )
                        (reparse-symbol indented_block_body) [55030 56002])
                    ("_procrustes_prepare" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [56048 56051])
                            ("primary_chart" variable nil (reparse-symbol function_parameters) [56053 56066])
                            ("primary_projection_no" variable nil (reparse-symbol function_parameters) [56068 56089])
                            ("secondary_chart" variable nil (reparse-symbol function_parameters) [56091 56106])
                            ("secondary_projection_no" variable nil (reparse-symbol function_parameters) [56108 56131])
                            ("subset" variable nil (reparse-symbol function_parameters) [56133 56139])
                            ("passage_matching" variable nil (reparse-symbol function_parameters) [56141 56157])
                            ("serum_id_matching" variable nil (reparse-symbol function_parameters) [56159 56176])
                            ("raise_on_no_common" variable nil (reparse-symbol function_parameters) [56178 56196])
                            ("common_antigens" variable nil (reparse-symbol function_parameters) [56203 56218])
                            ("common_sera" variable nil (reparse-symbol function_parameters) [56225 56236]))                          )
                        (reparse-symbol indented_block_body) [56007 59142])
                    ("_procrustes_subset" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [59187 59190])
                            ("chart" variable nil (reparse-symbol function_parameters) [59192 59197])
                            ("projection_no" variable nil (reparse-symbol function_parameters) [59199 59212])
                            ("subset" variable nil (reparse-symbol function_parameters) [59214 59220]))                          )
                        (reparse-symbol indented_block_body) [59147 60168])
                    ("_procrustes_calculate" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [60216 60219])
                            ("primary_chart" variable nil (reparse-symbol function_parameters) [60221 60234])
                            ("primary_projection_no" variable nil (reparse-symbol function_parameters) [60236 60257])
                            ("secondary_chart" variable nil (reparse-symbol function_parameters) [60259 60274])
                            ("secondary_projection_no" variable nil (reparse-symbol function_parameters) [60276 60299])
                            ("procrustes_data" variable nil (reparse-symbol function_parameters) [60301 60316])
                            ("to_primary_transformed" variable nil (reparse-symbol function_parameters) [60318 60340])
                            ("scaling" variable nil (reparse-symbol function_parameters) [60342 60349])
                            ("reorient_only" variable nil (reparse-symbol function_parameters) [60351 60364])
                            ("distance_summary_only" variable nil (reparse-symbol function_parameters) [60366 60387]))                          )
                        (reparse-symbol indented_block_body) [60173 63299])
                    ("map_vs_table_distances_scatter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [63339 63343])
                            ("projection_no" variable nil (reparse-symbol function_parameters) [63345 63358])
                            ("image_type" variable nil (reparse-symbol function_parameters) [63360 63370])
                            ("include_thresholded_titers" variable nil (reparse-symbol function_parameters) [63372 63398])
                            ("linear_regression" variable nil (reparse-symbol function_parameters) [63405 63422])
                            ("loess" variable nil (reparse-symbol function_parameters) [63429 63434])
                            ("image_size" variable nil (reparse-symbol function_parameters) [63441 63451])
                            ("point_size" variable nil (reparse-symbol function_parameters) [63457 63467])
                            ("scatter_point_style" variable nil (reparse-symbol function_parameters) [63474 63493])
                            ("graphic_style" variable nil (reparse-symbol function_parameters) [63523 63536])
                            ("legend_style" variable nil (reparse-symbol function_parameters) [63561 63573]))                          )
                        (reparse-symbol indented_block_body) [63304 66570])
                    ("map_vs_table_distances_diff" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [66607 66611])
                            ("projection_no" variable nil (reparse-symbol function_parameters) [66613 66626])
                            ("image_type" variable nil (reparse-symbol function_parameters) [66628 66638])
                            ("include_thresholded_titers" variable nil (reparse-symbol function_parameters) [66640 66666]))                          )
                        (reparse-symbol indented_block_body) [66575 68612])
                    ("distances_between_all_points" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [68650 68654])
                            ("projection_no" variable nil (reparse-symbol function_parameters) [68656 68669])
                            ("format" variable nil (reparse-symbol function_parameters) [68678 68684])
                            ("antigens_only" variable nil (reparse-symbol function_parameters) [68693 68706])
                            ("name_type" variable nil (reparse-symbol function_parameters) [68714 68723])
                            ("start" variable nil (reparse-symbol function_parameters) [68732 68737])
                            ("end" variable nil (reparse-symbol function_parameters) [68744 68747]))                          )
                        (reparse-symbol indented_block_body) [68617 71566])
                    ("stresses_histogram" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [71594 71598])
                            ("stress_per_titer" variable nil (reparse-symbol function_parameters) [71600 71616])
                            ("breaks" variable nil (reparse-symbol function_parameters) [71623 71629])
                            ("image_size" variable nil (reparse-symbol function_parameters) [71636 71646])
                            ("aspect_ratio" variable nil (reparse-symbol function_parameters) [71652 71664])
                            ("image_type" variable nil (reparse-symbol function_parameters) [71670 71680])
                            ("graphic_style" variable nil (reparse-symbol function_parameters) [71688 71701])
                            ("bar_style" variable nil (reparse-symbol function_parameters) [71708 71717]))                          
                        :documentation "Returns instance of Graphic with generated stresses histogram (for png/pdf image_type) or histogram_data (list) for json image type.")
                        (reparse-symbol indented_block_body) [71571 73504])
                    ("elicit" function
                       (:documentation "Imports chart from data.
        Options:
        'report_validation': False,
        'report_conformance': True,
        'duplicates_distinct': False,
        'validate_passage': True,
        'validate_reassortant': True,
        'validate_annotations': True,
        'validate_serum_id': True,
        'report_unusual_titer': False,
        'detect_reference_antigens': False,
        'detect_lineage': False,
        'validate_name': True,             # validate antigen/serum name
        'validation_data': None,           # external.validation.ValidationDataProxy()
        'names_unmodifiable': False,       # do not parse names at all, keep them as they are
        'add_missing_passages': False,
        'disabbreviate_two_letter_locations_using_terry_list': False, # !REMOVE!
        'ignore_plot_spec_if_error': False,
        'titer_merger': None,              # merger for dual (e.g. 20/40) titers, default: \"derek\", difference in merging thresholded titers
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [73537 73540])
                            ("data" variable nil (reparse-symbol function_parameters) [73542 73546])
                            ("check_conformance" variable nil (reparse-symbol function_parameters) [73548 73565])
                            ("options" variable nil (reparse-symbol function_parameters) [73573 73582]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [73509 75109])
                    ("save" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [75123 75127])
                            ("filename" variable nil (reparse-symbol function_parameters) [75129 75137])
                            ("part" variable nil (reparse-symbol function_parameters) [75139 75143])
                            ("format" variable nil (reparse-symbol function_parameters) [75153 75159])
                            ("compressed" variable nil (reparse-symbol function_parameters) [75166 75176])
                            ("version" variable nil (reparse-symbol function_parameters) [75183 75190])
                            ("args" variable nil (reparse-symbol function_parameters) [75197 75203]))                          
                        :documentation "Saves chart into filename, if format is None, autodetects
        it by a filename suffix. if compressed is None, autodetects if
        data should be compressed by a filename suffix. If format ends
        with '.bz2' or '.xz', compressed flag is set autmatically. If version is
        None, the highest format version is used.  If filename is
        None, returns resulting data instead of writing it into a
        file.")
                        (reparse-symbol indented_block_body) [75114 75806])
                    ("export" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [75822 75826])
                            ("part" variable nil (reparse-symbol function_parameters) [75828 75832])
                            ("format" variable nil (reparse-symbol function_parameters) [75842 75848])
                            ("output_bytes" variable nil (reparse-symbol function_parameters) [75855 75867])
                            ("compressed" variable nil (reparse-symbol function_parameters) [75874 75884])
                            ("version" variable nil (reparse-symbol function_parameters) [75891 75898])
                            ("within_acmacs_web_server" variable nil (reparse-symbol function_parameters) [75905 75929])
                            ("pretty" variable nil (reparse-symbol function_parameters) [75937 75943])
                            ("args" variable nil (reparse-symbol function_parameters) [75950 75956]))                          
                        :documentation "Exports chart into bytes object. If format ends with
        '.bz2' or '.xz', compressed flag is set autmatically. If version is None,
        the highest format version is used. Returns resulting data.")
                        (reparse-symbol indented_block_body) [75811 76483])
                    ("conformance_level" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [76510 76514])
                            ("options" variable nil (reparse-symbol function_parameters) [76516 76525]))                          )
                        (reparse-symbol indented_block_body) [76488 77248])
                    ("get_plot_style" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77272 77276]))                          )
                        (reparse-symbol indented_block_body) [77253 77396])
                    ("new_plot_style" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77420 77424])
                            ("assign_to_chart" variable nil (reparse-symbol function_parameters) [77426 77441]))                          )
                        (reparse-symbol indented_block_body) [77401 77998])
                    ("reset_plot_style" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [78024 78028]))                          )
                        (reparse-symbol indented_block_body) [78003 78163])
                    ("set_titers_from_layers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [78637 78641])
                            ("verbose" variable nil (reparse-symbol function_parameters) [78643 78650]))                          
                        :documentation "Set titers in the chart from layers. If this chart has more-than titers
        (e.g. melb) columns adjusts forced for the new chart.")
                        (reparse-symbol indented_block_body) [78610 79679])
                    ("set_proportion_of_titers_to_dont_care" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [79726 79730])
                            ("proportion" variable nil (reparse-symbol function_parameters) [79732 79742]))                          )
                        (reparse-symbol indented_block_body) [79684 79807])
                    ("lineages" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [79825 79829]))                          
                        :documentation "Returns set of influenza B lineages. Returns empty set for non-B tables.")
                        (reparse-symbol indented_block_body) [79812 80126])
                    ("lineage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [80143 80147]))                          
                        :documentation "If chart has just one lineage, returns it, otherwise returns None")
                        (reparse-symbol indented_block_body) [80131 80528])
                    ("plot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [80542 80546])
                            ("filename" variable nil (reparse-symbol function_parameters) [80548 80556])
                            ("projection" variable nil (reparse-symbol function_parameters) [80558 80568])
                            ("size" variable nil (reparse-symbol function_parameters) [80572 80576])
                            ("plot_style" variable nil (reparse-symbol function_parameters) [80583 80593])
                            ("backup" variable nil (reparse-symbol function_parameters) [80600 80606])
                            ("args" variable nil (reparse-symbol function_parameters) [80613 80619]))                          
                        :documentation "Generates pdf/png/adr (detected by filename suffix).
        args:
        border_space=0.0,
        object_size_scale=1.0,
        label_size_scale=1.0,
        background_color=0xFFFFFF,
        label_type
        show_labels
        show_error_lines - False, True, list of antigens indices to show error lines just for those antigens
        show_connection_lines - False, True, list of antigens indices to show connection lines just for those antigens
        show_title
        title
        title_size_scale
        borderline_color
        background_color
        ")
                        (reparse-symbol indented_block_body) [80533 82582])
                    ("plot_geographic" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87529 87533])
                            ("filename" variable nil (reparse-symbol function_parameters) [87535 87543])
                            ("size" variable nil (reparse-symbol function_parameters) [87545 87549])
                            ("plot_style" variable nil (reparse-symbol function_parameters) [87556 87566])
                            ("args" variable nil (reparse-symbol function_parameters) [87573 87579]))                          )
                        (reparse-symbol indented_block_body) [87509 87737])
                    ("plot_geographic_time_series" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87774 87778])
                            ("filename_pattern" variable nil (reparse-symbol function_parameters) [87780 87796])
                            ("time_series" variable nil (reparse-symbol function_parameters) [87798 87809])
                            ("period" variable nil (reparse-symbol function_parameters) [87816 87822])
                            ("start" variable nil (reparse-symbol function_parameters) [87832 87837])
                            ("end" variable nil (reparse-symbol function_parameters) [87844 87847])
                            ("size" variable nil (reparse-symbol function_parameters) [87854 87858])
                            ("plot_style" variable nil (reparse-symbol function_parameters) [87865 87875])
                            ("args" variable nil (reparse-symbol function_parameters) [87882 87888]))                          )
                        (reparse-symbol indented_block_body) [87742 89220])
                    ("kmeans" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [90551 90555])
                            ("bin_dir" variable nil (reparse-symbol function_parameters) [90557 90564])
                            ("projection_no" variable nil (reparse-symbol function_parameters) [90566 90579])
                            ("number_of_clusters" variable nil (reparse-symbol function_parameters) [90581 90599])
                            ("epsilon" variable nil (reparse-symbol function_parameters) [90601 90608])
                            ("max_iterations" variable nil (reparse-symbol function_parameters) [90614 90628])
                            ("attempts" variable nil (reparse-symbol function_parameters) [90633 90641])
                            ("random_initial" variable nil (reparse-symbol function_parameters) [90646 90660]))                          )
                        (reparse-symbol indented_block_body) [90540 91816])
                    ("set_column_bases_from_another_chart" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [91861 91865])
                            ("chart_for_column_bases" variable nil (reparse-symbol function_parameters) [91867 91889])
                            ("minimum_column_basis" variable nil (reparse-symbol function_parameters) [91891 91911])
                            ("match_serum_id" variable nil (reparse-symbol function_parameters) [91918 91932]))                          )
                        (reparse-symbol indented_block_body) [91821 92592])
                    ("report_antigen_serum_names" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [92628 92632])
                            ("name_type" variable nil (reparse-symbol function_parameters) [92634 92643]))                          )
                        (reparse-symbol indented_block_body) [92597 93120])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [93161 93165]))                          )
                        (reparse-symbol indented_block_body) [93144 93462])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [93503 93507])
                            ("state" variable nil (reparse-symbol function_parameters) [93509 93514]))                          )
                        (reparse-symbol indented_block_body) [93486 93764]))                  
                :type "class")
                nil [46536 93764])
            ("ProcrustesData" type
               (:superclasses ("basic.Base")
                :members 
                  ( ("transformation" variable nil (reparse-symbol indented_block_body) [93879 93915])
                    ("rms" variable nil (reparse-symbol indented_block_body) [94076 94087])
                    ("distance_summary" variable nil (reparse-symbol indented_block_body) [94092 94152])
                    ("common_antigens" variable nil (reparse-symbol indented_block_body) [94157 94179])
                    ("common_sera" variable nil (reparse-symbol indented_block_body) [94184 94202])
                    ("mismatches" variable nil (reparse-symbol indented_block_body) [94207 94224])
                    ("matching_report" variable nil (reparse-symbol indented_block_body) [94361 94383])
                    ("common_points" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [95448 95452])
                            ("master_chart" variable nil (reparse-symbol function_parameters) [95454 95466])
                            ("chart" variable nil (reparse-symbol function_parameters) [95468 95473]))                          
                        :documentation "Returns dict of mapping of common points indices of master chart to secondary chart.")
                        (reparse-symbol indented_block_body) [95430 96011])
                    ("report" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [96027 96031])
                            ("brief" variable nil (reparse-symbol function_parameters) [96033 96038]))                          )
                        (reparse-symbol indented_block_body) [96016 98488]))                  
                :type "class")
                nil [93839 98488])
            ("ChartExcludeInclude" type
               (:documentation "Builds list of antigens and sera indices of a chart to be used e.g. for procrustes."
                :superclasses ("basic.Base")
                :members 
                  ( ("included_antigens" variable nil (reparse-symbol indented_block_body) [98702 98725])
                    ("included_sera" variable nil (reparse-symbol indented_block_body) [98740 98759])
                    ("antigens_to_exclude" variable nil (reparse-symbol indented_block_body) [98778 98803])
                    ("sera_to_exclude" variable nil (reparse-symbol indented_block_body) [98808 98829])
                    ("antigens_to_include" variable nil (reparse-symbol indented_block_body) [98834 98859])
                    ("sera_to_include" variable nil (reparse-symbol indented_block_body) [98864 98885])
                    ("dates_range" variable nil (reparse-symbol indented_block_body) [98890 98909])
                    ("ignore_missing" variable nil (reparse-symbol indented_block_body) [98914 98935])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"include_type - string: 'all', 'antigens-only',
        'antigens-reference-only', 'antigens-reference-only-sera', 'antigens-non-reference-only', 'antigens-test-only',
        'sera-only', 'none' (i.e. use just antigens_to_include and sera_to_include),
        'antigens-dates-range' (only antigens isolated within dates_range)
        'antigens-test-dates-range' (only antigens isolated within dates_range and all ref antigens)

        Upon applying include_type to all antigens/sera,
        antigens_to_exclude and sera_to_exclude are excluded, then
        antigens_to_include and sera_to_include filters applied to the
        antigens/sera left.

        Computation of the included antignes/sera indices could be
        deffered, if chart is not available (passed as None) when used
        in chains.
        \"\"\"" code nil (reparse-symbol indented_block_body) [99137 99961])
                            ("super" code nil (reparse-symbol indented_block_body) [99970 99988])
                            ("self" variable nil (reparse-symbol indented_block_body) [99997 100029])
                            ("self" code nil (reparse-symbol indented_block_body) [100038 100092])
                            ("self" code nil (reparse-symbol indented_block_body) [100101 100147])
                            ("self" code nil (reparse-symbol indented_block_body) [100156 100210])
                            ("self" code nil (reparse-symbol indented_block_body) [100219 100265])
                            ("self" code nil (reparse-symbol indented_block_body) [100274 100312])
                            ("self" variable nil (reparse-symbol indented_block_body) [100321 100357])
                            ("if" code nil (reparse-symbol indented_block_body) [100366 100689])
                            ("if" code nil (reparse-symbol indented_block_body) [100697 100846]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [98954 98958])
                            ("chart" variable nil (reparse-symbol function_parameters) [98960 98965])
                            ("include_type" variable nil (reparse-symbol function_parameters) [98972 98984])
                            ("antigens_to_exclude" variable nil (reparse-symbol function_parameters) [98992 99011])
                            ("sera_to_exclude" variable nil (reparse-symbol function_parameters) [99018 99033])
                            ("antigens_to_include" variable nil (reparse-symbol function_parameters) [99040 99059])
                            ("sera_to_include" variable nil (reparse-symbol function_parameters) [99066 99081])
                            ("dates_range" variable nil (reparse-symbol function_parameters) [99088 99099])
                            ("ignore_missing" variable nil (reparse-symbol function_parameters) [99106 99120]))                          
                        :documentation "include_type - string: 'all', 'antigens-only',
        'antigens-reference-only', 'antigens-reference-only-sera', 'antigens-non-reference-only', 'antigens-test-only',
        'sera-only', 'none' (i.e. use just antigens_to_include and sera_to_include),
        'antigens-dates-range' (only antigens isolated within dates_range)
        'antigens-test-dates-range' (only antigens isolated within dates_range and all ref antigens)

        Upon applying include_type to all antigens/sera,
        antigens_to_exclude and sera_to_exclude are excluded, then
        antigens_to_include and sera_to_include filters applied to the
        antigens/sera left.

        Computation of the included antignes/sera indices could be
        deffered, if chart is not available (passed as None) when used
        in chains.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [98941 100846])
                    ("compute" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [100863 100867])
                            ("chart" variable nil (reparse-symbol function_parameters) [100869 100874])
                            ("force" variable nil (reparse-symbol function_parameters) [100876 100881]))                          )
                        (reparse-symbol indented_block_body) [100851 100975])
                    ("excluded_antigens" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [101002 101006])
                            ("chart" variable nil (reparse-symbol function_parameters) [101008 101013]))                          
                        :documentation "Returns set of antigens indices to be excluded.")
                        (reparse-symbol indented_block_body) [100980 101184])
                    ("excluded_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [101207 101211])
                            ("chart" variable nil (reparse-symbol function_parameters) [101213 101218]))                          
                        :documentation "Returns set of sera indices to be excluded.")
                        (reparse-symbol indented_block_body) [101189 101377])
                    ("_compute" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [101395 101399])
                            ("chart" variable nil (reparse-symbol function_parameters) [101401 101406]))                          )
                        (reparse-symbol indented_block_body) [101382 104137])
                    ("intersection" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [104159 104163])
                            ("chart_exclude_include" variable nil (reparse-symbol function_parameters) [104165 104186]))                          
                        :documentation "Modify this subset manager to report antigens/sera included
        in both this and chart_exclude_include.")
                        (reparse-symbol indented_block_body) [104142 104750]))                  
                :type "class")
                nil [98563 104750]))          
      :file "chart.py"
      :pointmax 104916
      :fsize 104915
      :lastmodtime '(22701 48520 0 0)
      :unmatched-syntax '((PERIOD 88645 . 88646) (FROM 88639 . 88643) (PERIOD 88644 . 88645) (FROM 88488 . 88492) (PERIOD 88493 . 88494) (PERIOD 87596 . 87597) (FROM 87590 . 87594) (PERIOD 87595 . 87596) (PERIOD 81969 . 81970) (FROM 81963 . 81967) (PERIOD 81968 . 81969) (PERIOD 76542 . 76543) (FROM 76536 . 76540) (PERIOD 76541 . 76542) (PERIOD 76190 . 76191) (FROM 76184 . 76188) (PERIOD 76189 . 76190) (PERIOD 75661 . 75662) (FROM 75655 . 75659) (PERIOD 75660 . 75661) (INDENT_BLOCK 75091 . 75109) (NEWLINE 75033 . 75034) (COLON 75032 . 75033) (EXCEPT 75026 . 75032) (INDENT_BLOCK 75000 . 75018) (NEWLINE 74932 . 74933) (COLON 74931 . 74932) (TRY 74628 . 74631) (AS 74925 . 74927) (PERIOD 74594 . 74595) (FROM 74588 . 74592) (PERIOD 74593 . 74594) (PERIOD 56545 . 56546) (FROM 56539 . 56543) (PERIOD 56544 . 56545) (NAME 56380 . 56396) (IF 56470 . 56472) (ELSE 56489 . 56493) (NAME 49128 . 49136) (IF 49173 . 49175) (ELSE 49231 . 49235) (INDENT_BLOCK 48430 . 48549) (NEWLINE 48429 . 48430) (COLON 48428 . 48429) (TRY 48310 . 48313) (AS 48422 . 48424) (NAME 48149 . 48157) (IF 48199 . 48201) (ELSE 48258 . 48262) (FROM 35725 . 35729) (PERIOD 35730 . 35731) (INDENT_BLOCK 32982 . 33093) (NEWLINE 32981 . 32982) (COLON 32980 . 32981) (TRY 32550 . 32553) (AS 32974 . 32976) (RETURN 8177 . 8183) (IF 8218 . 8220) (ELSE 8234 . 8238) (INDENT_BLOCK 4521 . 4753) (NEWLINE 4520 . 4521) (COLON 4519 . 4520) (TRY 4426 . 4429) (AS 4513 . 4515) (PERIOD 315 . 316) (FROM 309 . 313) (PERIOD 314 . 315) (FROM 268 . 272) (PERIOD 273 . 274)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("traceback" include nil nil [113 151])
            ("collections" include nil nil [113 151])
            ("os" include nil nil [113 151])
            ("sys" include nil nil [113 151])
            ("logging" include nil nil [152 166])
            ("statistics" include nil nil [219 289])
            ("conformance" include nil nil [219 289])
            ("backend" include nil nil [219 289])
            ("table" include nil nil [219 289])
            ("basic" include nil nil [219 289])
            ("antigens_sera" include nil nil [305 325])
            ("basic_type" include nil nil [343 367])
            ("timer" include nil nil [343 367])
            ("BindingTable" type
               (:documentation "Binding table consists of an ordered set of sera corresponding to the
    columns of the binding table, an ordered set of antigens corresponding to
    the rows of the binding table, binding table titers using one of
    the C++ classes (depending on distance/similarity type of the
    table and float/integer type of the titers). Reference to titers
    class is kept in the derived class.
    "
                :superclasses ("table.TableBase")
                :members 
                  ( ("names_unmodifiable" variable nil (reparse-symbol indented_block_body) [893 918])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"Caller should provide name, default value is used for reading from
        xml only\"\"\"" code nil (reparse-symbol indented_block_body) [1101 1190])
                            ("super" code nil (reparse-symbol indented_block_body) [1199 1217])
                            ("if" code nil (reparse-symbol indented_block_body) [1226 1412]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1031 1035])
                            ("factory" variable nil (reparse-symbol function_parameters) [1037 1044])
                            ("number_of_antigens" variable nil (reparse-symbol function_parameters) [1046 1064])
                            ("number_of_sera" variable nil (reparse-symbol function_parameters) [1071 1085]))                          
                        :documentation "Caller should provide name, default value is used for reading from
        xml only"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1018 1412])
                    ("number_of_antigens" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1440 1444]))                          )
                        (reparse-symbol indented_block_body) [1417 1546])
                    ("number_of_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1570 1574]))                          )
                        (reparse-symbol indented_block_body) [1551 1671])
                    ("has_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1689 1693]))                          )
                        (reparse-symbol indented_block_body) [1676 1716])
                    ("number_of_titers_for_antigen" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1754 1758])
                            ("antigen_no" variable nil (reparse-symbol function_parameters) [1760 1770])
                            ("non_thresholded_only" variable nil (reparse-symbol function_parameters) [1772 1792])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [1800 1822]))                          
                        :documentation "Returns number of titers for an antigen")
                        (reparse-symbol indented_block_body) [1721 1937])
                    ("number_of_titers_for_serum" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1973 1977])
                            ("serum_no" variable nil (reparse-symbol function_parameters) [1979 1987])
                            ("non_thresholded_only" variable nil (reparse-symbol function_parameters) [1989 2009])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [2017 2039]))                          
                        :documentation "Returns number of titers for a serum")
                        (reparse-symbol indented_block_body) [1942 2151])
                    ("antigens_having_few_titers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2187 2191])
                            ("min_number_of_titers" variable nil (reparse-symbol function_parameters) [2193 2213])
                            ("non_thresholded_only" variable nil (reparse-symbol function_parameters) [2217 2237])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [2244 2266]))                          
                        :documentation "Returns generator of antigens indices that have less than min_number_of_titers titers.")
                        (reparse-symbol indented_block_body) [2156 2602])
                    ("sera_having_few_titers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2634 2638])
                            ("min_number_of_titers" variable nil (reparse-symbol function_parameters) [2640 2660])
                            ("non_thresholded_only" variable nil (reparse-symbol function_parameters) [2664 2684])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [2691 2713]))                          
                        :documentation "Returns generator of sera indices that have less than min_number_of_titers titers.")
                        (reparse-symbol indented_block_body) [2607 3039])
                    ("mark_antigens_sera_having_few_titers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3085 3089])
                            ("min_number_of_titers" variable nil (reparse-symbol function_parameters) [3091 3111])
                            ("non_thresholded_only" variable nil (reparse-symbol function_parameters) [3115 3135])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [3142 3164]))                          
                        :documentation "Marks antigens/sera having less than min_number_of_titers titers. Returns sets of marked antigen and sera indices.")
                        (reparse-symbol indented_block_body) [3044 4337])
                    ("reset_antigens_sera_having_few_titers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4384 4388]))                          )
                        (reparse-symbol indented_block_body) [4342 4469])
                    ("check_for_duplicates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4499 4503])
                            ("find_all" variable nil (reparse-symbol function_parameters) [4505 4513])
                            ("options" variable nil (reparse-symbol function_parameters) [4520 4529]))                          
                        :documentation "Checks if there are duplicates in the names of
        antigens and sera (separately), raises antigens_sera.AntigensSeraDuplicates
        which keeps list of problematic indices.")
                        (reparse-symbol indented_block_body) [4474 5158])
                    ("new_layout" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5249 5253])
                            ("number_of_dimensions" variable nil (reparse-symbol function_parameters) [5255 5275]))                          
                        :documentation "Returns new layout of the class corresponding to the table type.")
                        (reparse-symbol indented_block_body) [5234 5605])
                    ("remove_antigens_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5635 5639])
                            ("antigens_indices" variable nil (reparse-symbol function_parameters) [5641 5657])
                            ("sera_indices" variable nil (reparse-symbol function_parameters) [5659 5671]))                          
                        :documentation "Removes antigens and sera from the table by their indices.")
                        (reparse-symbol indented_block_body) [5610 5855])
                    ("description" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5876 5880])
                            ("brief" variable nil (reparse-symbol function_parameters) [5882 5887]))                          
                        :documentation "Returns str with info about table.")
                        (reparse-symbol indented_block_body) [5860 6039])
                    ("conformance_level" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6066 6070])
                            ("conformance_data" variable nil (reparse-symbol function_parameters) [6072 6088]))                          )
                        (reparse-symbol indented_block_body) [6044 7596])
                    ("detect_lineage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7620 7624])
                            ("force" variable nil (reparse-symbol function_parameters) [7626 7631])
                            ("validation_data" variable nil (reparse-symbol function_parameters) [7633 7648]))                          )
                        (reparse-symbol indented_block_body) [7601 10395])
                    ("lineage" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10570 10574]))                          )
                        (reparse-symbol indented_block_body) [10558 10826])
                    ("detect_reference_antigens" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10861 10865]))                          )
                        (reparse-symbol indented_block_body) [10831 11490])
                    ("correlations_between_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11525 11529]))                          
                        :documentation "Returns left bottom triangle of symmetric matrix (as list
        of lists) of correlations for all sera by their titers. If two
        sera have less than two common titers, correlation is set to
        0.")
                        (reparse-symbol indented_block_body) [11495 13745])
                    ("_titer_for_correlation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13777 13781])
                            ("ag_no" variable nil (reparse-symbol function_parameters) [13783 13788])
                            ("sr_no" variable nil (reparse-symbol function_parameters) [13790 13795]))                          )
                        (reparse-symbol indented_block_body) [13750 14073]))                  
                :type "class")
                nil [443 14073]))          
      :file "binding_table.py"
      :pointmax 14239
      :fsize 14238
      :lastmodtime '(22655 31758 0 0)
      :unmatched-syntax '((PERIOD 10934 . 10935) (FROM 10928 . 10932) (PERIOD 10933 . 10934) (NAME 9098 . 9106) (IF 9112 . 9114) (ELSE 9143 . 9147) (NAME 8786 . 8794) (IF 8801 . 8803) (ELSE 8832 . 8836) (INDENT_BLOCK 7514 . 7596) (NEWLINE 7513 . 7514) (COLON 7512 . 7513) (ELSE 7508 . 7512) (INDENT_BLOCK 7070 . 7500) (NEWLINE 7004 . 7005) (COLON 7003 . 7004) (TRY 6886 . 6889) (AS 6997 . 6999) (INDENT_BLOCK 5125 . 5158) (NEWLINE 5124 . 5125) (COLON 5123 . 5124) (TRY 4975 . 4978) (AS 5117 . 5119) (PERIOD 332 . 333) (FROM 326 . 330) (PERIOD 331 . 332) (PERIOD 296 . 297) (FROM 290 . 294) (PERIOD 295 . 296) (FROM 212 . 216) (PERIOD 217 . 218)))
    (semanticdb-table "semanticdb-table"
      :file "parsers.py"
      :fsize 17812
      :lastmodtime '(22655 31758 0 0))
    (semanticdb-table "semanticdb-table"
      :file "exceptions.py"
      :fsize 2451
      :lastmodtime '(22655 31758 0 0))
    (semanticdb-table "semanticdb-table"
      :file "basic.py"
      :fsize 17449
      :lastmodtime '(22655 31758 0 0))
    (semanticdb-table "semanticdb-table"
      :file "statistics.py"
      :fsize 2487
      :lastmodtime '(22655 31758 0 0))
    (semanticdb-table "semanticdb-table"
      :file "conformance.py"
      :fsize 5992
      :lastmodtime '(22655 31758 0 0))
    (semanticdb-table "semanticdb-table"
      :file "table.py"
      :fsize 954
      :lastmodtime '(22655 31758 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("traceback" include nil nil [113 129])
            ("logging" include nil nil [130 144])
            ("exceptions" include nil nil [197 245])
            ("backend" include nil nil [197 245])
            ("binding_table" include nil nil [197 245])
            ("basic" include nil nil [197 245])
            ("debug" include nil nil [263 275])
            ("AntigenicColumnBases" type
               (:documentation "Antigenic table columns bases forced e.g. upon merging of MELB
    tables or reading merges made by lispmds (kept internally as C++
    objects)."
                :superclasses ("backend.AntigenicColumnBases")
                :members 
                  ( ("info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [580 584]))                          
                        :documentation "Returns string with info about columns bases.")
                        (reparse-symbol indented_block_body) [571 692])
                    ("set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [705 709])
                            ("column_bases" variable nil (reparse-symbol function_parameters) [711 723]))                          
                        :documentation "Sets this column_bases from the list of floats")
                        (reparse-symbol indented_block_body) [697 1355])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1372 1376]))                          )
                        (reparse-symbol indented_block_body) [1360 1413])
                    ("_eq_reordered" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1568 1572])
                            ("other" variable nil (reparse-symbol function_parameters) [1574 1579])
                            ("common_sera" variable nil (reparse-symbol function_parameters) [1581 1592]))                          
                        :documentation "Equivalent tables could have antigens/sera in
        different orders (as the result of different tables merging
        paths). Use mappings to compare them.")
                        (reparse-symbol indented_block_body) [1550 2250])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2291 2295]))                          )
                        (reparse-symbol indented_block_body) [2274 2327])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2368 2372])
                            ("state" variable nil (reparse-symbol function_parameters) [2374 2379]))                          )
                        (reparse-symbol indented_block_body) [2351 2445]))                  
                :type "class")
                nil [351 2445])
            ("AntigenicTable" type
               (:superclasses ("binding_table.BindingTable")
                :members 
                  ( ("column_bases" variable nil (reparse-symbol indented_block_body) [2576 2611])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [2850 2953])
                            ("if" code nil (reparse-symbol indented_block_body) [2962 3190]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2687 2691])
                            ("factory" variable nil (reparse-symbol function_parameters) [2693 2700])
                            ("number_of_antigens" variable nil (reparse-symbol function_parameters) [2702 2720])
                            ("number_of_sera" variable nil (reparse-symbol function_parameters) [2727 2741])
                            ("number_of_layers" variable nil (reparse-symbol function_parameters) [2748 2764])
                            ("titer_type" variable nil (reparse-symbol function_parameters) [2771 2781])
                            ("matrix_type" variable nil (reparse-symbol function_parameters) [2792 2803]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2674 3190])
                    ("clone" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3205 3209]))                          )
                        (reparse-symbol indented_block_body) [3195 3284])
                    ("titer_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3304 3308]))                          )
                        (reparse-symbol indented_block_body) [3289 3351])
                    ("create_titers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3374 3378])
                            ("number_of_layers" variable nil (reparse-symbol function_parameters) [3380 3396])
                            ("titer_type" variable nil (reparse-symbol function_parameters) [3398 3408])
                            ("matrix_type" variable nil (reparse-symbol function_parameters) [3410 3421]))                          
                        :documentation "Two titer types are currently defined: 'normal' (usually in range 10-40960), 'small' (usually in range 1-4096).")
                        (reparse-symbol indented_block_body) [3356 4630])
                    ("number_of_titers_for_antigen" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4668 4672])
                            ("antigen_no" variable nil (reparse-symbol function_parameters) [4674 4684])
                            ("non_thresholded_only" variable nil (reparse-symbol function_parameters) [4686 4706])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [4714 4736]))                          
                        :documentation "Returns number of titers for an antigen")
                        (reparse-symbol indented_block_body) [4635 4964])
                    ("number_of_titers_for_serum" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5000 5004])
                            ("serum_no" variable nil (reparse-symbol function_parameters) [5006 5014])
                            ("non_thresholded_only" variable nil (reparse-symbol function_parameters) [5016 5036])
                            ("dodgy_titer_is_regular" variable nil (reparse-symbol function_parameters) [5044 5066]))                          
                        :documentation "Returns number of titers for a serum")
                        (reparse-symbol indented_block_body) [4969 5285])
                    ("titers_of_antigen" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5312 5316])
                            ("antigen_no" variable nil (reparse-symbol function_parameters) [5318 5328]))                          
                        :documentation "Returns list of all titers (including dont-care) for an antigen.")
                        (reparse-symbol indented_block_body) [5290 5462])
                    ("set_column_bases" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5488 5492])
                            ("column_bases" variable nil (reparse-symbol function_parameters) [5494 5506]))                          
                        :documentation "Sets new forced columns bases from list of floats")
                        (reparse-symbol indented_block_body) [5467 6240])
                    ("get_column_bases" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6266 6270])
                            ("minimum_column_basis" variable nil (reparse-symbol function_parameters) [6272 6292]))                          
                        :documentation "Returns either forced or computed columns bases.")
                        (reparse-symbol indented_block_body) [6245 6465])
                    ("get_column_bases_as_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6499 6503])
                            ("minimum_column_basis" variable nil (reparse-symbol function_parameters) [6505 6525])
                            ("avoid_nan_inf" variable nil (reparse-symbol function_parameters) [6527 6540]))                          )
                        (reparse-symbol indented_block_body) [6470 7052])
                    ("compute_column_bases" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7082 7086])
                            ("minimum_column_basis" variable nil (reparse-symbol function_parameters) [7088 7108]))                          )
                        (reparse-symbol indented_block_body) [7057 7227])
                    ("parse_minimum_column_basis" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7263 7267])
                            ("minimum_column_basis_txt" variable nil (reparse-symbol function_parameters) [7269 7293]))                          )
                        (reparse-symbol indented_block_body) [7232 7382])
                    ("titer_from_similarity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7413 7417])
                            ("similarity" variable nil (reparse-symbol function_parameters) [7419 7429]))                          )
                        (reparse-symbol indented_block_body) [7387 7501])
                    ("new_stress_evaluator_parameters" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7542 7546])
                            ("minimum_column_basis" variable nil (reparse-symbol function_parameters) [7548 7568]))                          
                        :documentation "Returns new object of the class derived from
        backend.StressEvaluatorParameters corresponding to this
        table type.")
                        (reparse-symbol indented_block_body) [7506 8565])
                    ("new_mds" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8582 8586])
                            ("stress_evaluator_parameters" variable nil (reparse-symbol function_parameters) [8588 8615])
                            ("relaxator" variable nil (reparse-symbol function_parameters) [8617 8626]))                          
                        :documentation "Returns new object of the class derived from
        backend.Mds corresponding to this table
        type. stress_evaluator_parameters must be created using
        self.new_stress_evaluator_parameters().")
                        (reparse-symbol indented_block_body) [8570 9182])
                    ("description" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9203 9207])
                            ("brief" variable nil (reparse-symbol function_parameters) [9209 9214]))                          
                        :documentation "Returns str with info about table.")
                        (reparse-symbol indented_block_body) [9187 9906])
                    ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9922 9926])
                            ("other" variable nil (reparse-symbol function_parameters) [9928 9933]))                          
                        :documentation "Two equivalent antigens/sera sets may have different order
        of antigens/sera (as the result of different paths of tables
        merging). Then we need to use mapping (value returned by
        common()) to compare sets.")
                        (reparse-symbol indented_block_body) [9911 10223])
                    ("eq" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10235 10239])
                            ("other" variable nil (reparse-symbol function_parameters) [10241 10246])
                            ("verbose" variable nil (reparse-symbol function_parameters) [10248 10255]))                          )
                        (reparse-symbol indented_block_body) [10228 11134])
                    ("relaxable" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11153 11157]))                          
                        :documentation "Returns if table has at least three not-excluded antigens and three not-excluded sera.")
                        (reparse-symbol indented_block_body) [11139 11763])
                    ("remove_antigens_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11793 11797])
                            ("antigens_indices" variable nil (reparse-symbol function_parameters) [11799 11815])
                            ("sera_indices" variable nil (reparse-symbol function_parameters) [11817 11829]))                          
                        :documentation "Removes antigens and sera from the table by their indices.")
                        (reparse-symbol indented_block_body) [11768 12214])
                    ("conformance_level" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12241 12245])
                            ("conformance_data" variable nil (reparse-symbol function_parameters) [12247 12263]))                          )
                        (reparse-symbol indented_block_body) [12219 12884])
                    ("set_layers_from" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12909 12913])
                            ("source_table" variable nil (reparse-symbol function_parameters) [12915 12927])
                            ("starting_layer" variable nil (reparse-symbol function_parameters) [12929 12943])
                            ("antigens_mapping" variable nil (reparse-symbol function_parameters) [12945 12961])
                            ("sera_mapping" variable nil (reparse-symbol function_parameters) [12963 12975]))                          
                        :documentation "Copies titers layers from the source_table to this table staring at
        the starting_layer. antigens_mapping and sera_mapping are
        array of indices in this table for each source table
        antigen/serum. This table expected to contain no values in
        the layers being set, caller perhaps needs to clear layers
        before using this function.")
                        (reparse-symbol indented_block_body) [12889 14574])
                    ("set_titers_from_layers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14606 14610])
                            ("more_than_thresholded" variable nil (reparse-symbol function_parameters) [14612 14633])
                            ("verbose" variable nil (reparse-symbol function_parameters) [14635 14642]))                          
                        :documentation "Sets titers of this table from layers, titers of the
        new table are computed using meanTiter()

        if there are more-than thresholded titers and
        more_than_thresholded is 'dont-care', ignore them, if
        more_than_thresholded is 'adjust-to-next', those titers are
        converted to the next value, e.g. >5120 to 10240.
        ")
                        (reparse-symbol indented_block_body) [14579 15976])
                    ("set_titers_from_single_layer" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16014 16018])
                            ("layer_no" variable nil (reparse-symbol function_parameters) [16020 16028]))                          
                        :documentation "Copies titers from a layer to titers. Used fro splitting merge into layers.
        Returns tuple of two lists: indices of antigens and sera that have no titers.")
                        (reparse-symbol indented_block_body) [15981 16750]))                  
                :type "class")
                nil [2520 16750])
            ("AntigenicTableTitersBase" type
               (:documentation "Antigenic table titers interface."
                :superclasses ("basic.Base")
                :members 
                  ( ("__deepcopy__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16936 16940])
                            ("memo" variable nil (reparse-symbol function_parameters) [16942 16946]))                          )
                        (reparse-symbol indented_block_body) [16919 16985])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16998 17002])
                            ("antigen_no" variable nil (reparse-symbol function_parameters) [17004 17014])
                            ("serum_no" variable nil (reparse-symbol function_parameters) [17016 17024]))                          )
                        (reparse-symbol indented_block_body) [16990 17082])
                    ("as_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17099 17103]))                          
                        :documentation "Returns list of list of titers represented by str, i.e. '*'
        for don't care, '<40' for less than, etc.")
                        (reparse-symbol indented_block_body) [17087 17275])
                    ("logged_as_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17299 17303]))                          
                        :documentation "Returns list of list of logged titers represented by str, i.e. '*'
        for don't care, '<2.0' for less than, etc.")
                        (reparse-symbol indented_block_body) [17280 17489])
                    ("from_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17508 17512])
                            ("source" variable nil (reparse-symbol function_parameters) [17514 17520]))                          )
                        (reparse-symbol indented_block_body) [17494 17569])
                    ("as_list_of_dicts" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17595 17599]))                          
                        :documentation "Returns list of dict for each antigen of titers represented
        by str, '<40' for less than, etc., don't care titers not
        included.")
                        (reparse-symbol indented_block_body) [17574 17804])
                    ("from_list_of_dicts" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17832 17836])
                            ("source" variable nil (reparse-symbol function_parameters) [17838 17844]))                          )
                        (reparse-symbol indented_block_body) [17809 17893])
                    ("layers_as_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17917 17921])
                            ("force_dict" variable nil (reparse-symbol function_parameters) [17923 17933]))                          
                        :documentation "Returns list of (list of list or list of dict) depending on
        the underlying matrix type of titers represented by str,
        i.e. '*' for don't care, '<40' for less than, etc.")
                        (reparse-symbol indented_block_body) [17898 18414])
                    ("layers_from_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18440 18444])
                            ("source" variable nil (reparse-symbol function_parameters) [18446 18452]))                          )
                        (reparse-symbol indented_block_body) [18419 18953])
                    ("eq" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18965 18969])
                            ("other" variable nil (reparse-symbol function_parameters) [18971 18976])
                            ("antigens_common" variable nil (reparse-symbol function_parameters) [18978 18993])
                            ("sera_common" variable nil (reparse-symbol function_parameters) [18995 19006])
                            ("verbose" variable nil (reparse-symbol function_parameters) [19008 19015])
                            ("report_all_differences" variable nil (reparse-symbol function_parameters) [19023 19045]))                          )
                        (reparse-symbol indented_block_body) [18958 21712])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21753 21757]))                          )
                        (reparse-symbol indented_block_body) [21736 22073])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22114 22118])
                            ("state" variable nil (reparse-symbol function_parameters) [22120 22125]))                          )
                        (reparse-symbol indented_block_body) [22097 22392]))                  
                :type "class")
                nil [16825 22392])
            ("AntigenicTableTitersNormal" type
               (:documentation "Antigenic table normal titers (kept internally as C++ objects)."
                :superclasses ("backend.AntigenicTable_AntigenicTiter" "AntigenicTableTitersBase")
                :members 
                  ( ("clone" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22656 22660]))                          )
                        (reparse-symbol indented_block_body) [22646 22699])
                    ("new_mds" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22716 22720])
                            ("stress_evaluator_parameters" variable nil (reparse-symbol function_parameters) [22722 22749])
                            ("relaxator" variable nil (reparse-symbol function_parameters) [22751 22760]))                          )
                        (reparse-symbol indented_block_body) [22704 22836])
                    ("name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22850 22854]))                          )
                        (reparse-symbol indented_block_body) [22841 22884])
                    ("titer_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22904 22908]))                          )
                        (reparse-symbol indented_block_body) [22889 22935])
                    ("low_high_avidity_test" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22966 22970]))                          
                        :documentation "Returns pointer to the correct class for avidity test.")
                        (reparse-symbol indented_block_body) [22940 23099])
                    ("serum_column_basis_test" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23132 23136]))                          
                        :documentation "Returns pointer to the correct class for avidity test.")
                        (reparse-symbol indented_block_body) [23104 23267]))                  
                :type "class")
                nil [22467 23267])
            ("AntigenicTableTitersSmall" type
               (:documentation "Antigenic table small titers (kept internally as C++ objects)."
                :superclasses ("backend.AntigenicTable_AntigenicTiterSmall" "AntigenicTableTitersBase")
                :members 
                  ( ("clone" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23534 23538]))                          )
                        (reparse-symbol indented_block_body) [23524 23577])
                    ("new_mds" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23594 23598])
                            ("stress_evaluator_parameters" variable nil (reparse-symbol function_parameters) [23600 23627])
                            ("relaxator" variable nil (reparse-symbol function_parameters) [23629 23638]))                          )
                        (reparse-symbol indented_block_body) [23582 23714])
                    ("name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23728 23732]))                          )
                        (reparse-symbol indented_block_body) [23719 23762])
                    ("titer_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23782 23786]))                          )
                        (reparse-symbol indented_block_body) [23767 23812])
                    ("low_high_avidity_test" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23843 23847]))                          
                        :documentation "Returns pointer to the correct class for avidity test.")
                        (reparse-symbol indented_block_body) [23817 23981])
                    ("serum_column_basis_test" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24014 24018]))                          
                        :documentation "Returns pointer to the correct class for avidity test.")
                        (reparse-symbol indented_block_body) [23986 24154]))                  
                :type "class")
                nil [23342 24154]))          
      :file "antigenic_table.py"
      :pointmax 24320
      :fsize 24319
      :lastmodtime '(22655 31758 0 0)
      :unmatched-syntax '((INDENT_BLOCK 21604 . 21694) (NEWLINE 21603 . 21604) (COLON 21602 . 21603) (TRY 19100 . 19103) (AS 21596 . 21598) (RETURN 18183 . 18189) (IF 18212 . 18214) (ELSE 18285 . 18289) (INDENT_BLOCK 11056 . 11116) (NEWLINE 11055 . 11056) (COLON 11054 . 11055) (TRY 10728 . 10731) (AS 11048 . 11050) (RETURN 6366 . 6372) (IF 6391 . 6393) (ELSE 6412 . 6416) (PERIOD 252 . 253) (FROM 246 . 250) (PERIOD 251 . 252) (FROM 190 . 194) (PERIOD 195 . 196))))
  :file "!Users!eu!ac!acmacs!acmacs!core!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
