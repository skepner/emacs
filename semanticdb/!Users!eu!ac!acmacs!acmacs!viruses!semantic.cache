;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("traceback" include nil nil [113 156])
            ("datetime" include nil nil [113 156])
            ("collections" include nil nil [113 156])
            ("re" include nil nil [113 156])
            ("logging" include nil nil [157 171])
            ("backend" include nil nil [229 280])
            ("conformance" include nil nil [229 280])
            ("basic" include nil nil [229 280])
            ("timer" include nil nil [298 310])
            ("Assay" include nil nil [323 347])
            ("Lab" include nil nil [323 347])
            ("Virus" include nil nil [323 347])
            ("TableDate" type
               (:superclasses ("basic.Date")
                :members 
                  ( ("__new__" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [470 473])
                        ("args" variable nil (reparse-symbol function_parameters) [475 480])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [482 490]))                      ) (reparse-symbol indented_block_body) [458 798])
                    ("elicit" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [831 834])
                            ("parse_from" variable nil (reparse-symbol function_parameters) [836 846]))                          )
                        (reparse-symbol indented_block_body) [803 1822])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1839 1843]))                          )
                        (reparse-symbol indented_block_body) [1827 1878])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2053 2057])
                            ("separator" variable nil (reparse-symbol function_parameters) [2059 2068])
                            ("short" variable nil (reparse-symbol function_parameters) [2073 2078]))                          )
                        (reparse-symbol indented_block_body) [2039 2356])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2374 2378]))                          )
                        (reparse-symbol indented_block_body) [2361 2547])
                    ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2563 2567])
                            ("other" variable nil (reparse-symbol function_parameters) [2569 2574]))                          )
                        (reparse-symbol indented_block_body) [2552 2644])
                    ("mongodb_to_db" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2667 2671]))                          )
                        (reparse-symbol indented_block_body) [2649 2706])
                    ("json_serializable" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2733 2737]))                          )
                        (reparse-symbol indented_block_body) [2711 2772])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2813 2817]))                          )
                        (reparse-symbol indented_block_body) [2796 2924])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2965 2969])
                            ("state" variable nil (reparse-symbol function_parameters) [2971 2976]))                          )
                        (reparse-symbol indented_block_body) [2948 3082]))                  
                :type "class")
                nil [423 3082])
            ("ChartInfoBase" type
               (:superclasses ("basic.Base")
                :members 
                  ( ("assay" variable nil (reparse-symbol indented_block_body) [3196 3209])
                    ("lab" variable nil (reparse-symbol indented_block_body) [3267 3276])
                    ("virus" variable nil (reparse-symbol indented_block_body) [3281 3294])
                    ("date" variable nil (reparse-symbol indented_block_body) [3338 3354])
                    ("name" variable nil (reparse-symbol indented_block_body) [3359 3369])
                    ("author" variable nil (reparse-symbol indented_block_body) [3418 3430])
                    ("comment" variable nil (reparse-symbol indented_block_body) [3475 3488])
                    ("excluded" variable nil (reparse-symbol indented_block_body) [3493 3507])
                    ("assessment_of_table_quality" variable nil (reparse-symbol indented_block_body) [3552 3585])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3628 3632])
                            ("name_type" variable nil (reparse-symbol function_parameters) [3634 3643]))                          )
                        (reparse-symbol indented_block_body) [3614 3709])
                    ("make_name_base" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3733 3737])
                            ("name_type" variable nil (reparse-symbol function_parameters) [3739 3748]))                          )
                        (reparse-symbol indented_block_body) [3714 4014])
                    ("make_filename" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4037 4041])
                            ("filename_type" variable nil (reparse-symbol function_parameters) [4043 4056]))                          )
                        (reparse-symbol indented_block_body) [4019 4139])
                    ("make_name_postprocess" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4170 4174])
                            ("name_type" variable nil (reparse-symbol function_parameters) [4176 4185])
                            ("name" variable nil (reparse-symbol function_parameters) [4187 4191]))                          )
                        (reparse-symbol indented_block_body) [4144 4338])
                    ("make_virus" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4358 4362]))                          )
                        (reparse-symbol indented_block_body) [4343 4391])
                    ("make_virus_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4416 4420])
                            ("include_subset" variable nil (reparse-symbol function_parameters) [4422 4436]))                          )
                        (reparse-symbol indented_block_body) [4396 4535])
                    ("make_lab" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4553 4557])
                            ("fix_lab_name" variable nil (reparse-symbol function_parameters) [4559 4571]))                          )
                        (reparse-symbol indented_block_body) [4540 4786])
                    ("make_labs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4805 4809]))                          )
                        (reparse-symbol indented_block_body) [4791 4968])
                    ("make_date" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4987 4991]))                          )
                        (reparse-symbol indented_block_body) [4973 5090])
                    ("make_rbc_species" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5116 5120]))                          )
                        (reparse-symbol indented_block_body) [5095 5143])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5160 5164]))                          )
                        (reparse-symbol indented_block_body) [5148 5199])
                    ("conformance_level" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5226 5230])
                            ("conformance_data" variable nil (reparse-symbol function_parameters) [5232 5248]))                          )
                        (reparse-symbol indented_block_body) [5204 5264])
                    ("sFieldHashes" variable nil (reparse-symbol indented_block_body) [5269 5302])
                    ("_fields" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5319 5323])
                            ("excluded" variable nil (reparse-symbol function_parameters) [5325 5333]))                          )
                        (reparse-symbol indented_block_body) [5307 5719])
                    ("reset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5734 5738]))                          )
                        (reparse-symbol indented_block_body) [5724 5782])
                    ("allow_merging_with" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5810 5814])
                            ("chart_info" variable nil (reparse-symbol function_parameters) [5816 5826]))                          
                        :documentation "Raise RuntimeError if merging of this and chart_info is not allowed.")
                        (reparse-symbol indented_block_body) [5787 6541])
                    ("combine" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6558 6562])
                            ("ci1" variable nil (reparse-symbol function_parameters) [6564 6567])
                            ("ci2" variable nil (reparse-symbol function_parameters) [6569 6572]))                          
                        :documentation "Combine chart_info for two charts being merged.")
                        (reparse-symbol indented_block_body) [6546 6921]))                  
                :type "class")
                nil [3157 6921])
            ("SourceTable" type
               (:documentation "Keeps reference to the source table of the chart, e.g. seqt object id, table name."
                :superclasses ("ChartInfoBase")
                :members 
                  ( ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7515 7519]))                          )
                        (reparse-symbol indented_block_body) [7498 7765])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7806 7810])
                            ("state" variable nil (reparse-symbol function_parameters) [7812 7817]))                          )
                        (reparse-symbol indented_block_body) [7789 7971]))                  
                :type "class")
                nil [7223 7971])
            ("SourceTablesList" type
               (:documentation "List of SourceTable instances."
                :superclasses ("list")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [8151 8184])
                            ("self" variable nil (reparse-symbol indented_block_body) [8193 8218])
                            ("self" code nil (reparse-symbol indented_block_body) [8227 8244]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8136 8140])
                            ("args" variable nil (reparse-symbol function_parameters) [8142 8147])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [8149 8157]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [8123 8262])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8281 8285])
                            ("name_type" variable nil (reparse-symbol function_parameters) [8287 8296]))                          )
                        (reparse-symbol indented_block_body) [8267 8389])
                    ("lab" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8402 8406]))                          )
                        (reparse-symbol indented_block_body) [8394 8557])
                    ("labs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8571 8575])
                            ("fix_lab_name" variable nil (reparse-symbol function_parameters) [8577 8589]))                          )
                        (reparse-symbol indented_block_body) [8562 8670])
                    ("date" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8684 8688]))                          )
                        (reparse-symbol indented_block_body) [8675 8973])
                    ("_make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8993 8997]))                          )
                        (reparse-symbol indented_block_body) [8978 9120])
                    ("_fields" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9137 9141]))                          )
                        (reparse-symbol indented_block_body) [9125 9585])
                    ("_combine" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9603 9607])
                            ("field_name" variable nil (reparse-symbol function_parameters) [9609 9619]))                          )
                        (reparse-symbol indented_block_body) [9590 9801]))                  
                :type "class")
                nil [8046 9801])
            ("ChartInfo" type
               (:documentation "Keeps various chart information fields."
                :superclasses ("ChartInfoBase")
                :members 
                  ( ("sources" variable nil (reparse-symbol indented_block_body) [9964 9990])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10083 10087])
                            ("name_type" variable nil (reparse-symbol function_parameters) [10089 10098]))                          )
                        (reparse-symbol indented_block_body) [10069 10417])
                    ("make_virus_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10442 10446])
                            ("options" variable nil (reparse-symbol function_parameters) [10448 10457]))                          )
                        (reparse-symbol indented_block_body) [10422 10518])
                    ("description" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10539 10543]))                          )
                        (reparse-symbol indented_block_body) [10523 10902])
                    ("conformance_level" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10929 10933])
                            ("conformance_data" variable nil (reparse-symbol function_parameters) [10935 10951]))                          )
                        (reparse-symbol indented_block_body) [10907 11130])
                    ("make_sources_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11157 11161]))                          )
                        (reparse-symbol indented_block_body) [11135 11313])
                    ("combine" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11330 11334])
                            ("ci1" variable nil (reparse-symbol function_parameters) [11336 11339])
                            ("ci2" variable nil (reparse-symbol function_parameters) [11341 11344]))                          
                        :documentation "Combine chart_info for two charts being merged.")
                        (reparse-symbol indented_block_body) [11318 11891])
                    ("is_merge" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11909 11913]))                          )
                        (reparse-symbol indented_block_body) [11896 11950])
                    ("most_recent_date" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11976 11980]))                          
                        :documentation "Returns date for an individual table and the most recent source date for a merge.")
                        (reparse-symbol indented_block_body) [11955 12363])
                    ("source_tables_list" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12391 12395]))                          )
                        (reparse-symbol indented_block_body) [12368 12432])
                    ("guess_minimum_column_basis" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12468 12472]))                          )
                        (reparse-symbol indented_block_body) [12437 12497])
                    ("__getattribute__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12523 12527])
                            ("name" variable nil (reparse-symbol function_parameters) [12529 12533]))                          )
                        (reparse-symbol indented_block_body) [12502 12900])
                    ("_fields" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12917 12921])
                            ("excluded" variable nil (reparse-symbol function_parameters) [12923 12931]))                          )
                        (reparse-symbol indented_block_body) [12905 12993]))                  
                :type "class")
                nil [9876 12993])
            ("ChartInfoReaderBase" type
               (:documentation "Base class for chart infor readers."
                :members 
                  ( ("read" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13155 13159])
                            ("source" variable nil (reparse-symbol function_parameters) [13161 13167])
                            ("chart_info" variable nil (reparse-symbol function_parameters) [13169 13179])
                            ("validation_data" variable nil (reparse-symbol function_parameters) [13181 13196]))                          )
                        (reparse-symbol indented_block_body) [13146 13667])
                    ("read_fields" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13688 13692])
                            ("source_chart_info" variable nil (reparse-symbol function_parameters) [13694 13711])
                            ("target_chart_info" variable nil (reparse-symbol function_parameters) [13713 13730])
                            ("validation_data" variable nil (reparse-symbol function_parameters) [13732 13747]))                          )
                        (reparse-symbol indented_block_body) [13672 15030])
                    ("source_tables_list_class" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15064 15068]))                          )
                        (reparse-symbol indented_block_body) [15035 15103])
                    ("normalize_date" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15127 15131])
                            ("date" variable nil (reparse-symbol function_parameters) [15133 15137])
                            ("validation_data" variable nil (reparse-symbol function_parameters) [15139 15154]))                          )
                        (reparse-symbol indented_block_body) [15108 15229]))                  
                :type "class")
                nil [13068 15229]))          
      :file "chart_info.py"
      :pointmax 15395
      :fsize 16116
      :lastmodtime '(22655 31758 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("traceback" include nil nil [113 133])
            ("re" include nil nil [113 133])
            ("logging" include nil nil [134 148])
            ("basic" include nil nil [206 218])
            ("timer" include nil nil [236 248])
            ("Passage" type
               (:superclasses ("basic.Base")
                :members 
                  ( ("\"Keeps antigen passage history and optional passage date.\"" code nil (reparse-symbol indented_block_body) [356 414])
                    ("_name_sorting" variable nil (reparse-symbol indented_block_body) [420 437])
                    ("passage" variable nil (reparse-symbol indented_block_body) [443 468])
                    ("date" variable nil (reparse-symbol indented_block_body) [473 490])
                    ("recognized" variable nil (reparse-symbol indented_block_body) [495 512])
                    ("sReEgg" variable nil (reparse-symbol indented_block_body) [518 611])
                    ("sReSiat" variable nil (reparse-symbol indented_block_body) [616 703])
                    ("sReEggUnrecognized" variable nil (reparse-symbol indented_block_body) [708 795])
                    ("sReUnknown" variable nil (reparse-symbol indented_block_body) [800 846])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [972 976])
                            ("mark_unrecognized" variable nil (reparse-symbol function_parameters) [978 995]))                          )
                        (reparse-symbol indented_block_body) [958 1172])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1189 1193]))                          )
                        (reparse-symbol indented_block_body) [1177 1251])
                    ("egg" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1264 1268]))                          
                        :documentation "Returns if antigen is egg isolate.")
                        (reparse-symbol indented_block_body) [1256 1488])
                    ("siat" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1502 1506]))                          
                        :documentation "Returns if antigen is siat isolate.")
                        (reparse-symbol indented_block_body) [1493 1633])
                    ("cell" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1647 1651]))                          
                        :documentation "Returns if antigen is cell isolate.")
                        (reparse-symbol indented_block_body) [1638 1757])
                    ("egg_cell_suffix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1782 1786]))                          
                        :documentation "Returns suffix to use in abbreviated_egg name type")
                        (reparse-symbol indented_block_body) [1762 1980])
                    ("unknown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1997 2001]))                          
                        :documentation "Returns if last passage in unknown.")
                        (reparse-symbol indented_block_body) [1985 2111])
                    ("last_passage_type" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2397 2401]))                          
                        :documentation "Returns last passage type as string.")
                        (reparse-symbol indented_block_body) [2375 2609])
                    ("number_of_labs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2633 2637]))                          )
                        (reparse-symbol indented_block_body) [2614 2683])
                    ("last_number_of_passages" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2716 2720]))                          )
                        (reparse-symbol indented_block_body) [2688 2866])
                    ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2882 2886])
                            ("other" variable nil (reparse-symbol function_parameters) [2888 2893]))                          )
                        (reparse-symbol indented_block_body) [2871 2999])
                    ("__lt__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3015 3019])
                            ("other" variable nil (reparse-symbol function_parameters) [3021 3026]))                          )
                        (reparse-symbol indented_block_body) [3004 3168])
                    ("__bool__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3186 3190]))                          )
                        (reparse-symbol indented_block_body) [3173 3227])
                    ("elicit" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3260 3263])
                            ("data" variable nil (reparse-symbol function_parameters) [3265 3269])
                            ("lab" variable nil (reparse-symbol function_parameters) [3271 3274])
                            ("normalize" variable nil (reparse-symbol function_parameters) [3281 3290])
                            ("fields" variable nil (reparse-symbol function_parameters) [3298 3304])
                            ("validation_data" variable nil (reparse-symbol function_parameters) [3311 3326])
                            ("validation_message_args" variable nil (reparse-symbol function_parameters) [3333 3358]))                          )
                        (reparse-symbol indented_block_body) [3232 5561])
                    ("mongodb_to_db" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5584 5588]))                          )
                        (reparse-symbol indented_block_body) [5566 5723])
                    ("mongodb_from_db" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5765 5768])
                            ("data" variable nil (reparse-symbol function_parameters) [5770 5774]))                          )
                        (reparse-symbol indented_block_body) [5728 5956])
                    ("virus_tags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5976 5980]))                          
                        :documentation "Returns data to be scanned for viruses collection tags field.
        We do not use passage date in search.
        ")
                        (reparse-symbol indented_block_body) [5961 6142])
                    ("_designation_matcher" function
                       (:documentation "Matches if passage is 'ignore' (i.e. not used to match
        antigens/sera).  If passage is 'strict' or 'relaxed' and it is
        not for checking if there are duplicates withn a table, then
        if a and b lack passages, they do not match.
        in relaxed mode two X? passages match.
        flags['passage_match_unknown'] allows matching two X? passages (needed for ref antigens for CNIC)
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [6189 6192])
                            ("a" variable nil (reparse-symbol function_parameters) [6194 6195])
                            ("b" variable nil (reparse-symbol function_parameters) [6197 6198])
                            ("passage" variable nil (reparse-symbol function_parameters) [6200 6207])
                            ("duplicates_checking" variable nil (reparse-symbol function_parameters) [6209 6228])
                            ("flags" variable nil (reparse-symbol function_parameters) [6230 6237]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [6147 7914]))                  
                :type "class")
                nil [324 7914])
            ("normalize" function (:arguments 
              ( ("antigen_serum" variable nil (reparse-symbol function_parameters) [8003 8016])
                ("fields" variable nil (reparse-symbol function_parameters) [8018 8024])
                ("validation_data" variable nil (reparse-symbol function_parameters) [8026 8041])
                ("ignore_absent" variable nil (reparse-symbol function_parameters) [8043 8056])
                ("validation_message_args" variable nil (reparse-symbol function_parameters) [8064 8089]))              ) nil [7989 8503]))          
      :file "passage.py"
      :pointmax 8669
      :fsize 8743
      :lastmodtime '(22655 31758 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("traceback" include nil nil [113 133])
            ("re" include nil nil [113 133])
            ("logging" include nil nil [134 148])
            ("basic" include nil nil [206 218])
            ("timer" include nil nil [236 248])
            ("SerumSpecies" type
               (:superclasses ("basic.Uppercase")
                :members 
                  ( ("_name_sorting" variable nil (reparse-symbol indented_block_body) [367 385])
                    ("_designation_matcher" function
                       (:documentation "Matches if serum_species is 'ignore' (i.e. not used to match sera).
        If serum_species is 'strict' and it is not for checking if there are duplicates within a table,
        then if a and b lack serum_ids, they do not match.
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [433 436])
                            ("a" variable nil (reparse-symbol function_parameters) [438 439])
                            ("b" variable nil (reparse-symbol function_parameters) [441 442])
                            ("serum_species" variable nil (reparse-symbol function_parameters) [444 457])
                            ("duplicates_checking" variable nil (reparse-symbol function_parameters) [459 478])
                            ("flags" variable nil (reparse-symbol function_parameters) [480 487]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [391 1114]))                  
                :type "class")
                nil [324 1114])
            ("SerumId" type
               (:superclasses ("basic.UppercaseStripped")
                :members 
                  ( ("_name_sorting" variable nil (reparse-symbol indented_block_body) [1235 1253])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1273 1277])
                            ("mark_unrecognized" variable nil (reparse-symbol function_parameters) [1279 1296]))                          )
                        (reparse-symbol indented_block_body) [1259 1324])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1341 1345]))                          )
                        (reparse-symbol indented_block_body) [1329 1403])
                    ("name_suffix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1424 1428]))                          
                        :documentation "Returns suffix to use in abbreviated_egg name type")
                        (reparse-symbol indented_block_body) [1408 1569])
                    ("egg_cell_suffix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1594 1598]))                          )
                        (reparse-symbol indented_block_body) [1574 1832])
                    ("recognized" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1852 1856]))                          )
                        (reparse-symbol indented_block_body) [1837 1879])
                    ("_designation_matcher" function
                       (:documentation "Matches if serum_id is 'ignore' (i.e. not used to match sera).
        If serum_id is 'strict' and it is not for checking if there are duplicates within a table,
        then if a and b lack serum_ids, they do not match.
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1926 1929])
                            ("a" variable nil (reparse-symbol function_parameters) [1931 1932])
                            ("b" variable nil (reparse-symbol function_parameters) [1934 1935])
                            ("serum_id" variable nil (reparse-symbol function_parameters) [1937 1945])
                            ("duplicates_checking" variable nil (reparse-symbol function_parameters) [1947 1966])
                            ("flags" variable nil (reparse-symbol function_parameters) [1968 1975]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1884 2577])
                    ("elicit" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2610 2613])
                            ("source" variable nil (reparse-symbol function_parameters) [2615 2621]))                          )
                        (reparse-symbol indented_block_body) [2582 3241]))                  
                :type "class")
                nil [1189 3241])
            ("SerumIdUnrecognized" type
               (:superclasses ("SerumId")
                :members 
                  ( ("recognized" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3373 3377]))                          )
                        (reparse-symbol indented_block_body) [3358 3401])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3420 3424])
                            ("mark_unrecognized" variable nil (reparse-symbol function_parameters) [3426 3443]))                          )
                        (reparse-symbol indented_block_body) [3406 3641]))                  
                :type "class")
                nil [3316 3641])
            ("normalize" function (:arguments 
              ( ("antigen_serum" variable nil (reparse-symbol function_parameters) [3730 3743])
                ("fields" variable nil (reparse-symbol function_parameters) [3745 3751])
                ("serum_id" variable nil (reparse-symbol function_parameters) [3753 3761])
                ("validation_data" variable nil (reparse-symbol function_parameters) [3763 3778])
                ("validation_message_args" variable nil (reparse-symbol function_parameters) [3780 3805]))              ) nil [3716 5614])
            ("normalize_source" function
               (:documentation "Returns tuple (serum_id, extra, passage)"
                :arguments 
                  ( ("source" variable nil (reparse-symbol function_parameters) [5710 5716]))                  )
                nil [5689 6467]))          
      :file "serum_id.py"
      :pointmax 6633
      :fsize 6764
      :lastmodtime '(22667 24944 0 0)
      :unmatched-syntax '((INDENT_BLOCK 6353 . 6435) (NEWLINE 6352 . 6353) (COLON 6351 . 6352) (AS 6345 . 6347) (EXCEPT 6328 . 6334) (INDENT_BLOCK 6200 . 6324) (NEWLINE 6199 . 6200) (COLON 6198 . 6199) (TRY 5805 . 5808) (AS 6192 . 6194) (PERIOD 5780 . 5781) (FROM 5774 . 5778) (PERIOD 5779 . 5780) (INDENT_BLOCK 5530 . 5614) (NEWLINE 5529 . 5530) (COLON 5528 . 5529) (AS 5522 . 5524) (EXCEPT 5505 . 5511) (INDENT_BLOCK 5211 . 5501) (NEWLINE 5129 . 5130) (COLON 5128 . 5129) (TRY 3916 . 3919) (AS 5122 . 5124) (PERIOD 3818 . 3819) (FROM 3812 . 3816) (PERIOD 3817 . 3818) (PERIOD 225 . 226) (FROM 219 . 223) (PERIOD 224 . 225) (PERIOD 200 . 201) (FROM 194 . 198) (PERIOD 199 . 200)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
\"\"\"" code nil nil [39 46])
            ("functools" include nil nil [48 123])
            ("operator" include nil nil [48 123])
            ("copy" include nil nil [48 123])
            ("pprint" include nil nil [48 123])
            ("traceback" include nil nil [48 123])
            ("collections" include nil nil [48 123])
            ("types" include nil nil [48 123])
            ("re" include nil nil [48 123])
            ("logging" include nil nil [124 138])
            ("exceptions" include nil nil [196 220])
            ("basic" include nil nil [196 220])
            ("timer" include nil nil [238 250])
            ("amino_acid_mutation" include nil nil [258 284])
            ("Annotations" include nil nil [368 386])
            ("Reassortant" include nil nil [405 423])
            ("AminoAcidMutations" include nil nil [450 475])
            ("SerumSpecies" include nil nil [491 519])
            ("SerumId" include nil nil [491 519])
            ("lab_id" include nil nil [527 552])
            ("sNameMakerInfluenza" include nil nil [631 669])
            ("sNameMaker" include nil nil [631 669])
            ("Name" type
               (:superclasses ("basic.Uppercase")
                :members 
                  ( ("_name_sorting" code nil (reparse-symbol indented_block_body) [779 797]))                  
                :type "class")
                nil [745 798])
            ("Comment" type
               (:superclasses ("str")
                :members 
                  ( ("_name_sorting" code nil (reparse-symbol indented_block_body) [824 842]))                  
                :type "class")
                nil [799 843])
            ("IgnoredInDesignationMatching" type
               (:members 
                  ( ("_designation_matcher" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1001 1004])
                            ("a" variable nil (reparse-symbol function_parameters) [1006 1007])
                            ("b" variable nil (reparse-symbol function_parameters) [1009 1010])
                            ("flags" variable nil (reparse-symbol function_parameters) [1012 1019]))                          )
                        (reparse-symbol indented_block_body) [959 1097]))                  
                :type "class")
                nil [918 1097])
            ("Extra" type
               (:superclasses ("basic.UppercaseStripped")
                :members 
                  ( ("_name_sorting" variable nil (reparse-symbol indented_block_body) [1141 1160]))                  
                :type "class")
                nil [1098 1161])
            ("Date" type
               (:superclasses ("basic.Date" "IgnoredInDesignationMatching")
                :members 
                  ( ("_name_sorting" code nil (reparse-symbol indented_block_body) [1221 1239]))                  
                :type "class")
                nil [1162 1240])
            ("Reference" type
               (:superclasses ("basic.Bool" "IgnoredInDesignationMatching")
                :members 
                  ( ("_name_sorting" code nil (reparse-symbol indented_block_body) [1305 1323]))                  
                :type "class")
                nil [1241 1324])
            ("FewTiters" type
               (:superclasses ("basic.Bool" "IgnoredInDesignationMatching")
                :members 
                  ( ("_name_sorting" code nil (reparse-symbol indented_block_body) [1389 1407]))                  
                :type "class")
                nil [1325 1408])
            ("Hemisphering" type
               (:superclasses ("basic.Bool" "IgnoredInDesignationMatching")
                :members 
                  ( ("_name_sorting" code nil (reparse-symbol indented_block_body) [1476 1494]))                  
                :type "class")
                nil [1409 1495])
            ("StrIgnored" type
               (:superclasses ("str" "IgnoredInDesignationMatching")
                :members 
                  ( ("_name_sorting" code nil (reparse-symbol indented_block_body) [1554 1572]))                  
                :type "class")
                nil [1496 1573])
            ("IntIgnored" type
               (:superclasses ("int" "IgnoredInDesignationMatching")
                :members 
                  ( ("_name_sorting" code nil (reparse-symbol indented_block_body) [1632 1650]))                  
                :type "class")
                nil [1574 1651])
            ("Distinct" type
               (:superclasses ("basic.Bool")
                :members 
                  ( ("_name_sorting" variable nil (reparse-symbol indented_block_body) [1686 1705])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1723 1727]))                          )
                        (reparse-symbol indented_block_body) [1711 1774])
                    ("_designation_matcher" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1821 1824])
                            ("a" variable nil (reparse-symbol function_parameters) [1826 1827])
                            ("b" variable nil (reparse-symbol function_parameters) [1829 1830])
                            ("flags" variable nil (reparse-symbol function_parameters) [1832 1839]))                          )
                        (reparse-symbol indented_block_body) [1779 1940]))                  
                :type "class")
                nil [1652 1940])
            ("LabIdEntry" variable nil nil [2015 2047])
            ("LabId" type
               (:documentation "Map of lab name (uppercase) to lab id. If lab provides no id for this antigen/serum, None is used."
                :superclasses ("lab_id_m.LabId" "IgnoredInDesignationMatching")
                :members 
                  ( ("_name_sorting" variable nil (reparse-symbol indented_block_body) [2222 2241]))                  
                :type "class")
                nil [2048 2242])
            ("Location" type
               (:superclasses ("basic.Base")
                :members 
                  ( ("_name_sorting" code nil (reparse-symbol indented_block_body) [2351 2369])
                    ("name" variable nil (reparse-symbol indented_block_body) [2375 2405])
                    ("original" variable nil (reparse-symbol indented_block_body) [2410 2444])
                    ("country" variable nil (reparse-symbol indented_block_body) [2563 2588])
                    ("continent" variable nil (reparse-symbol indented_block_body) [2593 2620])
                    ("latitude" variable nil (reparse-symbol indented_block_body) [2625 2641])
                    ("longitude" variable nil (reparse-symbol indented_block_body) [2646 2663])
                    ("_designation_matcher" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2711 2714])
                            ("a" variable nil (reparse-symbol function_parameters) [2716 2717])
                            ("b" variable nil (reparse-symbol function_parameters) [2719 2720])
                            ("flags" variable nil (reparse-symbol function_parameters) [2722 2729]))                          )
                        (reparse-symbol indented_block_body) [2669 2769])
                    ("abbreviated" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2790 2794]))                          )
                        (reparse-symbol indented_block_body) [2774 3470])
                    ("get_cdc_abbreviation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3500 3504]))                          )
                        (reparse-symbol indented_block_body) [3475 3628])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3644 3648])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3650 3658]))                          )
                        (reparse-symbol indented_block_body) [3633 4378])
                    ("chinese_province" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4404 4408]))                          )
                        (reparse-symbol indented_block_body) [4383 4571]))                  
                :type "class")
                nil [2317 4571])
            ("AntigensSeraDuplicates" type
               (:superclasses ("exceptions.AutoRaise")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [4732 4750])
                            ("self" variable nil (reparse-symbol indented_block_body) [4759 4781])
                            ("self" variable nil (reparse-symbol indented_block_body) [4790 4808])
                            ("self" variable nil (reparse-symbol indented_block_body) [4817 4831]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4717 4721]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4704 4832])
                    ("add_antigens" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4854 4858])
                            ("duplicate_indices" variable nil (reparse-symbol function_parameters) [4860 4878]))                          )
                        (reparse-symbol indented_block_body) [4837 4935])
                    ("add_sera" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4953 4957])
                            ("duplicate_indices" variable nil (reparse-symbol function_parameters) [4959 4977]))                          )
                        (reparse-symbol indented_block_body) [4940 5030])
                    ("add" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5043 5047])
                            ("duplicates" variable nil (reparse-symbol function_parameters) [5049 5059]))                          )
                        (reparse-symbol indented_block_body) [5035 5154])
                    ("raise_me" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5172 5176]))                          )
                        (reparse-symbol indented_block_body) [5159 5233])
                    ("set_table_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5257 5261])
                            ("table_name" variable nil (reparse-symbol function_parameters) [5263 5273]))                          )
                        (reparse-symbol indented_block_body) [5238 5333])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5350 5354]))                          )
                        (reparse-symbol indented_block_body) [5338 5731]))                  
                :type "class")
                nil [4646 5731])
            ("AntigenSerum" type
               (:superclasses ("basic.Base")
                :members 
                  ( ("name" variable nil (reparse-symbol indented_block_body) [6624 6635])
                    ("mutations" variable nil (reparse-symbol indented_block_body) [6914 6964])
                    ("extra" variable nil (reparse-symbol indented_block_body) [6970 6983])
                    ("distinct" variable nil (reparse-symbol indented_block_body) [7080 7099])
                    ("lab_id" variable nil (reparse-symbol indented_block_body) [7257 7271])
                    ("comment" variable nil (reparse-symbol indented_block_body) [7495 7512])
                    ("N" variable nil (reparse-symbol indented_block_body) [7550 7564])
                    ("few_titers" variable nil (reparse-symbol indented_block_body) [7661 7683])
                    ("hemisphering" variable nil (reparse-symbol indented_block_body) [7753 7780])
                    ("sReYearFromName" variable nil (reparse-symbol indented_block_body) [7842 7898])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7916 7920]))                          )
                        (reparse-symbol indented_block_body) [7904 7955])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7974 7978])
                            ("name_type" variable nil (reparse-symbol function_parameters) [7980 7989])
                            ("mark_unrecognized" variable nil (reparse-symbol function_parameters) [7998 8015])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [8022 8030]))                          )
                        (reparse-symbol indented_block_body) [7960 8150])
                    ("name_maker" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8170 8174]))                          )
                        (reparse-symbol indented_block_body) [8155 8203])
                    ("match" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8218 8222])
                            ("other" variable nil (reparse-symbol function_parameters) [8224 8229])
                            ("report" variable nil (reparse-symbol function_parameters) [8231 8237])
                            ("args" variable nil (reparse-symbol function_parameters) [8244 8250]))                          
                        :documentation "Returns if self and other are matching antigens/sera, i.e. they could be merged.
        Returns 0 if not matched, otherwise returns matching level, the higher the better is match.
        report may be a dict, two fields of which are filled: level and mismatch with field name that failed matching
        ")
                        (reparse-symbol indented_block_body) [8208 9609])
                    ("_match_field" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9631 9635])
                            ("field" variable nil (reparse-symbol function_parameters) [9637 9642])
                            ("other" variable nil (reparse-symbol function_parameters) [9644 9649])
                            ("args" variable nil (reparse-symbol function_parameters) [9651 9657]))                          )
                        (reparse-symbol indented_block_body) [9614 10265])
                    ("ignore_in_merge" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10290 10294]))                          
                        :documentation "Returns if this antigen/serum must be avoided in merges.")
                        (reparse-symbol indented_block_body) [10270 10389])
                    ("isolation_year" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10413 10417]))                          
                        :documentation "Returns antigen/serum isolation year extracted from name
        (if virus naming convention supports it) or None (if no year
        is provided or supported).")
                        (reparse-symbol indented_block_body) [10394 10865])
                    ("set_raw_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10887 10891])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [10893 10901]))                          
                        :documentation "Resets all name related fields and sets name.")
                        (reparse-symbol indented_block_body) [10870 11132])
                    ("has_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11150 11154]))                          )
                        (reparse-symbol indented_block_body) [11137 11188])
                    ("conformance_level" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11215 11219])
                            ("conformance_data" variable nil (reparse-symbol function_parameters) [11221 11237])
                            ("index" variable nil (reparse-symbol function_parameters) [11239 11244]))                          )
                        (reparse-symbol indented_block_body) [11193 11413])
                    ("passage_match_unknown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11444 11448])
                            ("other" variable nil (reparse-symbol function_parameters) [11450 11455]))                          )
                        (reparse-symbol indented_block_body) [11418 11479])
                    ("is_lab" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11495 11499])
                            ("lab" variable nil (reparse-symbol function_parameters) [11501 11504]))                          )
                        (reparse-symbol indented_block_body) [11484 11610]))                  
                :type "class")
                nil [5806 11610])
            ("Antigen" type
               (:superclasses ("AntigenSerum")
                :members 
                  ( ("date" variable nil (reparse-symbol indented_block_body) [11720 11731])
                    ("reference" variable nil (reparse-symbol indented_block_body) [11786 11807])
                    ("season" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11878 11882])
                            ("force_sh_for_no_date" variable nil (reparse-symbol function_parameters) [11884 11904]))                          
                        :documentation "Returns season (a string, 'year-0' or 'year-1') determined
        by the antigen isolation date. '2007-1' means NH winter
        2007-2008, '2007-0' means SH winter 2007. If antigen has no
        isolation date and force_sh_for_no_date, put antigen in SH
        season for the year of antigen, otherwise retruin None.")
                        (reparse-symbol indented_block_body) [11867 12705])
                    ("sorted_by_date_key" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12733 12737]))                          
                        :documentation "Returns negative number of days since anno domini (to allow
        having most recent dates first when sorting). If antigen has
        no date, returns positive number.")
                        (reparse-symbol indented_block_body) [12710 12988])
                    ("type_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13007 13011])
                            ("short" variable nil (reparse-symbol function_parameters) [13013 13018]))                          )
                        (reparse-symbol indented_block_body) [12993 13071])
                    ("passage_match_unknown" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13102 13106])
                            ("other" variable nil (reparse-symbol function_parameters) [13108 13113]))                          )
                        (reparse-symbol indented_block_body) [13076 13336])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13377 13381]))                          )
                        (reparse-symbol indented_block_body) [13360 13572])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13613 13617])
                            ("state" variable nil (reparse-symbol function_parameters) [13619 13624]))                          )
                        (reparse-symbol indented_block_body) [13596 13784]))                  
                :type "class")
                nil [11685 13784])
            ("Serum" type
               (:superclasses ("AntigenSerum")
                :members 
                  ( ("homologous_antigen" variable nil (reparse-symbol indented_block_body) [13925 13956])
                    ("homologous_titer" variable nil (reparse-symbol indented_block_body) [13961 13990])
                    ("maximal_titer" variable nil (reparse-symbol indented_block_body) [13995 14021])
                    ("type_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14041 14045])
                            ("short" variable nil (reparse-symbol function_parameters) [14047 14052]))                          )
                        (reparse-symbol indented_block_body) [14027 14103])
                    ("calculate_homologous_titer" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14139 14143])
                            ("chart" variable nil (reparse-symbol function_parameters) [14145 14150])
                            ("serum_no" variable nil (reparse-symbol function_parameters) [14152 14160])
                            ("report_problems" variable nil (reparse-symbol function_parameters) [14162 14177]))                          )
                        (reparse-symbol indented_block_body) [14108 14576]))                  
                :type "class")
                nil [13859 14576])
            ("AntigensSeraSelector" type
               (:superclasses ("basic.Base")
                :members 
                  ( ("text" variable nil (reparse-symbol indented_block_body) [14813 14826])
                    ("index" variable nil (reparse-symbol indented_block_body) [14831 14842])
                    ("words" variable nil (reparse-symbol indented_block_body) [14847 14859]))                  
                :type "class")
                nil [14767 14860])
            ("MatchReport" type
               (:members 
                  ( ("ReportUpdater" type
                       (:members 
                          ( ("__init__" function
                               (:suite 
                                  ( ("self" variable nil (reparse-symbol indented_block_body) [15041 15063])
                                    ("self" variable nil (reparse-symbol indented_block_body) [15076 15102])
                                    ("self" variable nil (reparse-symbol indented_block_body) [15115 15134]))                                  
                                :parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15002 15006])
                                    ("primary" variable nil (reparse-symbol function_parameters) [15008 15015])
                                    ("secondary" variable nil (reparse-symbol function_parameters) [15017 15026]))                                  
                                :constructor-flag t)
                                (reparse-symbol indented_block_body) [14989 15135])
                            ("matches" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15156 15160])
                                    ("level" variable nil (reparse-symbol function_parameters) [15162 15167]))                                  )
                                (reparse-symbol indented_block_body) [15144 15262])
                            ("mismatches" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15286 15290])
                                    ("field" variable nil (reparse-symbol function_parameters) [15292 15297]))                                  )
                                (reparse-symbol indented_block_body) [15271 15362])
                            ("__repr__" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15384 15388]))                                  )
                                (reparse-symbol indented_block_body) [15371 15429]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [14959 15429])
                    ("Report" type
                       (:members 
                          ( ("__init__" function
                               (:suite 
                                  ( ("self" variable nil (reparse-symbol indented_block_body) [15489 15505]))                                  
                                :parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15470 15474]))                                  
                                :constructor-flag t)
                                (reparse-symbol indented_block_body) [15457 15562])
                            ("add" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15579 15583])
                                    ("updater" variable nil (reparse-symbol function_parameters) [15585 15592]))                                  )
                                (reparse-symbol indented_block_body) [15571 15665])
                            ("matches" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15686 15690]))                                  )
                                (reparse-symbol indented_block_body) [15674 15733])
                            ("best" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15751 15755]))                                  )
                                (reparse-symbol indented_block_body) [15742 15810])
                            ("best_list" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15833 15837]))                                  )
                                (reparse-symbol indented_block_body) [15819 15889])
                            ("sorted_by_secondary" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [15922 15926])
                                    ("level" variable nil (reparse-symbol function_parameters) [15928 15933]))                                  )
                                (reparse-symbol indented_block_body) [15898 16011])
                            ("__repr__" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [16033 16037]))                                  )
                                (reparse-symbol indented_block_body) [16020 16077]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [15434 16077])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [16168 16186])
                            ("self" variable nil (reparse-symbol indented_block_body) [16195 16211])
                            ("self" variable nil (reparse-symbol indented_block_body) [16272 16288])
                            ("self" variable nil (reparse-symbol indented_block_body) [16349 16373]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16153 16157]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [16140 16426])
                    ("number_of_matches" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16453 16457]))                          )
                        (reparse-symbol indented_block_body) [16431 16579])
                    ("number_of_mismatches" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16609 16613]))                          )
                        (reparse-symbol indented_block_body) [16584 16655])
                    ("make_updater" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16677 16681])
                            ("primary" variable nil (reparse-symbol function_parameters) [16683 16690])
                            ("secondary" variable nil (reparse-symbol function_parameters) [16692 16701]))                          )
                        (reparse-symbol indented_block_body) [16660 16840])
                    ("updating_complete" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16867 16871]))                          )
                        (reparse-symbol indented_block_body) [16845 17004])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17022 17026]))                          )
                        (reparse-symbol indented_block_body) [17009 17062])
                    ("has_mismatches" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17086 17090]))                          
                        :documentation "Returns if there are mismatches.")
                        (reparse-symbol indented_block_body) [17067 17187])
                    ("report_common" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17210 17214])
                            ("primary" variable nil (reparse-symbol function_parameters) [17216 17223])
                            ("secondary" variable nil (reparse-symbol function_parameters) [17225 17234])
                            ("indent" variable nil (reparse-symbol function_parameters) [17236 17242])
                            ("name_type" variable nil (reparse-symbol function_parameters) [17247 17256]))                          )
                        (reparse-symbol indented_block_body) [17192 17544])
                    ("report_mismatches" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17571 17575])
                            ("primary" variable nil (reparse-symbol function_parameters) [17577 17584])
                            ("secondary" variable nil (reparse-symbol function_parameters) [17586 17595])
                            ("indent" variable nil (reparse-symbol function_parameters) [17597 17603])
                            ("name_type" variable nil (reparse-symbol function_parameters) [17608 17617])
                            ("prefix" variable nil (reparse-symbol function_parameters) [17638 17644]))                          )
                        (reparse-symbol indented_block_body) [17549 18102])
                    ("matched_names" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18125 18129])
                            ("primary" variable nil (reparse-symbol function_parameters) [18131 18138])
                            ("secondary" variable nil (reparse-symbol function_parameters) [18140 18149])
                            ("name_type" variable nil (reparse-symbol function_parameters) [18151 18160]))                          
                        :documentation "Returns list of tuples with names of matched entries.")
                        (reparse-symbol indented_block_body) [18107 18376])
                    ("mismatched_names" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18402 18406])
                            ("primary" variable nil (reparse-symbol function_parameters) [18408 18415])
                            ("secondary" variable nil (reparse-symbol function_parameters) [18417 18426])
                            ("name_type" variable nil (reparse-symbol function_parameters) [18428 18437]))                          
                        :documentation "Returns list of tuples with names of matched entries and field that failed matching.")
                        (reparse-symbol indented_block_body) [18381 18687])
                    ("set_common" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18707 18711])
                            ("common" variable nil (reparse-symbol function_parameters) [18713 18719]))                          )
                        (reparse-symbol indented_block_body) [18692 19005])
                    ("_matched" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19270 19274])
                            ("primary" variable nil (reparse-symbol function_parameters) [19276 19283])
                            ("secondary" variable nil (reparse-symbol function_parameters) [19285 19294])
                            ("name_type" variable nil (reparse-symbol function_parameters) [19296 19305]))                          )
                        (reparse-symbol indented_block_body) [19257 19769])
                    ("_mismatched" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20331 20335])
                            ("primary" variable nil (reparse-symbol function_parameters) [20337 20344])
                            ("secondary" variable nil (reparse-symbol function_parameters) [20346 20355])
                            ("name_type" variable nil (reparse-symbol function_parameters) [20357 20366]))                          )
                        (reparse-symbol indented_block_body) [20315 20871])
                    ("_mismatches" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [20892 20896]))                          )
                        (reparse-symbol indented_block_body) [20876 21067]))                  
                :type "class")
                nil [14935 21067])
            ("AntigensSeraNotFound" type
               (:superclasses ("RuntimeError")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [21189 21193]))                  
                :type "class")
                nil [21142 21194])
            ("NameMatcher" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [21336 21370])
                            ("self" variable nil (reparse-symbol indented_block_body) [21379 21404])
                            ("self" code nil (reparse-symbol indented_block_body) [21413 21430]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21306 21310])
                            ("antigens_sera" variable nil (reparse-symbol function_parameters) [21312 21325]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [21293 21431])
                    ("make_index" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21451 21455]))                          )
                        (reparse-symbol indented_block_body) [21436 21989])
                    ("find_using_index" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22170 22174])
                            ("name" variable nil (reparse-symbol function_parameters) [22176 22180]))                          )
                        (reparse-symbol indented_block_body) [22149 22927])
                    ("sSubnameKeywords" variable nil (reparse-symbol indented_block_body) [22932 23030])
                    ("find_words_using_index" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23063 23067])
                            ("name" variable nil (reparse-symbol function_parameters) [23069 23073]))                          )
                        (reparse-symbol indented_block_body) [23036 24481])
                    ("find" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24495 24499])
                            ("name" variable nil (reparse-symbol function_parameters) [24501 24505])
                            ("words" variable nil (reparse-symbol function_parameters) [24507 24512]))                          )
                        (reparse-symbol indented_block_body) [24486 24900])
                    ("preprocess_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24925 24929])
                            ("name" variable nil (reparse-symbol function_parameters) [24931 24935]))                          )
                        (reparse-symbol indented_block_body) [24905 24966])
                    ("match" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24981 24985])
                            ("name_or_antigen_serum" variable nil (reparse-symbol function_parameters) [24987 25008])
                            ("other_index" variable nil (reparse-symbol function_parameters) [25010 25021])
                            ("report" variable nil (reparse-symbol function_parameters) [25028 25034])
                            ("index" variable nil (reparse-symbol function_parameters) [25041 25046])
                            ("words" variable nil (reparse-symbol function_parameters) [25053 25058])
                            ("raise_if_not_found" variable nil (reparse-symbol function_parameters) [25065 25083])
                            ("options" variable nil (reparse-symbol function_parameters) [25091 25100]))                          
                        :documentation "See AntigensSera.find for doc.")
                        (reparse-symbol indented_block_body) [24971 28036]))                  
                :type "class")
                nil [21269 28036])
            ("AntigensSera" type
               (:documentation "Base class for antigens and sera ordered lists"
                :superclasses ("list")
                :members 
                  ( ("clone" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28210 28214]))                          )
                        (reparse-symbol indented_block_body) [28200 28272])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28289 28293]))                          )
                        (reparse-symbol indented_block_body) [28277 28373])
                    ("find" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28387 28391])
                            ("name_or_antigen_serum" variable nil (reparse-symbol function_parameters) [28393 28414])
                            ("index" variable nil (reparse-symbol function_parameters) [28416 28421])
                            ("words" variable nil (reparse-symbol function_parameters) [28428 28433])
                            ("raise_if_not_found" variable nil (reparse-symbol function_parameters) [28440 28458])
                            ("options" variable nil (reparse-symbol function_parameters) [28466 28475]))                          
                        :documentation "Returns set of indices of antigens/sera matched by name.
        Returns empty set if nothing found.
        The following applies only if name_or_antigen_serum is str:
        If index is not None (int), returns single antigen/serum index
        (not set), if index=0, returns the first element of the sorted
        list, if index=-1, returns the last element.
        If words is None, first search with words=False and if nothing
        found, search with words=True.
        ")
                        (reparse-symbol indented_block_body) [28378 29211])
                    ("name_matcher" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29233 29237]))                          )
                        (reparse-symbol indented_block_body) [29216 29378])
                    ("find_by_labid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29401 29405])
                            ("lab_id" variable nil (reparse-symbol function_parameters) [29407 29413]))                          
                        :documentation "Returns set of indices of antigens/sera having this
        lab_id. lab_id must be instance of lab_id_m.LabIdEntry.")
                        (reparse-symbol indented_block_body) [29383 29791])
                    ("common" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [29807 29811])
                            ("other" variable nil (reparse-symbol function_parameters) [29813 29818])
                            ("report" variable nil (reparse-symbol function_parameters) [29820 29826])
                            ("options" variable nil (reparse-symbol function_parameters) [29833 29842]))                          
                        :documentation "Returns dict of antigens/sera indices in this set to the
        corresponding antigens/sera indices in other set. Derived
        classes check the type of other. If mutiple matches in either
        self or other found, best match is chosen.
        report must be an instance of MatchReport.
        options:
        - passage (default: 'strict' for antigens, depends on serum_id for sera)
        - serum_id (default: 'strict' for sera, 'none' for antigens)
        - serum_species (default: 'strict' for sera, 'none' for antigens)
        ")
                        (reparse-symbol indented_block_body) [29796 33301])
                    ("check_for_duplicates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33331 33335])
                            ("options" variable nil (reparse-symbol function_parameters) [33337 33346]))                          
                        :documentation "Checks for duplicates within antigens/sera set, i.e. finds
        if there are two antigens/sera matching. Raises
        AntigensSeraDuplicates if found. If options['find_all'], finds
        all duplicates before rasing. If options['find_control_duplicates'] sets control_duplicate flag for antigen, if necessary.")
                        (reparse-symbol indented_block_body) [33306 35314])
                    ("mark_control_duplicate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35346 35350])
                            ("a_i" variable nil (reparse-symbol function_parameters) [35352 35355])
                            ("b_i" variable nil (reparse-symbol function_parameters) [35357 35360])
                            ("table_name" variable nil (reparse-symbol function_parameters) [35362 35372]))                          )
                        (reparse-symbol indented_block_body) [35319 35441])
                    ("is_antigens" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35462 35466]))                          
                        :documentation "Returns if this list contains antigens.")
                        (reparse-symbol indented_block_body) [35446 35559])
                    ("remove_by_indices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35586 35590])
                            ("indices" variable nil (reparse-symbol function_parameters) [35592 35599]))                          
                        :documentation "Removes entries by indices. Indices must be in ascending
        order (not checked).")
                        (reparse-symbol indented_block_body) [35564 35762])
                    ("ignored_in_merge_indices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35796 35800]))                          
                        :documentation "Returns generator of indices of antigens/sera which must be ignored for merge.")
                        (reparse-symbol indented_block_body) [35767 35974])
                    ("having_few_titers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36001 36005]))                          
                        :documentation "Returns generator listing antigens/sera having few_titers flag set.")
                        (reparse-symbol indented_block_body) [35979 36161])
                    ("have_mutations" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36185 36189]))                          
                        :documentation "Returns if any of antigens/sera have mutations data.")
                        (reparse-symbol indented_block_body) [36166 36319])
                    ("reset_few_titers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36345 36349]))                          
                        :documentation "Resets few_titers flags")
                        (reparse-symbol indented_block_body) [36324 36453])
                    ("having_hemisphering" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36482 36486]))                          
                        :documentation "Returns generator listing antigens/sera having hemisphering flag set.")
                        (reparse-symbol indented_block_body) [36458 36646])
                    ("reset_hemisphering" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36674 36678]))                          
                        :documentation "Resets hemisphering flags")
                        (reparse-symbol indented_block_body) [36651 36786])
                    ("elicit_indices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36810 36814])
                            ("data_list" variable nil (reparse-symbol function_parameters) [36816 36825])
                            ("ignore_errors" variable nil (reparse-symbol function_parameters) [36827 36840])
                            ("return_not_found" variable nil (reparse-symbol function_parameters) [36848 36864])
                            ("verbose" variable nil (reparse-symbol function_parameters) [36872 36879]))                          
                        :documentation "Accepts either list (could mix indices and names) or
        callable returning if antigen/serum is good for list (by
        antigen/serum passed), returns list of indices. For each name
        in data_list index is substituted, for each index in data_list
        it is checked and substituted. If data_list is 'none' or None,
        returns empty list, if data_list is 'all' returns list of all
        indices.  If return_not_found is True returns tuple of two
        elements: found indices list and not found names list.")
                        (reparse-symbol indented_block_body) [36791 39298])
                    ("__ne__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39314 39318])
                            ("other" variable nil (reparse-symbol function_parameters) [39320 39325]))                          )
                        (reparse-symbol indented_block_body) [39303 39366])
                    ("conformance_level" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39393 39397])
                            ("conformance_data" variable nil (reparse-symbol function_parameters) [39399 39415]))                          )
                        (reparse-symbol indented_block_body) [39371 39547])
                    ("not_found" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39566 39570])
                            ("other" variable nil (reparse-symbol function_parameters) [39572 39577])
                            ("ignore_reference" variable nil (reparse-symbol function_parameters) [39579 39595])
                            ("passage" variable nil (reparse-symbol function_parameters) [39602 39609])
                            ("serum_id" variable nil (reparse-symbol function_parameters) [39620 39628]))                          
                        :documentation "Returns set of antigens/sera indices in this set not found in other set.")
                        (reparse-symbol indented_block_body) [39552 40052]))                  
                :type "class")
                nil [28111 40052])
            ("Antigens" type
               (:documentation "Ordered set of antigens objects"
                :superclasses ("AntigensSera")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [40244 40471]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40218 40222])
                            ("data" variable nil (reparse-symbol function_parameters) [40224 40228]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [40205 40471])
                    ("is_antigens" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40492 40496]))                          
                        :documentation "Returns if this list contains antigens.")
                        (reparse-symbol indented_block_body) [40476 40573])
                    ("reference" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40592 40596]))                          
                        :documentation "Returns generator of reference antigens.")
                        (reparse-symbol indented_block_body) [40578 40720])
                    ("reference_indices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40747 40751]))                          
                        :documentation "Returns generator of reference antigens indices.")
                        (reparse-symbol indented_block_body) [40725 40899])
                    ("non_reference" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40922 40926]))                          
                        :documentation "Returns generator of non-reference antigens.")
                        (reparse-symbol indented_block_body) [40904 41058])
                    ("non_reference_indices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41089 41093]))                          
                        :documentation "Returns generator of non-reference antigens indices.")
                        (reparse-symbol indented_block_body) [41063 41249])
                    ("test_indices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41271 41275]))                          
                        :documentation "Returns generator of non-reference antigens indices.")
                        (reparse-symbol indented_block_body) [41254 41389])
                    ("number_of_reference" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41418 41422]))                          
                        :documentation "Returns number of reference antigens")
                        (reparse-symbol indented_block_body) [41394 41524])
                    ("number_of_non_reference" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41557 41561]))                          
                        :documentation "Returns number of reference antigens")
                        (reparse-symbol indented_block_body) [41529 41667])
                    ("select_by_date_range" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41697 41701])
                            ("start_date" variable nil (reparse-symbol function_parameters) [41703 41713])
                            ("end_date" variable nil (reparse-symbol function_parameters) [41715 41723])
                            ("include_reference" variable nil (reparse-symbol function_parameters) [41730 41747]))                          
                        :documentation "Returns generator of antigens indices having date within
        the specified range, start_date inclusive, end_date
        exclusive. If either start_date or end_date is None, selection
        is not bound by that date.")
                        (reparse-symbol indented_block_body) [41672 42337])
                    ("select_no_date" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42361 42365])
                            ("include_reference" variable nil (reparse-symbol function_parameters) [42367 42384]))                          
                        :documentation "Returns generator of antigens indices having no date.")
                        (reparse-symbol indented_block_body) [42342 42572])
                    ("sorted_by_date" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42596 42600])
                            ("non_reference_only" variable nil (reparse-symbol function_parameters) [42602 42620]))                          
                        :documentation "Returns list of antigens (all or just non-reference) sorted
        by antigen isolation date, most recent antigens first,
        antigens without isolation dates last.")
                        (reparse-symbol indented_block_body) [42577 42921])
                    ("have_dates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42941 42945]))                          
                        :documentation "Returns if any of antigens have isolation date.")
                        (reparse-symbol indented_block_body) [42926 43069])
                    ("have_years" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43089 43093]))                          
                        :documentation "Returns if any of antigens have year.")
                        (reparse-symbol indented_block_body) [43074 43219])
                    ("years" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43234 43238])
                            ("omit_none" variable nil (reparse-symbol function_parameters) [43240 43249]))                          
                        :documentation "Returns mapping from years (str of 4 digits) to the list of antigen indices")
                        (reparse-symbol indented_block_body) [43224 43619])
                    ("all_have_passages" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43646 43650]))                          )
                        (reparse-symbol indented_block_body) [43624 43733])
                    ("none_have_passages" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43761 43765]))                          )
                        (reparse-symbol indented_block_body) [43738 43854])
                    ("conformance_level" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43881 43885])
                            ("conformance_data" variable nil (reparse-symbol function_parameters) [43887 43903]))                          )
                        (reparse-symbol indented_block_body) [43859 44148])
                    ("find_homologous" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44173 44177])
                            ("serum" variable nil (reparse-symbol function_parameters) [44179 44184])
                            ("serum_no" variable nil (reparse-symbol function_parameters) [44186 44194])
                            ("chart" variable nil (reparse-symbol function_parameters) [44196 44201])
                            ("report_problems" variable nil (reparse-symbol function_parameters) [44203 44218]))                          
                        :documentation "Returns index of the homologous antigen or None")
                        (reparse-symbol indented_block_body) [44153 46788]))                  
                :type "class")
                nil [40127 46788])
            ("Sera" type
               (:documentation "Ordered set of sera objects"
                :superclasses ("AntigensSera")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [46972 47197]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46946 46950])
                            ("data" variable nil (reparse-symbol function_parameters) [46952 46956]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [46933 47197])
                    ("is_antigens" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47218 47222]))                          
                        :documentation "Returns if this list contains antigens.")
                        (reparse-symbol indented_block_body) [47202 47300])
                    ("calculate_homologous_and_maximal_titers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47349 47353])
                            ("chart" variable nil (reparse-symbol function_parameters) [47355 47360])
                            ("report_problems" variable nil (reparse-symbol function_parameters) [47362 47377]))                          )
                        (reparse-symbol indented_block_body) [47305 47820]))                  
                :type "class")
                nil [46863 47820]))          
      :file "antigens_sera.py"
      :pointmax 47987
      :fsize 47986
      :lastmodtime '(22701 47888 0 0)
      :unmatched-syntax '((RETURN 46753 . 46759) (IF 46773 . 46775) (ELSE 46778 . 46782) (NAME 44695 . 44703) (IF 44720 . 44722) (ELSE 44745 . 44749) (NAME 44344 . 44351) (IF 44363 . 44365) (ELSE 44386 . 44390) (NAME 33765 . 33770) (IF 33790 . 33792) (ELSE 33812 . 33816) (NAME 30785 . 30790) (IF 30803 . 30805) (ELSE 30825 . 30829) (RETURN 14069 . 14075) (IF 14081 . 14083) (ELSE 14090 . 14094) (RETURN 13035 . 13041) (IF 13047 . 13049) (ELSE 13056 . 13060) (RETURN 12933 . 12939) (IF 12968 . 12970) (ELSE 12981 . 12985) (PERIOD 3521 . 3522) (FROM 3515 . 3519) (PERIOD 3520 . 3521) (PERIOD 2870 . 2871) (FROM 2864 . 2868) (PERIOD 2869 . 2870) (RETURN 1738 . 1744) (IF 1756 . 1758) (ELSE 1764 . 1768) (FROM 614 . 618) (PERIOD 619 . 620) (FROM 520 . 524) (PERIOD 525 . 526) (FROM 476 . 480) (PERIOD 481 . 482) (FROM 424 . 428) (PERIOD 429 . 430) (FROM 387 . 391) (PERIOD 392 . 393) (FROM 350 . 354) (PERIOD 355 . 356) (FROM 251 . 255) (PERIOD 256 . 257) (PERIOD 227 . 228) (FROM 221 . 225) (PERIOD 226 . 227) (PERIOD 190 . 191) (FROM 184 . 188) (PERIOD 189 . 190)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"
\"\"\"" code nil nil [39 46])
            ("collections" include nil nil [48 70])
            ("re" include nil nil [48 70])
            ("logging" include nil nil [71 85])
            ("LabIdEntry" type
               (:documentation "lab_id entry has lab name (uppercase) and id for that
    lab. Different antigens expected to have different lab_id (but
    there are lab's mistakes)."
                :members 
                  ( ("__slots__" variable nil (reparse-symbol indented_block_body) [440 454])
                    ("__new__" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [791 794])
                        ("kwargs" variable nil (reparse-symbol function_parameters) [796 804]))                      ) (reparse-symbol indented_block_body) [779 1096])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1113 1117]))                          )
                        (reparse-symbol indented_block_body) [1101 1150]))                  
                :type "class")
                nil [206 1150])
            ("LabId" type
               (:documentation "Set of LabIdEntry."
                :superclasses ("set")
                :members 
                  ( ("sReCdcId" variable nil (reparse-symbol indented_block_body) [1278 1314])
                    ("sReCnicId" variable nil (reparse-symbol indented_block_body) [1319 1366])
                    ("sReMelbId" variable nil (reparse-symbol indented_block_body) [1371 1408])
                    ("sReNiidId" variable nil (reparse-symbol indented_block_body) [1413 1461])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1479 1483]))                          )
                        (reparse-symbol indented_block_body) [1467 1540])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1556 1560])
                            ("other" variable nil (reparse-symbol function_parameters) [1562 1567]))                          )
                        (reparse-symbol indented_block_body) [1545 1853])
                    ("elicit" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1886 1889])
                            ("data" variable nil (reparse-symbol function_parameters) [1891 1895])
                            ("lab" variable nil (reparse-symbol function_parameters) [1897 1900]))                          )
                        (reparse-symbol indented_block_body) [1858 2608])
                    ("elicit_fast" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2646 2649])
                            ("data" variable nil (reparse-symbol function_parameters) [2651 2655]))                          )
                        (reparse-symbol indented_block_body) [2613 2734])
                    ("match" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2749 2753])
                            ("lab_id_entry" variable nil (reparse-symbol function_parameters) [2755 2767]))                          )
                        (reparse-symbol indented_block_body) [2739 2971])
                    ("find" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2985 2989])
                            ("lab" variable nil (reparse-symbol function_parameters) [2991 2994]))                          )
                        (reparse-symbol indented_block_body) [2976 3136])
                    ("to_basic_types" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3160 3164]))                          
                        :documentation "Returns value of self converted to built-in types to store in acd1 or mongodb.")
                        (reparse-symbol indented_block_body) [3141 3303])
                    ("join" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3317 3321])
                            ("separator" variable nil (reparse-symbol function_parameters) [3323 3332]))                          
                        :documentation "Returns string containing all ids joined by separator.")
                        (reparse-symbol indented_block_body) [3308 3466])
                    ("mongodb_to_db" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3489 3493]))                          )
                        (reparse-symbol indented_block_body) [3471 3533])
                    ("mongodb_from_db" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3575 3578])
                            ("data" variable nil (reparse-symbol function_parameters) [3580 3584]))                          )
                        (reparse-symbol indented_block_body) [3538 3856])
                    ("validate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3874 3878]))                          
                        :documentation "Returns None if validated, otherwise returns error message.")
                        (reparse-symbol indented_block_body) [3861 4305])
                    ("_validate_CDC" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4328 4332])
                            ("entry" variable nil (reparse-symbol function_parameters) [4334 4339])
                            ("err" variable nil (reparse-symbol function_parameters) [4341 4344]))                          )
                        (reparse-symbol indented_block_body) [4310 4455])
                    ("_validate_CNIC" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4479 4483])
                            ("entry" variable nil (reparse-symbol function_parameters) [4485 4490])
                            ("err" variable nil (reparse-symbol function_parameters) [4492 4495]))                          )
                        (reparse-symbol indented_block_body) [4460 4608])
                    ("_validate_MELB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4632 4636])
                            ("entry" variable nil (reparse-symbol function_parameters) [4638 4643])
                            ("err" variable nil (reparse-symbol function_parameters) [4645 4648]))                          )
                        (reparse-symbol indented_block_body) [4613 4761])
                    ("_validate_NIID" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4785 4789])
                            ("entry" variable nil (reparse-symbol function_parameters) [4791 4796])
                            ("err" variable nil (reparse-symbol function_parameters) [4798 4801]))                          )
                        (reparse-symbol indented_block_body) [4766 4986]))                  
                :type "class")
                nil [1225 4986]))          
      :file "lab_id.py"
      :pointmax 5153
      :fsize 5786
      :lastmodtime '(22655 31758 0 0)
      :unmatched-syntax '((NAME 224 . 235) (PAREN_BLOCK 246 . 270)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("pprint" include nil nil [113 154])
            ("glob" include nil nil [113 154])
            ("collections" include nil nil [113 154])
            ("os" include nil nil [113 154])
            ("sys" include nil nil [113 154])
            ("logging" include nil nil [155 169])
            ("parsers" include nil nil [227 241])
            ("open_file" include nil nil [259 275])
            ("VirusesAPI" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [448 524])
                            ("self" variable nil (reparse-symbol indented_block_body) [533 602]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [387 391])
                            ("virus" variable nil (reparse-symbol function_parameters) [393 398])
                            ("lab" variable nil (reparse-symbol function_parameters) [412 415])
                            ("virus_type" variable nil (reparse-symbol function_parameters) [422 432]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [374 603])
                    ("normalize_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [627 631])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [633 641])
                            ("lab" variable nil (reparse-symbol function_parameters) [643 646])
                            ("virus_type" variable nil (reparse-symbol function_parameters) [653 663])
                            ("name_type" variable nil (reparse-symbol function_parameters) [670 679])
                            ("return_report" variable nil (reparse-symbol function_parameters) [698 711]))                          )
                        (reparse-symbol indented_block_body) [608 877])
                    ("normalize_name_and_split" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [911 915])
                            ("raw_name" variable nil (reparse-symbol function_parameters) [917 925])
                            ("lab" variable nil (reparse-symbol function_parameters) [927 930])
                            ("virus_type" variable nil (reparse-symbol function_parameters) [937 947]))                          )
                        (reparse-symbol indented_block_body) [882 1082])
                    ("find_by_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1104 1108])
                            ("name" variable nil (reparse-symbol function_parameters) [1110 1114])
                            ("lab" variable nil (reparse-symbol function_parameters) [1116 1119])
                            ("virus_type" variable nil (reparse-symbol function_parameters) [1126 1136]))                          
                        :documentation "name must be normalized with normalize_name()")
                        (reparse-symbol indented_block_body) [1087 1732])
                    ("Validator" type
                       (:members 
                          ( ("__init__" function
                               (:suite 
                                  ( ("factory" include nil (reparse-symbol indented_block_body) [1930 1944])
                                    ("acd1" include nil (reparse-symbol indented_block_body) [1973 1996])
                                    ("validation" include nil (reparse-symbol indented_block_body) [1973 1996])
                                    ("self" variable nil (reparse-symbol indented_block_body) [2009 2044])
                                    ("self" variable nil (reparse-symbol indented_block_body) [2057 2071])
                                    ("self" variable nil (reparse-symbol indented_block_body) [2084 2112])
                                    ("self" variable nil (reparse-symbol indented_block_body) [2125 2198])
                                    ("self" code nil (reparse-symbol indented_block_body) [2211 2331])
                                    ("self" variable nil (reparse-symbol indented_block_body) [2344 2529]))                                  
                                :parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [1858 1862])
                                    ("virus" variable nil (reparse-symbol function_parameters) [1864 1869])
                                    ("lab" variable nil (reparse-symbol function_parameters) [1883 1886])
                                    ("virus_type" variable nil (reparse-symbol function_parameters) [1893 1903]))                                  
                                :constructor-flag t)
                                (reparse-symbol indented_block_body) [1845 2586])
                            ("update" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [2606 2610])
                                    ("lab" variable nil (reparse-symbol function_parameters) [2612 2615])
                                    ("virus_type" variable nil (reparse-symbol function_parameters) [2617 2627]))                                  )
                                (reparse-symbol indented_block_body) [2595 3122])
                            ("normalize_name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [3150 3154])
                                    ("raw_name" variable nil (reparse-symbol function_parameters) [3156 3164])
                                    ("name_type" variable nil (reparse-symbol function_parameters) [3166 3175])
                                    ("return_report" variable nil (reparse-symbol function_parameters) [3177 3190]))                                  )
                                (reparse-symbol indented_block_body) [3131 3664])
                            ("normalize_name_and_split" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [3702 3706])
                                    ("raw_name" variable nil (reparse-symbol function_parameters) [3708 3716]))                                  )
                                (reparse-symbol indented_block_body) [3673 4305])
                            ("_make_antigen" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [4332 4336])
                                    ("raw_name" variable nil (reparse-symbol function_parameters) [4338 4346]))                                  )
                                (reparse-symbol indented_block_body) [4314 4585]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [1819 4585])
                    ("VirusDatabase" type
                       (:members 
                          ( ("__init__" function
                               (:suite 
                                  ( ("self" variable nil (reparse-symbol indented_block_body) [4744 4768])
                                    ("self" variable nil (reparse-symbol indented_block_body) [4781 4827]))                                  
                                :parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [4715 4719])
                                    ("name_dir" variable nil (reparse-symbol function_parameters) [4721 4729]))                                  
                                :constructor-flag t)
                                (reparse-symbol indented_block_body) [4702 4920])
                            ("find_by_name" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [4946 4950])
                                    ("name" variable nil (reparse-symbol function_parameters) [4952 4956])
                                    ("lab" variable nil (reparse-symbol function_parameters) [4958 4961])
                                    ("virus_type" variable nil (reparse-symbol function_parameters) [4963 4973]))                                  
                                :documentation "name must be normalized before via Validator")
                                (reparse-symbol indented_block_body) [4929 5248])
                            ("load" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [5266 5270])
                                    ("lab" variable nil (reparse-symbol function_parameters) [5272 5275])
                                    ("virus_type" variable nil (reparse-symbol function_parameters) [5277 5287]))                                  )
                                (reparse-symbol indented_block_body) [5257 5416])
                            ("load_for" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [5438 5442])
                                    ("lab" variable nil (reparse-symbol function_parameters) [5444 5447])
                                    ("virus_type" variable nil (reparse-symbol function_parameters) [5449 5459]))                                  )
                                (reparse-symbol indented_block_body) [5425 5840])
                            ("normalize_passages" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [5872 5876])
                                    ("data" variable nil (reparse-symbol function_parameters) [5878 5882])
                                    ("lab" variable nil (reparse-symbol function_parameters) [5884 5887]))                                  )
                                (reparse-symbol indented_block_body) [5849 6217])
                            ("make_index" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [6241 6245])
                                    ("data" variable nil (reparse-symbol function_parameters) [6247 6251])
                                    ("lab" variable nil (reparse-symbol function_parameters) [6253 6256]))                                  )
                                (reparse-symbol indented_block_body) [6226 8207])
                            ("format_date" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [8232 8236])
                                    ("data" variable nil (reparse-symbol function_parameters) [8238 8242]))                                  )
                                (reparse-symbol indented_block_body) [8216 8473])
                            ("available_labs" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [8501 8505]))                                  )
                                (reparse-symbol indented_block_body) [8482 8774])
                            ("available_virus_types" function
                               (:parent "dummy"
                                :arguments 
                                  ( ("self" variable nil (reparse-symbol function_parameters) [8809 8813]))                                  )
                                (reparse-symbol indented_block_body) [8783 9117]))                          
                        :type "class")
                        (reparse-symbol indented_block_body) [4672 9117]))                  
                :type "class")
                nil [351 9117]))          
      :file "api.py"
      :pointmax 9283
      :fsize 9282
      :lastmodtime '(22655 31758 0 0)
      :unmatched-syntax '((PERIOD 6336 . 6337) (FROM 6330 . 6334) (PERIOD 6335 . 6336) (PERIOD 1963 . 1964) (FROM 1957 . 1961) (PERIOD 1962 . 1963) (FROM 1923 . 1927) (PERIOD 1928 . 1929) (PERIOD 248 . 249) (FROM 242 . 246) (PERIOD 247 . 248) (PERIOD 221 . 222) (FROM 215 . 219) (PERIOD 220 . 221)))
    (semanticdb-table "semanticdb-table"
      :file "Virus.py"
      :fsize 2420
      :lastmodtime '(22655 31758 0 0))
    (semanticdb-table "semanticdb-table"
      :file "amino_acid_mutation.py"
      :fsize 3423
      :lastmodtime '(22655 31758 0 0))
    (semanticdb-table "semanticdb-table"
      :file "Annotations.py"
      :fsize 5105
      :lastmodtime '(22667 25832 0 0))
    (semanticdb-table "semanticdb-table"
      :file "Reassortant.py"
      :fsize 21575
      :lastmodtime '(22655 31758 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("traceback" include nil nil [113 133])
            ("re" include nil nil [113 133])
            ("logging" include nil nil [134 148])
            ("basic" include nil nil [206 218])
            ("timer" include nil nil [236 248])
            ("annotations" include nil nil [256 274])
            ("Reassortant" type
               (:superclasses ("basic.Base")
                :members 
                  ( ("_name_sorting" variable nil (reparse-symbol indented_block_body) [387 404])
                    ("complete" variable nil (reparse-symbol indented_block_body) [410 424])
                    ("incomplete" variable nil (reparse-symbol indented_block_body) [429 445])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [489 582]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [464 468])
                            ("fields" variable nil (reparse-symbol function_parameters) [470 478]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [451 583])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [600 604]))                          )
                        (reparse-symbol indented_block_body) [588 660])
                    ("to_string" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [679 683])
                            ("mark_incomplete" variable nil (reparse-symbol function_parameters) [685 700]))                          )
                        (reparse-symbol indented_block_body) [665 859])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [878 882])
                            ("mark_incomplete" variable nil (reparse-symbol function_parameters) [884 899])
                            ("mark_unrecognized" variable nil (reparse-symbol function_parameters) [907 924]))                          )
                        (reparse-symbol indented_block_body) [864 1017])
                    ("name_suffix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1038 1042]))                          )
                        (reparse-symbol indented_block_body) [1022 1098])
                    ("recognized" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1118 1122]))                          
                        :documentation "Returns if reassortant does not have incomplete parts.")
                        (reparse-symbol indented_block_body) [1103 1229])
                    ("__bool__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1247 1251]))                          )
                        (reparse-symbol indented_block_body) [1234 1314])
                    ("__eq__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1330 1334])
                            ("other" variable nil (reparse-symbol function_parameters) [1336 1341]))                          )
                        (reparse-symbol indented_block_body) [1319 2127])
                    ("elicit" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2160 2163])
                            ("data" variable nil (reparse-symbol function_parameters) [2165 2169]))                          )
                        (reparse-symbol indented_block_body) [2132 2836])
                    ("_make_complete_incomplete" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2888 2891])
                            ("source" variable nil (reparse-symbol function_parameters) [2893 2899]))                          )
                        (reparse-symbol indented_block_body) [2841 3282])
                    ("mongodb_to_db" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3305 3309]))                          )
                        (reparse-symbol indented_block_body) [3287 3487])
                    ("mongodb_from_db" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3529 3532])
                            ("data" variable nil (reparse-symbol function_parameters) [3534 3538]))                          )
                        (reparse-symbol indented_block_body) [3492 3720]))                  
                :type "class")
                nil [350 3720])
            ("normalize" function (:arguments 
              ( ("antigen_serum" variable nil (reparse-symbol function_parameters) [3809 3822])
                ("fields" variable nil (reparse-symbol function_parameters) [3824 3830])
                ("reassortant" variable nil (reparse-symbol function_parameters) [3832 3843])
                ("validation_data" variable nil (reparse-symbol function_parameters) [3845 3860])
                ("validation_message_args" variable nil (reparse-symbol function_parameters) [3862 3887]))              ) nil [3795 5077]))          
      :file "reassortant.py"
      :pointmax 21349
      :fsize 21575
      :lastmodtime '(22655 31758 0 0)
      :unmatched-syntax '((INDENT_BLOCK 4793 . 4987) (NEWLINE 4792 . 4793) (COLON 4791 . 4792) (TRY 4170 . 4173) (AS 4785 . 4787) (PERIOD 4193 . 4194) (FROM 4187 . 4191) (PERIOD 4192 . 4193) (INDENT_BLOCK 2726 . 2814) (NEWLINE 2725 . 2726) (COLON 2724 . 2725) (TRY 2180 . 2183) (AS 2718 . 2720) (FROM 249 . 253) (PERIOD 254 . 255) (PERIOD 225 . 226) (FROM 219 . 223) (PERIOD 224 . 225) (PERIOD 200 . 201) (FROM 194 . 198) (PERIOD 199 . 200)))
    (semanticdb-table "semanticdb-table"
      :file "annotations.py"
      :fsize 5105
      :lastmodtime '(22667 25832 0 0))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("re" include nil nil [131 140])
            ("logging" include nil nil [141 155])
            ("NameMaker" type
               (:members 
                  ( ("NAME_FIELDS" variable nil (reparse-symbol indented_block_body) [996 1080])
                    ("FIELDS_IGNORE" code nil (reparse-symbol indented_block_body) [1085 1279])
                    ("FIELDS_IGNORE_IN_FULL" code nil (reparse-symbol indented_block_body) [1284 1381])
                    ("FIELDS_IGNORE_IN_FULL_AND_LINEAGE" code nil (reparse-symbol indented_block_body) [1386 1457])
                    ("FIELDS_IGNORE_IN_FULL_NAME_ONLY" code nil (reparse-symbol indented_block_body) [1462 1554])
                    ("FIELDS_IGNORE_IN_FULL_NAME_ONLY_WITHOUT_ANNOTATIONS" code nil (reparse-symbol indented_block_body) [1559 1662])
                    ("FIELDS_IGNORE_IN_LISPMDS" variable nil (reparse-symbol indented_block_body) [1667 1796])
                    ("FIELDS_ORDER" variable nil (reparse-symbol indented_block_body) [1832 2053])
                    ("sReLispmdsSub" variable nil (reparse-symbol indented_block_body) [2059 2229])
                    ("sReWords" variable nil (reparse-symbol indented_block_body) [2235 2286])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2398 8863]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2383 2387]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2370 8864])
                    ("make_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8883 8887])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [8889 8902])
                            ("name_type" variable nil (reparse-symbol function_parameters) [8904 8913])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [8922 8930]))                          
                        :documentation "
        args:
          cdc_name_join: \"-\" or \" \" (default)
        ")
                        (reparse-symbol indented_block_body) [8869 9779])
                    ("name_types" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9799 9803]))                          )
                        (reparse-symbol indented_block_body) [9784 9839])
                    ("_name_long" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9937 9941])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [9943 9956])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [9958 9966]))                          )
                        (reparse-symbol indented_block_body) [9922 10331])
                    ("_name_short" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10352 10356])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [10358 10371])
                            ("cdcid" variable nil (reparse-symbol function_parameters) [10373 10378])
                            ("lab_id" variable nil (reparse-symbol function_parameters) [10386 10392])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10400 10408]))                          )
                        (reparse-symbol indented_block_body) [10336 10846])
                    ("_name_abbreviated" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10873 10877])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [10879 10892])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10894 10902]))                          )
                        (reparse-symbol indented_block_body) [10851 11116])
                    ("_name_abbreviated_location_year" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11157 11161])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [11163 11176])
                            ("join_name" variable nil (reparse-symbol function_parameters) [11178 11187])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [11189 11197]))                          )
                        (reparse-symbol indented_block_body) [11121 11501])
                    ("_fields_with_names" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11529 11533])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [11535 11548])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [11550 11558]))                          )
                        (reparse-symbol indented_block_body) [11506 11685])
                    ("_all_fields_with_names" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11717 11721])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [11723 11736])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [11738 11746]))                          )
                        (reparse-symbol indented_block_body) [11690 12111])
                    ("_fields_full" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12133 12137])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [12139 12152])
                            ("join_parts" variable nil (reparse-symbol function_parameters) [12154 12164])
                            ("lineage" variable nil (reparse-symbol function_parameters) [12170 12177])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [12184 12192]))                          )
                        (reparse-symbol indented_block_body) [12116 12370])
                    ("_fields_full_name_only" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12402 12406])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [12408 12421])
                            ("join_parts" variable nil (reparse-symbol function_parameters) [12423 12433])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [12439 12447]))                          )
                        (reparse-symbol indented_block_body) [12375 12580])
                    ("_fields_full_name_only_without_annotations" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12632 12636])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [12638 12651])
                            ("join_parts" variable nil (reparse-symbol function_parameters) [12653 12663])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [12669 12677]))                          )
                        (reparse-symbol indented_block_body) [12585 12830])
                    ("_fields_lispmds" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12855 12859])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [12861 12874])
                            ("is_antigen" variable nil (reparse-symbol function_parameters) [12876 12886])
                            ("join_parts" variable nil (reparse-symbol function_parameters) [12888 12898])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [12904 12912]))                          )
                        (reparse-symbol indented_block_body) [12835 13050])
                    ("_passage_egg_serum_id" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13081 13085])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [13087 13100])
                            ("is_antigen" variable nil (reparse-symbol function_parameters) [13102 13112])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [13114 13122]))                          )
                        (reparse-symbol indented_block_body) [13055 13330])
                    ("_serum_id" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13349 13353])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [13355 13368])
                            ("is_antigen" variable nil (reparse-symbol function_parameters) [13370 13380])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [13382 13390]))                          )
                        (reparse-symbol indented_block_body) [13335 13537])
                    ("_name_long_standard" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13566 13570])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [13572 13585])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [13587 13595]))                          )
                        (reparse-symbol indented_block_body) [13542 13967])
                    ("_name_short_standard" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13997 14001])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [14003 14016])
                            ("virus_type_include" variable nil (reparse-symbol function_parameters) [14018 14036])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [14043 14051]))                          )
                        (reparse-symbol indented_block_body) [13972 14483])
                    ("_name_abbreviated_standard" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14519 14523])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [14525 14538])
                            ("location_truncate" variable nil (reparse-symbol function_parameters) [14540 14557])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [14564 14572]))                          )
                        (reparse-symbol indented_block_body) [14488 15074])
                    ("_name_long_cdc" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15098 15102])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [15104 15117])
                            ("cdc_abbreviation_for_cdc_names" variable nil (reparse-symbol function_parameters) [15119 15149])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [15156 15164]))                          )
                        (reparse-symbol indented_block_body) [15079 15382])
                    ("_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15397 15401])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [15403 15416])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [15418 15426]))                          )
                        (reparse-symbol indented_block_body) [15387 15463])
                    ("_hom_max" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [15481 15485])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [15487 15500])
                            ("is_antigen" variable nil (reparse-symbol function_parameters) [15502 15512])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [15514 15522]))                          )
                        (reparse-symbol indented_block_body) [15468 16303])
                    ("_postprocess_default" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16411 16415])
                            ("name" variable nil (reparse-symbol function_parameters) [16417 16421])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [16423 16436])
                            ("replace_spaces" variable nil (reparse-symbol function_parameters) [16438 16452])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [16459 16467]))                          )
                        (reparse-symbol indented_block_body) [16386 16582])
                    ("_postprocess_lispmds" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16612 16616])
                            ("name" variable nil (reparse-symbol function_parameters) [16618 16622])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [16624 16637])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [16639 16647]))                          )
                        (reparse-symbol indented_block_body) [16587 16828])
                    ("_postprocess_acmacs_web_edit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16866 16870])
                            ("name" variable nil (reparse-symbol function_parameters) [16872 16876])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [16878 16891])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [16893 16901]))                          )
                        (reparse-symbol indented_block_body) [16833 17154])
                    ("_postprocess_truncate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17185 17189])
                            ("name" variable nil (reparse-symbol function_parameters) [17191 17195])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [17197 17210])
                            ("truncate_at" variable nil (reparse-symbol function_parameters) [17212 17223])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [17225 17233]))                          )
                        (reparse-symbol indented_block_body) [17159 17362])
                    ("_postprocess_capitalized" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17396 17400])
                            ("name" variable nil (reparse-symbol function_parameters) [17402 17406])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [17408 17421])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [17423 17431]))                          )
                        (reparse-symbol indented_block_body) [17367 17608])
                    ("_year" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17701 17705])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [17707 17720])
                            ("year_short" variable nil (reparse-symbol function_parameters) [17722 17732])
                            ("omit_year" variable nil (reparse-symbol function_parameters) [17740 17749])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [17757 17765]))                          )
                        (reparse-symbol indented_block_body) [17691 17960])
                    ("_get_fields" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17981 17985])
                            ("antigen_serum" variable nil (reparse-symbol function_parameters) [17987 18000])
                            ("ignore" variable nil (reparse-symbol function_parameters) [18002 18008])
                            ("no_passage" variable nil (reparse-symbol function_parameters) [18010 18020])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [18028 18036]))                          )
                        (reparse-symbol indented_block_body) [17965 18428]))                  
                :type "class")
                nil [974 18428])
            ("NameMakerInfluenza" type
               (:superclasses ("NameMaker")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [18545 18549]))                  
                :type "class")
                nil [18503 18550])
            ("sNameMaker" variable nil nil [18639 18663])
            ("sNameMakerInfluenza" variable nil nil [18664 18706])
            ("name_types" function nil nil [18708 18770]))          
      :file "name_maker.py"
      :pointmax 18936
      :fsize 18935
      :lastmodtime '(22655 31758 0 0)
      :unmatched-syntax nil))
  :file "!Users!eu!ac!acmacs!acmacs!viruses!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
